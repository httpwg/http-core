<section xmlns:x="http://purl.org/net/xml2rfc/ext" title="Collected ABNF" anchor="collected.abnf">
<t>In the collected ABNF below, list rules are expanded as per <xref target="abnf.extension"/>.</t><figure>
<artwork type="abnf" name="draft-ietf-httpbis-semantics.parsed-abnf">
<x:ref>Accept</x:ref> = [ ( "," / ( media-range [ accept-params ] ) ) *( OWS "," [
 OWS ( media-range [ accept-params ] ) ] ) ]
<x:ref>Accept-Charset</x:ref> = *( "," OWS ) ( ( charset / "*" ) [ weight ] ) *( OWS
 "," [ OWS ( ( charset / "*" ) [ weight ] ) ] )
<x:ref>Accept-Encoding</x:ref> = [ ( "," / ( codings [ weight ] ) ) *( OWS "," [ OWS
 ( codings [ weight ] ) ] ) ]
<x:ref>Accept-Language</x:ref> = *( "," OWS ) ( language-range [ weight ] ) *( OWS
 "," [ OWS ( language-range [ weight ] ) ] )
<x:ref>Accept-Ranges</x:ref> = acceptable-ranges
<x:ref>Age</x:ref> = delta-seconds
<x:ref>Allow</x:ref> = [ ( "," / method ) *( OWS "," [ OWS method ] ) ]
<x:ref>Authorization</x:ref> = credentials

<x:ref>BWS</x:ref> = OWS

<x:ref>Cache-Control</x:ref> = *( "," OWS ) cache-directive *( OWS "," [ OWS
 cache-directive ] )
<x:ref>Content-Encoding</x:ref> = *( "," OWS ) content-coding *( OWS "," [ OWS
 content-coding ] )
<x:ref>Content-Language</x:ref> = *( "," OWS ) language-tag *( OWS "," [ OWS
 language-tag ] )
<x:ref>Content-Location</x:ref> = absolute-URI / partial-URI
<x:ref>Content-Range</x:ref> = byte-content-range / other-content-range
<x:ref>Content-Type</x:ref> = media-type

<x:ref>Date</x:ref> = HTTP-date

<x:ref>ETag</x:ref> = entity-tag
<x:ref>Expect</x:ref> = "100-continue"
<x:ref>Expires</x:ref> = HTTP-date

<x:ref>From</x:ref> = mailbox

<x:ref>GMT</x:ref> = %x47.4D.54 ; GMT

<x:ref>HTTP-date</x:ref> = IMF-fixdate / obs-date
<x:ref>HTTP-name</x:ref> = %x48.54.54.50 ; HTTP
<x:ref>HTTP-version</x:ref> = HTTP-name "/" DIGIT "." DIGIT

<x:ref>IMF-fixdate</x:ref> = day-name "," SP date1 SP time-of-day SP GMT
<x:ref>If-Match</x:ref> = "*" / ( *( "," OWS ) entity-tag *( OWS "," [ OWS
 entity-tag ] ) )
<x:ref>If-Modified-Since</x:ref> = HTTP-date
<x:ref>If-None-Match</x:ref> = "*" / ( *( "," OWS ) entity-tag *( OWS "," [ OWS
 entity-tag ] ) )
<x:ref>If-Range</x:ref> = entity-tag / HTTP-date
<x:ref>If-Unmodified-Since</x:ref> = HTTP-date

<x:ref>Last-Modified</x:ref> = HTTP-date
<x:ref>Location</x:ref> = URI-reference

<x:ref>Max-Forwards</x:ref> = 1*DIGIT

<x:ref>OWS</x:ref> = *( SP / HTAB )

<x:ref>Pragma</x:ref> = *( "," OWS ) pragma-directive *( OWS "," [ OWS
 pragma-directive ] )
<x:ref>Proxy-Authenticate</x:ref> = *( "," OWS ) challenge *( OWS "," [ OWS
 challenge ] )
<x:ref>Proxy-Authorization</x:ref> = credentials

<x:ref>RWS</x:ref> = 1*( SP / HTAB )
<x:ref>Range</x:ref> = byte-ranges-specifier / other-ranges-specifier
<x:ref>Referer</x:ref> = absolute-URI / partial-URI
<x:ref>Retry-After</x:ref> = HTTP-date / delay-seconds

<x:ref>Server</x:ref> = product *( RWS ( product / comment ) )

<x:ref>URI-reference</x:ref> = &lt;URI-reference, see <xref target="RFC3986" x:fmt="," x:sec="4.1"/>&gt;
<x:ref>User-Agent</x:ref> = product *( RWS ( product / comment ) )

<x:ref>Vary</x:ref> = "*" / ( *( "," OWS ) field-name *( OWS "," [ OWS field-name ]
 ) )

<x:ref>WWW-Authenticate</x:ref> = *( "," OWS ) challenge *( OWS "," [ OWS challenge
 ] )
<x:ref>Warning</x:ref> = *( "," OWS ) warning-value *( OWS "," [ OWS warning-value ]
 )

<x:ref>absolute-URI</x:ref> = &lt;absolute-URI, see <xref target="RFC3986" x:fmt="," x:sec="4.3"/>&gt;
<x:ref>absolute-path</x:ref> = 1*( "/" segment )
<x:ref>accept-ext</x:ref> = OWS ";" OWS token [ "=" ( token / quoted-string ) ]
<x:ref>accept-params</x:ref> = weight *accept-ext
<x:ref>acceptable-ranges</x:ref> = ( *( "," OWS ) range-unit *( OWS "," [ OWS
 range-unit ] ) ) / "none"
<x:ref>asctime-date</x:ref> = day-name SP date3 SP time-of-day SP year
<x:ref>auth-param</x:ref> = token BWS "=" BWS ( token / quoted-string )
<x:ref>auth-scheme</x:ref> = token
<x:ref>authority</x:ref> = &lt;authority, see <xref target="RFC3986" x:fmt="," x:sec="3.2"/>&gt;

<x:ref>byte-content-range</x:ref> = bytes-unit SP ( byte-range-resp /
 unsatisfied-range )
<x:ref>byte-range</x:ref> = first-byte-pos "-" last-byte-pos
<x:ref>byte-range-resp</x:ref> = byte-range "/" ( complete-length / "*" )
<x:ref>byte-range-set</x:ref> = *( "," OWS ) ( byte-range-spec /
 suffix-byte-range-spec ) *( OWS "," [ OWS ( byte-range-spec /
 suffix-byte-range-spec ) ] )
<x:ref>byte-range-spec</x:ref> = first-byte-pos "-" [ last-byte-pos ]
<x:ref>byte-ranges-specifier</x:ref> = bytes-unit "=" byte-range-set
<x:ref>bytes-unit</x:ref> = "bytes"

<x:ref>cache-directive</x:ref> = token [ "=" ( token / quoted-string ) ]
<x:ref>challenge</x:ref> = auth-scheme [ 1*SP ( token68 / [ ( "," / auth-param ) *(
 OWS "," [ OWS auth-param ] ) ] ) ]
<x:ref>charset</x:ref> = token
<x:ref>codings</x:ref> = content-coding / "identity" / "*"
<x:ref>comment</x:ref> = &lt;comment, see <xref target="MESSGNG" x:fmt="," x:sec="2.2.5"/>&gt;
<x:ref>complete-length</x:ref> = 1*DIGIT
<x:ref>content-coding</x:ref> = token
<x:ref>credentials</x:ref> = auth-scheme [ 1*SP ( token68 / [ ( "," / auth-param )
 *( OWS "," [ OWS auth-param ] ) ] ) ]

<x:ref>date1</x:ref> = day SP month SP year
<x:ref>date2</x:ref> = day "-" month "-" 2DIGIT
<x:ref>date3</x:ref> = month SP ( 2DIGIT / ( SP DIGIT ) )
<x:ref>day</x:ref> = 2DIGIT
<x:ref>day-name</x:ref> = %x4D.6F.6E ; Mon
 / %x54.75.65 ; Tue
 / %x57.65.64 ; Wed
 / %x54.68.75 ; Thu
 / %x46.72.69 ; Fri
 / %x53.61.74 ; Sat
 / %x53.75.6E ; Sun
<x:ref>day-name-l</x:ref> = %x4D.6F.6E.64.61.79 ; Monday
 / %x54.75.65.73.64.61.79 ; Tuesday
 / %x57.65.64.6E.65.73.64.61.79 ; Wednesday
 / %x54.68.75.72.73.64.61.79 ; Thursday
 / %x46.72.69.64.61.79 ; Friday
 / %x53.61.74.75.72.64.61.79 ; Saturday
 / %x53.75.6E.64.61.79 ; Sunday
<x:ref>delay-seconds</x:ref> = 1*DIGIT
<x:ref>delta-seconds</x:ref> = 1*DIGIT

<x:ref>entity-tag</x:ref> = [ weak ] opaque-tag
<x:ref>etagc</x:ref> = "!" / %x23-7E ; '#'-'~'
 / obs-text
<x:ref>extension-pragma</x:ref> = token [ "=" ( token / quoted-string ) ]

<x:ref>field-name</x:ref> = &lt;field-name, see <xref target="MESSGNG" x:fmt="," x:sec="2.2"/>&gt;
<x:ref>first-byte-pos</x:ref> = 1*DIGIT
<x:ref>fragment</x:ref> = &lt;fragment, see <xref target="RFC3986" x:fmt="," x:sec="3.5"/>&gt;

<x:ref>hour</x:ref> = 2DIGIT
<x:ref>http-URI</x:ref> = "http://" authority path-abempty [ "?" query ] [ "#"
 fragment ]
<x:ref>https-URI</x:ref> = "https://" authority path-abempty [ "?" query ] [ "#"
 fragment ]

<x:ref>language-range</x:ref> = &lt;language-range, see <xref target="RFC4647" x:fmt="," x:sec="2.1"/>&gt;
<x:ref>language-tag</x:ref> = &lt;Language-Tag, see <xref target="RFC5646" x:fmt="," x:sec="2.1"/>&gt;
<x:ref>last-byte-pos</x:ref> = 1*DIGIT

<x:ref>mailbox</x:ref> = &lt;mailbox, see <xref target="RFC5322" x:fmt="," x:sec="3.4"/>&gt;
<x:ref>media-range</x:ref> = ( "*/*" / ( type "/*" ) / ( type "/" subtype ) ) *( OWS
 ";" OWS parameter )
<x:ref>media-type</x:ref> = type "/" subtype *( OWS ";" OWS parameter )
<x:ref>method</x:ref> = token
<x:ref>minute</x:ref> = 2DIGIT
<x:ref>month</x:ref> = %x4A.61.6E ; Jan
 / %x46.65.62 ; Feb
 / %x4D.61.72 ; Mar
 / %x41.70.72 ; Apr
 / %x4D.61.79 ; May
 / %x4A.75.6E ; Jun
 / %x4A.75.6C ; Jul
 / %x41.75.67 ; Aug
 / %x53.65.70 ; Sep
 / %x4F.63.74 ; Oct
 / %x4E.6F.76 ; Nov
 / %x44.65.63 ; Dec

<x:ref>obs-date</x:ref> = rfc850-date / asctime-date
<x:ref>obs-text</x:ref> = &lt;obs-text, see <xref target="MESSGNG" x:fmt="," x:sec="2.2.5"/>&gt;
<x:ref>opaque-tag</x:ref> = DQUOTE *etagc DQUOTE
<x:ref>other-content-range</x:ref> = other-range-unit SP other-range-resp
<x:ref>other-range-resp</x:ref> = *CHAR
<x:ref>other-range-set</x:ref> = 1*VCHAR
<x:ref>other-range-unit</x:ref> = token
<x:ref>other-ranges-specifier</x:ref> = other-range-unit "=" other-range-set

<x:ref>parameter</x:ref> = token "=" ( token / quoted-string )
<x:ref>partial-URI</x:ref> = relative-part [ "?" query ]
<x:ref>path-abempty</x:ref> = &lt;path-abempty, see <xref target="RFC3986" x:fmt="," x:sec="3.3"/>&gt;
<x:ref>port</x:ref> = &lt;port, see <xref target="RFC3986" x:fmt="," x:sec="3.2.3"/>&gt;
<x:ref>pragma-directive</x:ref> = "no-cache" / extension-pragma
<x:ref>product</x:ref> = token [ "/" product-version ]
<x:ref>product-version</x:ref> = token
<x:ref>pseudonym</x:ref> = &lt;pseudonym, see <xref target="MESSGNG" x:fmt="," x:sec="4.7.1"/>&gt;

<x:ref>query</x:ref> = &lt;query, see <xref target="RFC3986" x:fmt="," x:sec="3.4"/>&gt;
<x:ref>quoted-string</x:ref> = &lt;quoted-string, see <xref target="MESSGNG" x:fmt="," x:sec="2.2.5"/>&gt;
<x:ref>qvalue</x:ref> = ( "0" [ "." *3DIGIT ] ) / ( "1" [ "." *3"0" ] )

<x:ref>range-unit</x:ref> = bytes-unit / other-range-unit
<x:ref>relative-part</x:ref> = &lt;relative-part, see <xref target="RFC3986" x:fmt="," x:sec="4.2"/>&gt;
<x:ref>rfc850-date</x:ref> = day-name-l "," SP date2 SP time-of-day SP GMT

<x:ref>second</x:ref> = 2DIGIT
<x:ref>segment</x:ref> = &lt;segment, see <xref target="RFC3986" x:fmt="," x:sec="3.3"/>&gt;
<x:ref>subtype</x:ref> = token
<x:ref>suffix-byte-range-spec</x:ref> = "-" suffix-length
<x:ref>suffix-length</x:ref> = 1*DIGIT

<x:ref>time-of-day</x:ref> = hour ":" minute ":" second
<x:ref>token</x:ref> = &lt;token, see <xref target="MESSGNG" x:fmt="," x:sec="2.2.5"/>&gt;
<x:ref>token68</x:ref> = 1*( ALPHA / DIGIT / "-" / "." / "_" / "~" / "+" / "/" )
 *"="
<x:ref>type</x:ref> = token

<x:ref>unsatisfied-range</x:ref> = "*/" complete-length
<x:ref>uri-host</x:ref> = &lt;host, see <xref target="RFC3986" x:fmt="," x:sec="3.2.2"/>&gt;

<x:ref>warn-agent</x:ref> = ( uri-host [ ":" port ] ) / pseudonym
<x:ref>warn-code</x:ref> = 3DIGIT
<x:ref>warn-date</x:ref> = DQUOTE HTTP-date DQUOTE
<x:ref>warn-text</x:ref> = quoted-string
<x:ref>warning-value</x:ref> = warn-code SP warn-agent SP warn-text [ SP warn-date
 ]
<x:ref>weak</x:ref> = %x57.2F ; W/
<x:ref>weight</x:ref> = OWS ";" OWS "q=" qvalue

<x:ref>year</x:ref> = 4DIGIT
</artwork>
</figure>
</section>