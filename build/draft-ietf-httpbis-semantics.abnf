
  comment       = <comment, see [MESSGNG], Section 2.2.5>
  field-name    = <field-name, see [MESSGNG], Section 2.2>
  quoted-string = <quoted-string, see [MESSGNG], Section 2.2.5>
  obs-text      = <obs-text, see [MESSGNG], Section 2.2.5>
  token         = <token, see [MESSGNG], Section 2.2.5>
  pseudonym     = <pseudonym, see [MESSGNG], Section 4.7.1>

  URI-reference = <URI-reference, see [RFC3986], Section 4.1>
  absolute-URI  = <absolute-URI, see [RFC3986], Section 4.3>
  relative-part = <relative-part, see [RFC3986], Section 4.2>
  authority     = <authority, see [RFC3986], Section 3.2>
  uri-host      = <host, see [RFC3986], Section 3.2.2>
  port          = <port, see [RFC3986], Section 3.2.3>
  path-abempty  = <path-abempty, see [RFC3986], Section 3.3>
  segment       = <segment, see [RFC3986], Section 3.3>
  query         = <query, see [RFC3986], Section 3.4>
  fragment      = <fragment, see [RFC3986], Section 3.5>

  absolute-path = 1*( "/" segment )
  partial-URI   = relative-part [ "?" query ]

  OWS            = *( SP / HTAB )
                 ; optional whitespace
  RWS            = 1*( SP / HTAB )
                 ; required whitespace
  BWS            = OWS
                 ; "bad" whitespace

  HTTP-version  = HTTP-name "/" DIGIT "." DIGIT
  HTTP-name     = %x48.54.54.50 ; "HTTP", case-sensitive

  http-URI = "http:" "//" authority path-abempty [ "?" query ]
             [ "#" fragment ]

  https-URI = "https:" "//" authority path-abempty [ "?" query ]
              [ "#" fragment ]

  media-type = type "/" subtype *( OWS ";" OWS parameter )
  type       = token
  subtype    = token

  parameter      = token "=" ( token / quoted-string )

  charset = token

  Content-Type = media-type

  content-coding   = token

  Content-Encoding = 1#content-coding

  language-tag = <Language-Tag, see [RFC5646], Section 2.1>

  Content-Language = 1#language-tag

  Content-Location = absolute-URI / partial-URI

  Content-Range       = byte-content-range
                      / other-content-range

  byte-content-range  = bytes-unit SP
                        ( byte-range-resp / unsatisfied-range )

  byte-range-resp     = byte-range "/" ( complete-length / "*" )
  byte-range          = first-byte-pos "-" last-byte-pos
  unsatisfied-range   = "*/" complete-length

  complete-length     = 1*DIGIT

  other-content-range = other-range-unit SP other-range-resp
  other-range-resp    = *CHAR

  method = token

  Expect  = "100-continue"

  Max-Forwards = 1*DIGIT

  If-Match = "*" / 1#entity-tag

  If-None-Match = "*" / 1#entity-tag

  If-Modified-Since = HTTP-date

  If-Unmodified-Since = HTTP-date

  If-Range = entity-tag / HTTP-date

  range-unit       = bytes-unit / other-range-unit

  bytes-unit       = "bytes"

  byte-ranges-specifier = bytes-unit "=" byte-range-set
  byte-range-set  = 1#( byte-range-spec / suffix-byte-range-spec )
  byte-range-spec = first-byte-pos "-" [ last-byte-pos ]
  first-byte-pos  = 1*DIGIT
  last-byte-pos   = 1*DIGIT

  suffix-byte-range-spec = "-" suffix-length
  suffix-length = 1*DIGIT

  other-range-unit = token

  Range = byte-ranges-specifier / other-ranges-specifier
  other-ranges-specifier = other-range-unit "=" other-range-set
  other-range-set = 1*VCHAR

  weight = OWS ";" OWS "q=" qvalue
  qvalue = ( "0" [ "." 0*3DIGIT ] )
         / ( "1" [ "." 0*3("0") ] )

  Accept = #( media-range [ accept-params ] )

  media-range    = ( "*/*"
                   / ( type "/" "*" )
                   / ( type "/" subtype )
                   ) *( OWS ";" OWS parameter )
  accept-params  = weight *( accept-ext )
  accept-ext = OWS ";" OWS token [ "=" ( token / quoted-string ) ]

  Accept-Charset = 1#( ( charset / "*" ) [ weight ] )

  Accept-Encoding  = #( codings [ weight ] )
  codings          = content-coding / "identity" / "*"

  Accept-Language = 1#( language-range [ weight ] )
  language-range  =
            <language-range, see [RFC4647], Section 2.1>

  auth-scheme    = token

  auth-param     = token BWS "=" BWS ( token / quoted-string )

  token68        = 1*( ALPHA / DIGIT /
                       "-" / "." / "_" / "~" / "+" / "/" ) *"="

  challenge   = auth-scheme [ 1*SP ( token68 / #auth-param ) ]

  credentials = auth-scheme [ 1*SP ( token68 / #auth-param ) ]

  Authorization = credentials

  Proxy-Authorization = credentials

  From    = mailbox

  mailbox = <mailbox, see [RFC5322], Section 3.4>

  Referer = absolute-URI / partial-URI

  User-Agent = product *( RWS ( product / comment ) )

  product         = token ["/" product-version]
  product-version = token

  HTTP-date    = IMF-fixdate / obs-date

  IMF-fixdate  = day-name "," SP date1 SP time-of-day SP GMT
  ; fixed length/zone/capitalization subset of the format
  ; see Section 3.3 of [RFC5322]

  day-name     = %x4D.6F.6E ; "Mon", case-sensitive
               / %x54.75.65 ; "Tue", case-sensitive
               / %x57.65.64 ; "Wed", case-sensitive
               / %x54.68.75 ; "Thu", case-sensitive
               / %x46.72.69 ; "Fri", case-sensitive
               / %x53.61.74 ; "Sat", case-sensitive
               / %x53.75.6E ; "Sun", case-sensitive

  date1        = day SP month SP year
               ; e.g., 02 Jun 1982

  day          = 2DIGIT
  month        = %x4A.61.6E ; "Jan", case-sensitive
               / %x46.65.62 ; "Feb", case-sensitive
               / %x4D.61.72 ; "Mar", case-sensitive
               / %x41.70.72 ; "Apr", case-sensitive
               / %x4D.61.79 ; "May", case-sensitive
               / %x4A.75.6E ; "Jun", case-sensitive
               / %x4A.75.6C ; "Jul", case-sensitive
               / %x41.75.67 ; "Aug", case-sensitive
               / %x53.65.70 ; "Sep", case-sensitive
               / %x4F.63.74 ; "Oct", case-sensitive
               / %x4E.6F.76 ; "Nov", case-sensitive
               / %x44.65.63 ; "Dec", case-sensitive
  year         = 4DIGIT

  GMT          = %x47.4D.54 ; "GMT", case-sensitive

  time-of-day  = hour ":" minute ":" second
               ; 00:00:00 - 23:59:60 (leap second)

  hour         = 2DIGIT
  minute       = 2DIGIT
  second       = 2DIGIT

  obs-date     = rfc850-date / asctime-date

  rfc850-date  = day-name-l "," SP date2 SP time-of-day SP GMT
  date2        = day "-" month "-" 2DIGIT
               ; e.g., 02-Jun-82

  day-name-l   = %x4D.6F.6E.64.61.79    ; "Monday", case-sensitive
         / %x54.75.65.73.64.61.79       ; "Tuesday", case-sensitive
         / %x57.65.64.6E.65.73.64.61.79 ; "Wednesday", case-sensitive
         / %x54.68.75.72.73.64.61.79    ; "Thursday", case-sensitive
         / %x46.72.69.64.61.79          ; "Friday", case-sensitive
         / %x53.61.74.75.72.64.61.79    ; "Saturday", case-sensitive
         / %x53.75.6E.64.61.79          ; "Sunday", case-sensitive

  asctime-date = day-name SP date3 SP time-of-day SP year
  date3        = month SP ( 2DIGIT / ( SP 1DIGIT ))
               ; e.g., Jun  2

  Date = HTTP-date

  Location = URI-reference

  Retry-After = HTTP-date / delay-seconds

  delay-seconds  = 1*DIGIT

  Vary = "*" / 1#field-name

  Last-Modified = HTTP-date

  ETag       = entity-tag

  entity-tag = [ weak ] opaque-tag
  weak       = %x57.2F ; "W/", case-sensitive
  opaque-tag = DQUOTE *etagc DQUOTE
  etagc      = %x21 / %x23-7E / obs-text
             ; VCHAR except double quotes, plus obs-text

  WWW-Authenticate = 1#challenge

  Proxy-Authenticate = 1#challenge

  Accept-Ranges     = acceptable-ranges
  acceptable-ranges = 1#range-unit / "none"

  Allow = #method

  Server = product *( RWS ( product / comment ) )

  delta-seconds  = 1*DIGIT

  Age = delta-seconds

  Cache-Control   = 1#cache-directive

  cache-directive = token [ "=" ( token / quoted-string ) ]

  Expires = HTTP-date

  Pragma           = 1#pragma-directive
  pragma-directive = "no-cache" / extension-pragma
  extension-pragma = token [ "=" ( token / quoted-string ) ]

  Warning       = 1#warning-value

  warning-value = warn-code SP warn-agent SP warn-text
                                        [ SP warn-date ]

  warn-code  = 3DIGIT
  warn-agent = ( uri-host [ ":" port ] ) / pseudonym
                  ; the name or pseudonym of the server adding
                  ; the Warning header field, for use in debugging
                  ; a single "-" is recommended when agent unknown
  warn-text  = quoted-string
  warn-date  = DQUOTE HTTP-date DQUOTE
