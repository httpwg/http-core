--- draft-ietf-httpbis-cache-latest.txt	2022-01-11 12:41:52.005671800 +0100
+++ rfc9111-to-be.txt	2022-01-11 09:30:53.816144600 +0100
@@ -2,17 +2,16 @@
 
 
 
-HTTP Working Group                                      R. Fielding, Ed.
-Internet-Draft                                                     Adobe
-Obsoletes: 7234 (if approved)                         M. Nottingham, Ed.
-Intended status: Standards Track                                  Fastly
-Expires: 15 July 2022                                    J. Reschke, Ed.
-                                                              greenbytes
-                                                         11 January 2022
+Internet Engineering Task Force (IETF)                  R. Fielding, Ed.
+Request for Comments: 9111                                         Adobe
+STD: 97                                               M. Nottingham, Ed.
+Obsoletes: 7234                                                   Fastly
+Category: Standards Track                                J. Reschke, Ed.
+ISSN: 2070-1721                                               greenbytes
+                                                            January 2022
 
 
                               HTTP Caching
-                    draft-ietf-httpbis-cache-latest
 
 Abstract
 
@@ -24,36 +23,19 @@
 
    This document obsoletes RFC 7234.
 
-Editorial Note
-
-   This note is to be removed before publishing as an RFC.
-
-   Discussion of this draft takes place on the HTTP working group
-   mailing list (ietf-http-wg@w3.org), which is archived at
-   <https://lists.w3.org/Archives/Public/ietf-http-wg/>.
-
-   Working Group information can be found at <https://httpwg.org/>;
-   source code and issues list for this draft can be found at
-   <https://github.com/httpwg/http-core>.
-
-   The changes in this draft are summarized in Appendix C.1.
-
 Status of This Memo
 
-   This Internet-Draft is submitted in full conformance with the
-   provisions of BCP 78 and BCP 79.
-
-   Internet-Drafts are working documents of the Internet Engineering
-   Task Force (IETF).  Note that other groups may also distribute
-   working documents as Internet-Drafts.  The list of current Internet-
-   Drafts is at https://datatracker.ietf.org/drafts/current/.
-
-   Internet-Drafts are draft documents valid for a maximum of six months
-   and may be updated, replaced, or obsoleted by other documents at any
-   time.  It is inappropriate to use Internet-Drafts as reference
-   material or to cite them other than as "work in progress."
+   This is an Internet Standards Track document.
 
-   This Internet-Draft will expire on 15 July 2022.
+   This document is a product of the Internet Engineering Task Force
+   (IETF).  It represents the consensus of the IETF community.  It has
+   received public review and has been approved for publication by the
+   Internet Engineering Steering Group (IESG).  Further information on
+   Internet Standards is available in Section 2 of RFC 7841.
+
+   Information about the current status of this document, any errata,
+   and how to provide feedback on it may be obtained at
+   https://www.rfc-editor.org/info/rfc9111.
 
 Copyright Notice
 
@@ -61,13 +43,14 @@
    document authors.  All rights reserved.
 
    This document is subject to BCP 78 and the IETF Trust's Legal
-   Provisions Relating to IETF Documents (https://trustee.ietf.org/
-   license-info) in effect on the date of publication of this document.
-   Please review these documents carefully, as they describe your rights
-   and restrictions with respect to this document.  Code Components
-   extracted from this document must include Revised BSD License text as
-   described in Section 4.e of the Trust Legal Provisions and are
-   provided without warranty as described in the Revised BSD License.
+   Provisions Relating to IETF Documents
+   (https://trustee.ietf.org/license-info) in effect on the date of
+   publication of this document.  Please review these documents
+   carefully, as they describe your rights and restrictions with respect
+   to this document.  Code Components extracted from this document must
+   include Revised BSD License text as described in Section 4.e of the
+   Trust Legal Provisions and are provided without warranty as described
+   in the Revised BSD License.
 
    This document may contain material from IETF Documents or IETF
    Contributions published or made publicly available before November
@@ -150,8 +133,6 @@
      9.2.  Informative References
    Appendix A.  Collected ABNF
    Appendix B.  Changes from RFC 7234
-   Appendix C.  Change Log
-     C.1.  Since draft-ietf-httpbis-cache-19
    Acknowledgements
    Index
    Authors' Addresses
@@ -196,8 +177,8 @@
 
    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
    "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
-   "OPTIONAL" in this document are to be interpreted as described in BCP
-   14 [RFC2119] [RFC8174] when, and only when, they appear in all
+   "OPTIONAL" in this document are to be interpreted as described in
+   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
    capitals, as shown here.
 
    Section 2 of [HTTP] defines conformance criteria and contains
@@ -337,14 +318,14 @@
       -  if the cache is shared: an "s-maxage" response directive (see
          Section 5.2.2.10);
 
-      -  a Cache Control extension that allows it to be cached (see
+      -  a cache extension that allows it to be cached (see
          Section 5.2.3); or
 
       -  a status code that is defined as heuristically cacheable (see
          Section 4.2.2).
 
-   Note that a cache-control extension can override any of the
-   requirements listed; see Section 5.2.3.
+   Note that a cache extension can override any of the requirements
+   listed; see Section 5.2.3.
 
    In this context, a cache has "understood" a request method or a
    response status code if it recognizes it and implements all specified
@@ -390,7 +371,7 @@
 
    Caches are required to update a stored response's header fields from
    another (typically newer) response in several situations; for
-   example, see Sections 3.4, 4.3.4 and 4.3.5.
+   example, see Sections 3.4, 4.3.4, and 4.3.5.
 
    When doing so, the cache MUST add each header field in the provided
    response to the stored response, replacing field values that are
@@ -480,8 +461,8 @@
    directive for that response.
 
    In this specification, the following response directives have such an
-   effect: must-revalidate (Section 5.2.2.2), public (Section 5.2.2.9),
-   and s-maxage (Section 5.2.2.10).
+   effect: "must-revalidate" (Section 5.2.2.2), public
+   (Section 5.2.2.9), and s-maxage (Section 5.2.2.10).
 
 4.  Constructing Responses from Caches
 
@@ -509,8 +490,8 @@
 
       -  successfully validated (see Section 4.3).
 
-   Note that a cache-control extension can override any of the
-   requirements listed; see Section 5.2.3.
+   Note that a cache extension can override any of the requirements
+   listed; see Section 5.2.3.
 
    When a stored response is used to satisfy a request without
    validation, a cache MUST generate an Age header field (Section 5.1),
@@ -527,12 +508,12 @@
 
    A cache can use a response that is stored or storable to satisfy
    multiple requests, provided that it is allowed to reuse that response
-   for the requests in question.  This enables caches to _collapse
+   for the requests in question.  This enables a cache to _collapse
    requests_ -- or combine multiple incoming requests into a single
    forward request upon a cache miss -- thereby reducing load on the
    origin server and network.  Note, however, that if the cache cannot
    use the returned response for some or all of the collapsed requests,
-   it will need to forward the request in order to satisfy them,
+   it will need to forward the requests in order to satisfy them,
    potentially introducing additional latency.
 
    When more than one suitable response is stored, a cache MUST use the
@@ -643,7 +624,7 @@
    freshness_lifetime is defined in Section 4.2.1; current_age is
    defined in Section 4.2.3.
 
-   Clients can send the max-age or min-fresh request directives
+   Clients can send the max-age or "min-fresh" request directives
    (Section 5.2.1) to suggest limits on the freshness calculations for
    the corresponding response.  However, caches are not required to
    honor them.
@@ -672,7 +653,8 @@
 4.2.1.  Calculating Freshness Lifetime
 
    A cache can calculate the freshness lifetime (denoted as
-   freshness_lifetime) of a response by using the first match of:
+   freshness_lifetime) of a response by evaluating the following rules
+   and using the first match:
 
    *  If the cache is shared and the s-maxage response directive
       (Section 5.2.2.10) is present, use its value, or
@@ -717,7 +699,7 @@
    responses without explicit freshness whose status codes are defined
    as _heuristically cacheable_ (e.g., see Section 15.1 of [HTTP]) and
    on responses without explicit freshness that have been marked as
-   explicitly cacheable (e.g., with a "public" response directive).
+   explicitly cacheable (e.g., with a public response directive).
 
    Note that in previous specifications, heuristically cacheable
    response status codes were called "cacheable by default".
@@ -807,16 +789,16 @@
    according to the calculations in Section 4.2.
 
    A cache MUST NOT generate a stale response if it is prohibited by an
-   explicit in-protocol directive (e.g., by a "no-cache" response
-   directive, a "must-revalidate" response directive, or an applicable
-   "s-maxage" or "proxy-revalidate" response directive; see
+   explicit in-protocol directive (e.g., by a no-cache response
+   directive, a must-revalidate response directive, or an applicable
+   s-maxage or "proxy-revalidate" response directive; see
    Section 5.2.2).
 
    A cache MUST NOT generate a stale response unless it is disconnected
    or doing so is explicitly permitted by the client or origin server
-   (e.g., by the max-stale request directive in Section 5.2.1, extension
-   directives such as those defined in [RFC5861], or configuration in
-   accordance with an out-of-band contract).
+   (e.g., by the "max-stale" request directive in Section 5.2.1,
+   extension directives such as those defined in [RFC5861], or
+   configuration in accordance with an out-of-band contract).
 
 4.3.  Validation
 
@@ -832,15 +814,15 @@
 4.3.1.  Sending a Validation Request
 
    When generating a conditional request for validation, a cache either
-   starts with a request it is attempting to satisfy, or -- if it is
+   starts with a request it is attempting to satisfy or -- if it is
    initiating the request independently -- synthesizes a request using a
    stored response by copying the method, target URI, and request header
    fields identified by the Vary header field (Section 4.1).
 
    It then updates that request with one or more precondition header
-   fields.  These contain validator metadata sourced from stored
+   fields.  These contain validator metadata sourced from a stored
    response(s) that has the same URI.  Typically, this will include only
-   the stored responses(s) that has the same cache key, although a cache
+   the stored response(s) that has the same cache key, although a cache
    is allowed to validate a response that it cannot choose with the
    request header fields it is sending (see Section 4.1).
 
@@ -979,8 +961,8 @@
    requirements in Section 4, except the last requirement to be fresh,
    able to be served stale, or just validated.
 
-   Then, that initial set of stored response(s) is further filtered by
-   the first match of:
+   Then, that initial set of stored responses is further filtered by the
+   first match of:
 
    *  If the new response contains one or more _strong validators_ (see
       Section 8.8.1 of [HTTP]), then each of those strong validators
@@ -1057,7 +1039,7 @@
    attacks.
 
    _Invalidate_ means that the cache will either remove all stored
-   responses whose target URI matches the given URI or will mark them as
+   responses whose target URI matches the given URI or mark them as
    "invalid" and in need of a mandatory validation before they can be
    sent in response to a subsequent request.
 
@@ -1103,7 +1085,7 @@
    The "Cache-Control" header field is used to list directives for
    caches along the request/response chain.  Cache directives are
    unidirectional, in that the presence of a directive in a request does
-   not imply that the same directive is present ore copied in the
+   not imply that the same directive is present or copied in the
    response.
 
    See Section 5.2.3 for information about how Cache-Control directives
@@ -1137,7 +1119,7 @@
 
    Argument syntax:
 
-      delta-seconds (see Section 1.2.2)
+         delta-seconds (see Section 1.2.2)
 
    The "max-age" request directive indicates that the client prefers a
    response whose age is less than or equal to the specified number of
@@ -1152,7 +1134,7 @@
 
    Argument syntax:
 
-      delta-seconds (see Section 1.2.2)
+         delta-seconds (see Section 1.2.2)
 
    The "max-stale" request directive indicates that the client will
    accept a response that has exceeded its freshness lifetime.  If a
@@ -1169,7 +1151,7 @@
 
    Argument syntax:
 
-      delta-seconds (see Section 1.2.2)
+         delta-seconds (see Section 1.2.2)
 
    The "min-fresh" request directive indicates that the client prefers a
    response whose freshness lifetime is no less than its current age
@@ -1229,7 +1211,7 @@
 
    Argument syntax:
 
-      delta-seconds (see Section 1.2.2)
+         delta-seconds (see Section 1.2.2)
 
    The "max-age" response directive indicates that the response is to be
    considered stale after its age is greater than the specified number
@@ -1279,7 +1261,7 @@
 
    Argument syntax:
 
-      #field-name
+         #field-name
 
    The "no-cache" response directive, in its unqualified form (without
    an argument), indicates that the response MUST NOT be used to satisfy
@@ -1309,8 +1291,8 @@
 
       |  *Note:* The qualified form of the directive is often handled by
       |  caches as if an unqualified no-cache directive was received;
-      |  i.e., the special handling for the qualified form is not widely
-      |  implemented.
+      |  that is, the special handling for the qualified form is not
+      |  widely implemented.
 
 5.2.2.5.  no-store
 
@@ -1342,7 +1324,7 @@
 
    Argument syntax:
 
-      #field-name
+         #field-name
 
    The unqualified "private" response directive indicates that a shared
    cache MUST NOT store the response (i.e., the response is intended for
@@ -1405,19 +1387,19 @@
 
    Argument syntax:
 
-      delta-seconds (see Section 1.2.2)
+         delta-seconds (see Section 1.2.2)
 
    The "s-maxage" response directive indicates that, for a shared cache,
    the maximum age specified by this directive overrides the maximum age
    specified by either the max-age directive or the Expires header
    field.
 
-   The s-maxage directive incorporates the semantics of the proxy-
-   revalidate (Section 5.2.2.8) response directive for a shared cache.
-   A shared cache MUST NOT reuse a stale response with s-maxage to
-   satisfy another request until it has been successfully validated by
-   the origin, as defined by Section 4.3.  This directive also permits a
-   shared cache to reuse a response to a request containing an
+   The s-maxage directive incorporates the semantics of the
+   proxy-revalidate response directive (Section 5.2.2.8) for a shared
+   cache.  A shared cache MUST NOT reuse a stale response with s-maxage
+   to satisfy another request until it has been successfully validated
+   by the origin, as defined by Section 4.3.  This directive also
+   permits a shared cache to reuse a response to a request containing an
    Authorization header field, subject to the above requirements on
    maximum age and revalidation (Section 3.5).
 
@@ -1441,15 +1423,15 @@
    understand the new directive will default to the behavior specified
    by the old directive, and those that understand the new directive
    will recognize it as modifying the requirements associated with the
-   old directive.  In this way, extensions to the existing cache-control
+   old directive.  In this way, extensions to the existing cache
    directives can be made without breaking deployed caches.
 
    For example, consider a hypothetical new response directive called
    "community" that acts as a modifier to the private directive: in
-   addition to private caches, only a cache that is shared only by
-   members of the named community is allowed to cache the response.  An
-   origin server wishing to allow the UCI community to use an otherwise
-   private response in their shared cache(s) could do so by including
+   addition to private caches, only a cache that is shared by members of
+   the named community is allowed to cache the response.  An origin
+   server wishing to allow the UCI community to use an otherwise private
+   response in their shared cache(s) could do so by including
 
    Cache-Control: private, community="UCI"
 
@@ -1733,10 +1715,8 @@
 9.1.  Normative References
 
    [HTTP]     Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
-              Ed., "HTTP Semantics", Work in Progress, Internet-Draft,
-              draft-ietf-httpbis-semantics-latest, January 2022,
-              <https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-
-              semantics-latest>.
+              Ed., "HTTP Semantics", RFC 9110, DOI 10.17487/RFC9110,
+              January 2022, <https://www.rfc-editor.org/info/rfc9110>.
 
    [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
               Requirement Levels", BCP 14, RFC 2119,
@@ -1763,10 +1743,8 @@
               <https://www.rfc-editor.org/info/rfc6265>.
 
    [HTTP/1.1] Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
-              Ed., "HTTP/1.1", Work in Progress, Internet-Draft, draft-
-              ietf-httpbis-messaging-latest, January 2022,
-              <https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-
-              messaging-latest>.
+              Ed., "HTTP/1.1", RFC 9112, DOI 10.17487/RFC9112, January
+              2022, <https://www.rfc-editor.org/info/rfc9112>.
 
    [RFC2616]  Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,
               Masinter, L., Leach, P., and T. Berners-Lee, "Hypertext
@@ -1836,11 +1814,10 @@
    accept both token and quoted-string forms, but they still need to
    parse them properly for unknown extensions.  (Section 5.2)
 
-   The "public" and "private" cache directives were clarified, so that
-   they do not make responses reusable under any condition.
-   (Section 5.2.2)
+   The public and private cache directives were clarified, so that they
+   do not make responses reusable under any condition.  (Section 5.2.2)
 
-   The "must-understand" cache directive was introduced; caches are no
+   The must-understand cache directive was introduced; caches are no
    longer required to understand the semantics of new response status
    codes unless it is present.  (Section 5.2.2.3)
 
@@ -1850,21 +1827,10 @@
    entirely advisory.  In practice, Warning was not added by caches or
    intermediaries.  (Section 5.5)
 
-Appendix C.  Change Log
-
-   This section is to be removed before publishing as an RFC.
-
-   See <https://www.ietf.org/archive/id/draft-ietf-httpbis-cache-
-   19.html#appendix-C> for changes up to version 19 of this document.
-
-C.1.  Since draft-ietf-httpbis-cache-19
-
-   *  None.
-
 Acknowledgements
 
-   See Appendix "Acknowledgements" of [HTTP], which applies to this
-   document as well.
+   See the "Acknowledgements" section in [HTTP], which applies to this
+   document.
 
 Index
 
@@ -1974,7 +1940,7 @@
 
    Mark Nottingham (editor)
    Fastly
-   Prahran VIC
+   Prahran
    Australia
 
    Email: mnot@mnot.net
