--- ../build/draft-ietf-httpbis-cache-latest.redxml	2022-01-09 18:18:38.535949100 +0100
+++ rfc9111-to-be.xml	2022-01-09 13:43:34.775592100 +0100
@@ -1,37 +1,40 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<!--
-    This XML document is the output of clean-for-DTD.xslt; a tool that strips
-    extensions to RFC 7749 from documents for processing with xml2rfc.
--->
-<!--TARGET-GENERATOR: 202007-->
-<!--TARGET-VOCABULARY: 3-->
-<?xml-stylesheet type='text/xsl' href='lib/myxml2rfc.xslt'?>
-<?rfc toc="yes" ?>
-<?rfc tocdepth="4" ?>
-<?rfc symrefs="yes" ?>
-<?rfc sortrefs="yes" ?>
-<?rfc compact="yes"?>
-<?rfc subcompact="no" ?>
-<?rfc linkmailto="no" ?>
-<?rfc editing="no" ?>
-<?rfc comments="yes"?>
-<?rfc inline="yes"?>
-<?rfc rfcedstyle="yes"?>
-<?github-issue-label cache?>
+
+<!-- draft submitted in xml v3 -->
+
+<!DOCTYPE rfc [
+ <!ENTITY nbsp    "&#160;">
+ <!ENTITY zwsp   "&#8203;">
+ <!ENTITY nbhy   "&#8209;">
+ <!ENTITY wj     "&#8288;">
+]> 
+
 <rfc version="3"
+     tocInclude="true"
      tocDepth="4"
      sortRefs="true"
+     symRefs="true"
+     submissionType="IETF"
      category="std"
+     consensus="true" 
      ipr="pre5378Trust200902"
-     docName="draft-ietf-httpbis-cache-latest"
-     obsoletes="7234">
-<!--see https://trac.tools.ietf.org/tools/xml2rfc/trac/ticket/420-->
+     docName="draft-ietf-httpbis-cache-19"
+     number="9111"
+     obsoletes="7234"
+     updates=""
+     xmlns:xi="http://www.w3.org/2001/XInclude"
+     xml:lang="en">
+
+
+<!--Note: see https://trac.tools.ietf.org/tools/xml2rfc/trac/ticket/420-->
+<!-- 
 <?v3xml2rfc silence="Warning: Setting consensus="true" for IETF STD document"?>
 <?v3xml2rfc silence="Warning: Expected a valid submissionType (stream) setting"?>
-<!--see https://trac.tools.ietf.org/tools/xml2rfc/trac/ticket/439-->
-<?v3xml2rfc silence="The 'docName' attribute of the <rfc/> element"?>
+-->
    <front>
-      <title>HTTP Caching</title>
+     <title>HTTP Caching</title>
+     <seriesInfo name="RFC" value="9111"/>
+     <seriesInfo name="STD" value="97"/>
       <author fullname="Roy T. Fielding"
               initials="R."
               surname="Fielding"
@@ -39,9 +42,11 @@
          <organization>Adobe</organization>
          <address>
             <postal>
-               <postalLine>345 Park Ave</postalLine>
-               <postalLine>San Jose, CA 95110</postalLine>
-               <postalLine>United States of America</postalLine>
+               <street>345 Park Ave</street>
+               <city>San Jose</city>
+	       <region>CA</region>
+	       <code>95110</code>
+               <country>United States of America</country>
             </postal>
             <email>fielding@gbiv.com</email>
             <uri>https://roy.gbiv.com/</uri>
@@ -54,8 +59,8 @@
          <organization>Fastly</organization>
          <address>
             <postal>
-               <postalLine>Prahran VIC</postalLine>
-               <postalLine>Australia</postalLine>
+               <city>Prahran VIC</city>
+               <country>Australia</country>
             </postal>
             <email>mnot@mnot.net</email>
             <uri>https://www.mnot.net/</uri>
@@ -68,15 +73,16 @@
          <organization abbrev="greenbytes">greenbytes GmbH</organization>
          <address>
             <postal>
-               <postalLine>Hafenweg 16</postalLine>
-               <postalLine>48155 Münster</postalLine>
-               <postalLine>Germany</postalLine>
+              <street>Hafenweg 16</street>
+	      <city>Münster</city>
+               <code>48155</code> 
+               <country>Germany</country>
             </postal>
             <email>julian.reschke@greenbytes.de</email>
             <uri>https://greenbytes.de/tech/webdav/</uri>
          </address>
       </author>
-      <date/>
+      <date year="2022" month="January"/>
       <area>Applications and Real-Time</area>
       <workgroup>HTTP Working Group</workgroup>
       <keyword>Hypertext Transfer Protocol</keyword>
@@ -93,23 +99,6 @@
    This document obsoletes RFC 7234.
 </t>
       </abstract>
-      <note title="Editorial Note">
-         <t>This note is to be removed before publishing as an RFC.</t>
-         <t>
-    Discussion of this draft takes place on the HTTP working group
-    mailing list (ietf-http-wg@w3.org), which is archived at
-    <eref target="https://lists.w3.org/Archives/Public/ietf-http-wg/"
-                  brackets="angle"/>.
-  </t>
-         <t>
-    Working Group information can be found at <eref target="https://httpwg.org/" brackets="angle"/>;
-    source code and issues list for this draft can be found at
-    <eref target="https://github.com/httpwg/http-core" brackets="angle"/>.
-  </t>
-         <t>
-    The changes in this draft are summarized in <xref target="changes.since.19"/>.
-  </t>
-      </note>
    </front>
    <middle>
       <section anchor="caching" title="Introduction">
@@ -122,7 +111,8 @@
    defines aspects of HTTP related to caching and reusing response
    messages.
 </t>
-         <iref item="cache"/>
+<iref item="cache"/>
+
          <t>
    An HTTP <em>cache</em> is a local store of response messages and the
    subsystem that controls storage, retrieval, and deletion of messages in it.
@@ -154,16 +144,20 @@
          <t>
    This document obsoletes <xref target="RFC7234" format="none">RFC 7234</xref>,
    with the changes being summarized in <xref target="changes.from.rfc.7234"/>.
+   
 </t>
          <section anchor="requirements.notation" title="Requirements Notation">
-            <t>
-   The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>",
-   "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
-   "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
-   described in BCP 14 <xref target="RFC2119"/>
-               <xref target="RFC8174"/> when, and only when, they
-   appear in all capitals, as shown here.
-</t>
+
+<t>
+    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
+    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
+    NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
+    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
+    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are
+    to be interpreted as described in BCP&nbsp;14 <xref target="RFC2119"/>
+    <xref target="RFC8174"/> when, and only when, they appear in all capitals,
+    as shown here. 
+</t>	   
             <t>
                <xref target="HTTP" section="2"/> defines conformance criteria and contains considerations regarding error handling.
 </t>
@@ -190,7 +184,7 @@
 </t>
                <t anchor="imported.rules">
                   <xref target="HTTP"/> defines the following rules:
-</t>
+	       </t>
                <sourcecode type="abnf7230"><![CDATA[  HTTP-date     = <HTTP-date, see [HTTP], Section 5.6.7>
   OWS           = <OWS, see [HTTP], Section 5.6.3>
   field-name    = <field-name, see [HTTP], Section 5.1>
@@ -223,8 +217,7 @@
        binary form; an implementation could produce it as a string if
        any overflow occurs, even if the calculations are performed with an
        arithmetic type incapable of directly representing that number.
-       What matters here is that an overflow be detected and not treated as a
-       negative value in later calculations.
+       What matters here is that an overflow be detected and not treated as a negative value in later calculations.
    </t>
                </aside>
             </section>
@@ -244,7 +237,7 @@
    is the default behavior when no requirement or local configuration
    prevents it. Therefore, HTTP cache requirements are focused
    on preventing a cache from either storing a non-reusable response or
-   reusing a stored response inappropriately rather than mandating that
+   reusing a stored response inappropriately, rather than mandating that
    caches always store and reuse particular responses.
 </t>
          <iref item="cache key"/>
@@ -317,19 +310,19 @@
          and</t>
             </li>
             <li>
-               <t>the response contains at least one of:</t>
+               <t>the response contains at least one of the following:</t>
                <ul>
-                  <li>a public response directive
+                  <li>a "public" response directive
             (see <xref target="cache-response-directive.public"/>);</li>
-                  <li>a private response directive, if the cache is not shared
+                  <li>a "private" response directive, if the cache is not shared
             (see <xref target="cache-response-directive.private"/>);</li>
                   <li>an <xref target="field.expires" format="none">Expires</xref> header field
             (see <xref target="field.expires"/>);</li>
-                  <li>a max-age response directive
+                  <li>a "max-age" response directive
             (see <xref target="cache-response-directive.max-age"/>);</li>
-                  <li>if the cache is shared: an s-maxage response directive
+                  <li>if the cache is shared: an "s-maxage" response directive
             (see <xref target="cache-response-directive.s-maxage"/>);</li>
-                  <li>a Cache Control Extension that allows it to be cached
+                  <li>a Cache-Control extension that allows it to be cached
             (see <xref target="cache.control.extensions"/>); or</li>
                   <li>a status code that is defined as heuristically cacheable
             (see <xref target="heuristic.freshness"/>).</li>
@@ -337,7 +330,7 @@
             </li>
          </ul>
          <t>
-   Note that a cache-control extension can override any of the requirements
+   Note that a Cache-Control extension can override any of the requirements
    listed; see <xref target="cache.control.extensions"/>.
 </t>
          <t>
@@ -367,7 +360,7 @@
    before forwarding the message, and this <bcp14>MAY</bcp14> be implemented by doing so
    before storage; see <xref target="HTTP" section="7.6.1"/> for some
    examples.</li>
-               <li>The no-cache (<xref target="cache-response-directive.no-cache"/>) and
+               <li>The "no-cache" (<xref target="cache-response-directive.no-cache"/>) and
    private (<xref target="cache-response-directive.private"/>) cache
    directives can have arguments that prevent storage of header fields by all
    caches and shared caches, respectively.</li>
@@ -386,8 +379,8 @@
          <section anchor="update" title="Updating Stored Header Fields">
             <t>
    Caches are required to update a stored response's header fields from another
-   (typically newer) response in several situations; for example, see <xref target="combining.responses"/>, <xref target="freshening.responses"/> and
-   <xref target="head.effects"/>.
+   (typically newer) response in several situations; for example, see Sections <xref target="combining.responses" format="counter"/>, <xref target="freshening.responses" format="counter"/>, and
+   <xref target="head.effects" format="counter"/>.
 </t>
             <t>
    When doing so, the cache <bcp14>MUST</bcp14> add each header field in the provided response
@@ -422,7 +415,7 @@
 </t>
             <t>
    Furthermore, some fields are automatically processed and removed by the
-   HTTP implementation; for example, the Content-Range header field.
+   HTTP implementation, such as the Content-Range header field.
    Implementations <bcp14>MAY</bcp14> automatically omit such header fields from updates,
    even when the processing does not actually occur.
 </t>
@@ -432,10 +425,10 @@
 </t>
          </section>
          <section anchor="incomplete.responses" title="Storing Incomplete Responses">
-            <t>
+           <t>
    If the request method is GET, the response status code is 200
    (OK), and the entire response header section has been received, a
-   cache <bcp14>MAY</bcp14> store a response body that is not complete (<xref target="HTTP" section="3.4"/>) if the stored response
+   cache <bcp14>MAY</bcp14> store a response body that is not complete (<xref target="HTTP" section="6.1"/>) if the stored response
    is recorded as being incomplete. Likewise, a 206 (Partial
    Content) response <bcp14>MAY</bcp14> be stored as if it were an incomplete
    200 (OK) response. However, a cache <bcp14>MUST NOT</bcp14> store
@@ -483,7 +476,7 @@
 </t>
             <t>
    In this specification, the following response directives have such an effect:
-   must-revalidate (<xref target="cache-response-directive.must-revalidate"/>),
+   "must-revalidate" (<xref target="cache-response-directive.must-revalidate"/>),
    public (<xref target="cache-response-directive.public"/>), and
    s-maxage (<xref target="cache-response-directive.s-maxage"/>).
 </t>
@@ -494,10 +487,10 @@
          <t>
    When presented with a request, a cache <bcp14>MUST NOT</bcp14> reuse a stored response
    unless:
-</t>
+	 </t>
          <ul>
             <li>
-               <t>The presented target URI (<xref target="HTTP" section="7.1"/>) and
+               <t>the presented target URI (<xref target="HTTP" section="7.1"/>) and
    that of the stored response match, and</t>
             </li>
             <li>
@@ -514,7 +507,7 @@
    successfully validated (<xref target="validation.model"/>), and</t>
             </li>
             <li>
-               <t>the stored response is either:</t>
+               <t>the stored response is one of the following:</t>
                <ul>
                   <li>fresh (see <xref target="expiration.model"/>), or</li>
                   <li>allowed to be served stale (see <xref target="serving.stale.responses"/>), or</li>
@@ -523,7 +516,7 @@
             </li>
          </ul>
          <t>
-   Note that a cache-control extension can override any of the requirements
+   Note that a Cache-Control extension can override any of the requirements
    listed; see <xref target="cache.control.extensions"/>.
 </t>
          <t>
@@ -543,13 +536,15 @@
 </t>
          <iref item="collapsed requests"/>
          <t>
-   A response that is stored or storable can be used to satisfy multiple
-   requests, provided that it is allowed to reuse that response for the requests
-   in question. This enables caches to <em>collapse requests</em> -- or combine multiple incoming requests into a single forward
-   request upon a cache miss -- thereby reducing load on the origin server and network.
-   However, note that if the response returned is not able to be used for some or all
-   of the collapsed requests, additional latency might be introduced, because they will
-   need to be forwarded to be satisfied.
+   A cache can use a response that is stored or storable to satisfy 
+   multiple requests, provided that it is allowed to reuse that response 
+   for the requests in question. This enables a cache to <em>collapse 
+   requests</em> -- or combine multiple incoming requests into a single forward 
+   request upon a cache miss -- thereby reducing load on the origin server 
+   and network. Note, however, that if the cache cannot use the returned 
+   response for some or all of the collapsed requests, it will need to 
+   forward the requests in order to satisfy them, potentially introducing 
+   additional latency.
 </t>
          <t>
    When more than one suitable response is stored, a cache <bcp14>MUST</bcp14> use the
@@ -575,7 +570,7 @@
             <t>
    The header fields from two requests are defined to match if
    and only if those in the first request can be transformed to those in the
-   second request by applying any of:
+   second request by applying any of the following:
 </t>
             <ul>
                <li>
@@ -684,15 +679,15 @@
             <t>
   The calculation to determine if a response is fresh is:
 </t>
-            <artwork type="code"><![CDATA[
+            <sourcecode type="pseudocode"><![CDATA[
    response_is_fresh = (freshness_lifetime > current_age)
-]]></artwork>
+]]></sourcecode>
             <t>
    freshness_lifetime is defined in <xref target="calculating.freshness.lifetime"/>; current_age is defined in
    <xref target="age.calculations"/>.
 </t>
             <t>
-   Clients can send the max-age or min-fresh request directives (<xref target="cache-request-directive"/>) to suggest limits on the freshness
+   Clients can send the max-age or "min-fresh" request directives (<xref target="cache-request-directive"/>) to suggest limits on the freshness
    calculations for the corresponding response. However, caches are not
    required to honor them.
 </t>
@@ -721,7 +716,7 @@
                      title="Calculating Freshness Lifetime">
                <t>
    A cache can calculate the freshness lifetime (denoted as
-   freshness_lifetime) of a response by using the first match of:
+   freshness_lifetime) of a response by using the first match as follows:
 </t>
                <ul>
                   <li>If the cache is shared and the s-maxage response directive
@@ -757,18 +752,18 @@
    cache <bcp14>MAY</bcp14> assign a heuristic expiration time when an explicit time is not
    specified, employing algorithms that use other field values (such as
    the Last-Modified time) to estimate a plausible expiration
-   time. This specification does not provide specific algorithms, but does
+   time. This specification does not provide specific algorithms, but it does
    impose worst-case constraints on their results.
 </t>
                <t>
    A cache <bcp14>MUST NOT</bcp14> use heuristics to determine freshness when an explicit
    expiration time is present in the stored response. Because of the
-   requirements in <xref target="response.cacheability"/>, this means that
+   requirements in <xref target="response.cacheability"/>,
    heuristics can only be used on responses without explicit
    freshness whose status codes are defined as <em>heuristically cacheable</em> (e.g., see
-   <xref target="HTTP" section="15.1"/>), and those responses without
+   <xref target="HTTP" section="15.1"/>) and on responses without
    explicit freshness that have been marked as explicitly cacheable (e.g.,
-   with a "public" response directive).
+   with a public response directive).
 </t>
                <t>
    Note that in previous specifications, heuristically cacheable response status
@@ -779,13 +774,14 @@
    (<xref target="HTTP" section="8.8.2"/>), caches are encouraged to use a heuristic
    expiration value that is no more than some fraction of the interval since
    that time. A typical setting of this fraction might be 10%.
-</t>
+	       </t>
                <aside>
                   <t>
                      <strong>Note:</strong>
-                     <xref target="RFC2616" section="13.9"/> prohibited caches
+                     A previous version of the HTTP specification 
+      (<xref target="RFC2616" section="13.9"/>) prohibited caches
       from calculating heuristic freshness for URIs with query components
-      (i.e., those containing '?'). In practice, this has not been widely
+      (i.e., those containing "?"). In practice, this has not been widely
       implemented. Therefore, origin servers are encouraged to send explicit
       directives (e.g., Cache-Control: no-cache) if they wish to prevent
       caching.
@@ -805,7 +801,7 @@
                <t>
    Age calculation uses the following data:
 </t>
-               <dl newline="false">
+               <dl newline="true">
                   <dt>
                      <em>age_value</em>
                   </dt>
@@ -821,7 +817,7 @@
      The term "date_value" denotes the value of
      the Date header field, in a form appropriate for arithmetic
      operations. See <xref target="HTTP" section="6.6.1"/> for the definition of the Date header
-     field, and for requirements regarding responses without it.
+     field and for requirements regarding responses without it.
   </dd>
                   <dt>
                      <em>now</em>
@@ -858,30 +854,30 @@
    relative to the time the request was initiated, not the time that the
    response was received.</li>
                </ol>
-               <artwork type="code"><![CDATA[
+               <sourcecode type="pseudocode"><![CDATA[
   apparent_age = max(0, response_time - date_value);
 
   response_delay = response_time - request_time;
   corrected_age_value = age_value + response_delay;
-]]></artwork>
+]]></sourcecode>
                <t>
    The corrected_age_value <bcp14>MAY</bcp14> be used as the corrected_initial_age. In
    circumstances where very old cache implementations that might not correctly
    insert <xref target="field.age" format="none">Age</xref> are present, corrected_initial_age can be calculated
    more conservatively as
 </t>
-               <artwork type="code"><![CDATA[
+               <sourcecode type="pseudocode"><![CDATA[
   corrected_initial_age = max(apparent_age, corrected_age_value);
-]]></artwork>
+]]></sourcecode>
                <t>
    The current_age of a stored response can then be calculated by adding the
    time (in seconds) since the stored response was last validated by
    the origin server to the corrected_initial_age.
 </t>
-               <artwork type="code"><![CDATA[
+               <sourcecode type="pseudocode"><![CDATA[
   resident_time = now - response_time;
   current_age = corrected_initial_age + resident_time;
-]]></artwork>
+]]></sourcecode>
             </section>
             <section anchor="serving.stale.responses" title="Serving Stale Responses">
                <t>
@@ -891,25 +887,25 @@
 </t>
                <t>
    A cache <bcp14>MUST NOT</bcp14> generate a stale response if it is prohibited by an
-   explicit in-protocol directive (e.g., by a "no-cache" cache
-   directive, a "must-revalidate" cache-response-directive, or an applicable
-   "s-maxage" or "proxy-revalidate" cache-response-directive; see <xref target="cache-response-directive"/>).
+   explicit in-protocol directive (e.g., by a no-cache cache
+   directive, a must-revalidate response directive, or an applicable
+   s-maxage or "proxy-revalidate" response directive; see <xref target="cache-response-directive"/>).
 </t>
                <t>
    A cache <bcp14>MUST NOT</bcp14> generate a stale response unless it is disconnected
    or doing so is explicitly permitted by the client or origin server
-   (e.g., by the max-stale request directive in <xref target="cache-request-directive"/>, by extension directives such as those
-   defined in <xref target="RFC5861"/>, or by configuration in accordance
+   (e.g., by the "max-stale" request directive in <xref target="cache-request-directive"/>, extension directives such as those
+   defined in <xref target="RFC5861"/>, or configuration in accordance
    with an out-of-band contract).
 </t>
             </section>
          </section>
          <section anchor="validation.model" title="Validation">
-            <t>
+           <t>
    When a cache has one or more stored responses for a requested URI, but
    cannot serve any of them (e.g., because they are not fresh, or one cannot
    be chosen; see <xref target="caching.negotiated.responses"/>), it can use
-   the conditional request mechanism (<xref target="HTTP" section="13.1"/>) in the forwarded request to
+   the conditional request mechanism (<xref target="HTTP" section="13"/>) in the forwarded request to
    give the next inbound server an opportunity to choose a valid stored
    response to use, updating the stored metadata in the process, or to replace
    the stored response(s) with a new response. This process is known as
@@ -919,17 +915,17 @@
             <section anchor="validation.sent" title="Sending a Validation Request">
                <iref item="validator"/>
                <t>
-   When generating a conditional request for validation, a cache starts with
-   either a request it is attempting to satisfy, or -- if it is initiating
-   the request independently -- it synthesises a request using a stored
+   When generating a conditional request for validation, a cache either starts with
+   a request it is attempting to satisfy or -- if it is initiating
+   the request independently -- synthesizes a request using a stored
    response by copying the method, target URI, and request header fields
    identified by the Vary header field (<xref target="caching.negotiated.responses"/>).
 </t>
                <t>
    It then updates that request with one or more precondition header fields.
-   These contain validator metadata sourced from stored response(s) that have
-   the same URI. Typically, this will include only those stored responses(s) that
-   have the same cache key, although a cache is allowed to validate
+   These contain validator metadata sourced from a stored response(s) that has
+   the same URI. Typically, this will include only the stored response(s) that
+   has the same cache key, although a cache is allowed to validate
    a response that it cannot choose with the request header fields it is sending
    (see <xref target="caching.negotiated.responses"/>).
 </t>
@@ -1069,7 +1065,7 @@
    </li>
                   <li>
      A full response (i.e., one containing content) indicates that none
-     of the stored responses nominated in the conditional request is
+     of the stored responses nominated in the conditional request are
      suitable. Instead, the cache <bcp14>MUST</bcp14> use the full response to
      satisfy the request. The cache <bcp14>MAY</bcp14> store such a full response,
      subject to its constraints (see <xref target="response.cacheability"/>).
@@ -1077,7 +1073,7 @@
                   <li>
      However, if a cache receives a 5xx (Server Error)
      response while attempting to validate a response, it can either
-     forward this response to the requesting client, or act as if the
+     forward this response to the requesting client or act as if the
      server failed to respond. In the latter case, the cache can send a
      previously stored response, subject to its constraints on doing so (see <xref target="serving.stale.responses"/>), or retry the validation request.
    </li>
@@ -1093,18 +1089,18 @@
                <t>
    The initial set of stored responses to update are those that could have been chosen for
    that request -- i.e., those that meet the requirements in <xref target="constructing.responses.from.caches"/>, except the last requirement
-   to be fresh, able to be served stale or just validated.
+   to be fresh, served stale, or just validated.
 </t>
                <t>
-   Then, that initial set of stored response(s) is further filtered by the first match of:
+   Then, that initial set of stored response is further filtered by the first match of:
 </t>
                <ul>
                   <li>
      If the new response contains one or more <em>strong validators</em> (see
      <xref target="HTTP" section="8.8.1"/>), then each of those strong validators
-     identify a selected representation for update. All the stored
+     identifies a selected representation for update. All the stored
      responses in the initial set with one of those same strong validators are identified for update. If
-     none of the initial set contain at least one of the same strong validators, then the
+     none of the initial set contains at least one of the same strong validators, then the
      cache <bcp14>MUST NOT</bcp14> use the new response to update any stored responses.
    </li>
                   <li>
@@ -1185,7 +1181,7 @@
 </t>
             <t>
                <em>Invalidate</em> means that the cache will either remove all
-   stored responses whose target URI matches the given URI or will mark them
+   stored responses whose target URI matches the given URI or mark them
    as "invalid" and in need of a mandatory validation before they can be sent
    in response to a subsequent request.
 </t>
@@ -1245,9 +1241,9 @@
             <iref item="Cache-Control header field" primary="true"/>
             <t>
    The "Cache-Control" header field is used to list directives for caches
-   along the request/response chain. Such cache directives are unidirectional
-   in that the presence of a directive in a request does not imply that the
-   same directive is present in the response, or to be repeated in it.
+   along the request/response chain. Cache directives are unidirectional, 
+   in that the presence of a directive in a request does not imply that the 
+   same directive is present or copied in the response.
 </t>
             <t>
    See <xref target="cache.control.extensions"/> for information about how
@@ -1277,7 +1273,7 @@
    unless stated otherwise.
 </t>
             <section anchor="cache-request-directive"
-                     title="Request Cache-Control Directives">
+                     title="Request Directives">
                <t>
    This section defines cache request directives. They are advisory; caches
    <bcp14>MAY</bcp14> implement them, but are not required to.
@@ -1287,10 +1283,9 @@
                   <t>
    Argument syntax:
 </t>
-                  <ul empty="true">
-                     <li>
-                        <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)</li>
-                  </ul>
+                   <t indent="6">
+                        <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)
+</t>
                   <t>
    The "max-age" request directive indicates that the client prefers a
    response whose age is less than or equal to the specified number of
@@ -1308,10 +1303,9 @@
                   <t>
    Argument syntax:
 </t>
-                  <ul empty="true">
-                     <li>
-                        <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)</li>
-                  </ul>
+                   <t indent="6">
+                        <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)
+</t>
                   <t>
    The "max-stale" request directive indicates that the client will
    accept a response that has exceeded its freshness lifetime. If a value is
@@ -1331,10 +1325,9 @@
                   <t>
    Argument syntax:
 </t>
-                  <ul empty="true">
-                     <li>
-                        <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)</li>
-                  </ul>
+                   <t indent="6">
+                        <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)
+</t>
                   <t>
    The "min-fresh" request directive indicates that the client prefers a
    response whose freshness lifetime is no less than its current age plus the
@@ -1351,7 +1344,7 @@
                   <iref item="no-cache (cache directive)" primary="true"/>
                   <t>
    The "no-cache" request directive indicates that the client prefers
-   stored response not be used to satisfy the request without successful
+   a stored response not be used to satisfy the request without successful
    validation on the origin server.
 </t>
                </section>
@@ -1360,7 +1353,7 @@
                   <t>
    The "no-store" request directive indicates that a cache <bcp14>MUST NOT</bcp14>
    store any part of either this request or any response to it. This
-   directive applies to both private and shared caches. "MUST NOT
+   directive applies to both private and shared caches. "<bcp14>MUST NOT</bcp14>
    store" in this context means that the cache <bcp14>MUST NOT</bcp14> intentionally
    store the information in non-volatile storage and <bcp14>MUST</bcp14> make a
    best-effort attempt to remove the information from volatile storage as
@@ -1391,14 +1384,13 @@
                   <t>
    The "only-if-cached" request directive indicates that the client only
    wishes to obtain a stored response. Caches that honor this request
-   directive <bcp14>SHOULD</bcp14>, upon receiving it, either respond using a stored
-   response consistent with the other constraints of the request, or
-   respond with a 504 (Gateway Timeout) status code.
+   directive <bcp14>SHOULD</bcp14>, upon receiving it, respond with either a stored
+   response consistent with the other constraints of the request or a 504 (Gateway Timeout) status code.
 </t>
                </section>
             </section>
             <section anchor="cache-response-directive"
-                     title="Response Cache-Control Directives">
+                     title="Response Directives">
                <t>
    This section defines cache response directives. A cache <bcp14>MUST</bcp14> obey the
    Cache-Control directives defined in this section.
@@ -1408,10 +1400,9 @@
                   <t>
    Argument syntax:
 </t>
-                  <ul empty="true">
-                     <li>
-                        <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)</li>
-                  </ul>
+                   <t indent="6">
+                        <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)
+</t>
                   <t>
    The "max-age" response directive indicates that the response is to be
    considered stale after its age is greater than the specified number of
@@ -1463,10 +1454,11 @@
    response's status code.
 </t>
                   <t>
-   Responses containing "must-understand" <bcp14>SHOULD</bcp14> also contain the "no-store" directive;
-   caches that implement "must-understand" <bcp14>SHOULD</bcp14> ignore the "no-store" directive
-   in responses that contain both directives and a status code that the cache
-   understands and conforms to any related caching requirements.
+   A response that contains the must-understand directive <bcp14>SHOULD</bcp14> 
+   also contain the no-store directive. When a cache that implements the
+   must-understand directive receives a response that includes it, 
+   the cache <bcp14>SHOULD</bcp14> ignore the no-store directive if it 
+   understands and implements the status code's caching requirements.
 </t>
                </section>
                <section anchor="cache-response-directive.no-cache" title="no-cache">
@@ -1474,10 +1466,9 @@
                   <t>
    Argument syntax:
 </t>
-                  <ul empty="true">
-                     <li>#<xref target="imported.rules" format="none">field-name</xref>
-                     </li>
-                  </ul>
+                   <t indent="6">
+                     #<xref target="imported.rules" format="none">field-name</xref>
+</t>
                   <t>
    The "no-cache" response directive, in its unqualified form (without an
    argument), indicates that the response <bcp14>MUST NOT</bcp14> be used to satisfy any
@@ -1490,13 +1481,13 @@
    been configured to send stale responses.
 </t>
                   <t>
-   The qualified form of no-cache response directive, with an argument that
+   The qualified form of the no-cache response directive, with an argument that
    lists one or more field names, indicates that a cache <bcp14>MAY</bcp14> use the
    response to satisfy a subsequent request, subject to any other restrictions
    on caching, if the listed header fields are excluded from the subsequent
    response or the subsequent response has been successfully revalidated with
    the origin server (updating or removing those fields).
-   This allows an origin server to prevent the re-use of certain header
+   This allows an origin server to prevent the reuse of certain header
    fields in a response, while still allowing caching of the rest of the
    response.
 </t>
@@ -1513,7 +1504,7 @@
                      <t>
                         <strong>Note:</strong> The
    qualified form of the directive is often handled by caches as if an
-   unqualified no-cache directive was received; i.e., the special handling
+   unqualified no-cache directive was received; that is, the special handling
    for the qualified form is not widely implemented.
 </t>
                   </aside>
@@ -1522,11 +1513,11 @@
                   <iref item="no-store (cache directive)" primary="true"/>
                   <t>
    The "no-store" response directive indicates that a cache <bcp14>MUST NOT</bcp14> store
-   any part of either the immediate request or response and <bcp14>MUST NOT</bcp14> use
+   any part of either the immediate request or the response and <bcp14>MUST NOT</bcp14> use
    the response to satisfy any other request.
 </t>
                   <t>
-   This directive applies to both private and shared caches. "MUST NOT
+   This directive applies to both private and shared caches. "<bcp14>MUST NOT</bcp14>
    store" in this context means that the cache <bcp14>MUST NOT</bcp14> intentionally store
    the information in non-volatile storage and <bcp14>MUST</bcp14> make a best-effort
    attempt to remove the information from volatile storage as promptly as
@@ -1539,7 +1530,7 @@
    vulnerable to eavesdropping.
 </t>
                   <t>
-   Note that the "must-understand" cache directive overrides "no-store" in certain
+   Note that the must-understand cache directive overrides no-store in certain
    circumstances; see <xref target="cache-response-directive.must-understand"/>.
 </t>
                </section>
@@ -1556,16 +1547,15 @@
                   <t>
    Argument syntax:
 </t>
-                  <ul empty="true">
-                     <li>#<xref target="imported.rules" format="none">field-name</xref>
-                     </li>
-                  </ul>
+                   <t indent="6">
+                     #<xref target="imported.rules" format="none">field-name</xref>
+</t>
                   <t>
    The unqualified "private" response directive indicates that
    a shared cache <bcp14>MUST NOT</bcp14> store the response (i.e., the response is
    intended for a single user).
    It also indicates that a private cache <bcp14>MAY</bcp14> store the response, subject
-   the constraints defined in <xref target="response.cacheability"/>, even if
+   to the constraints defined in <xref target="response.cacheability"/>, even if
    the response would not otherwise be heuristically cacheable by a private
    cache.
 </t>
@@ -1592,7 +1582,7 @@
    where the response can be stored; it cannot ensure the privacy of the
    message content. Also, the qualified form of the directive is
    often handled by caches as if an unqualified private directive
-   was received; i.e., the special handling for the qualified form is not
+   was received; that is, the special handling for the qualified form is not
    widely implemented.
 </t>
                   </aside>
@@ -1609,7 +1599,7 @@
    except that proxy-revalidate does not apply to private caches.
 </t>
                   <t>
-   Note that "proxy-revalidate" on its own does not imply that a response is
+   Note that proxy-revalidate on its own does not imply that a response is
    cacheable. For example, it might be combined with the public directive
    (<xref target="cache-response-directive.public"/>), allowing the response
    to be cached while requiring only a shared cache to revalidate when stale.
@@ -1639,10 +1629,9 @@
                   <t>
    Argument syntax:
 </t>
-                  <ul empty="true">
-                     <li>
-                        <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)</li>
-                  </ul>
+                   <t indent="6">
+                        <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)
+</t>
                   <t>
    The "s-maxage" response directive indicates that, for a shared cache, the
    maximum age specified by this directive overrides the maximum age
@@ -1651,8 +1640,8 @@
 </t>
                   <t>
    The s-maxage directive incorporates the
-   proxy-revalidate (<xref target="cache-response-directive.proxy-revalidate"/>)
-   response directive's semantics for a shared cache.
+   semantics of the proxy&nbhy;revalidate response directive (<xref target="cache-response-directive.proxy-revalidate"/>)
+   for a shared cache.
    A shared cache <bcp14>MUST NOT</bcp14> reuse a stale response with s-maxage to satisfy
    another request until it has been successfully validated by the origin, as
    defined by <xref target="validation.model"/>.
@@ -1668,7 +1657,7 @@
 </t>
                </section>
             </section>
-            <section anchor="cache.control.extensions" title="Cache Control Extensions">
+            <section anchor="cache.control.extensions" title="Extension Directives">
                <t>
    The Cache-Control header field can be extended through the use of one or
    more extension cache directives.
@@ -1686,12 +1675,12 @@
    behavior specified by the old directive, and those that understand the
    new directive will recognize it as modifying the requirements associated
    with the old directive. In this way, extensions to the existing
-   cache-control directives can be made without breaking deployed caches.
+   Cache-Control directives can be made without breaking deployed caches.
 </t>
                <t>
    For example, consider a hypothetical new response directive called
    "community" that acts as a modifier to the private directive: in addition
-   to private caches, any cache that is shared only by members of the named
+   to private caches, only a cache that is shared by members of the named
    community is allowed to cache the response. An origin server wishing to
    allow the UCI community to use an otherwise private response in their
    shared cache(s) could do so by including
@@ -1712,8 +1701,8 @@
                   <li>When the directive does not take an argument, what it means when an
   argument is present,</li>
                   <li>When the directive requires an argument, what it means when it is
-  missing,</li>
-                  <li>Whether the directive is specific to requests, responses, or able
+  missing, and</li>
+                  <li>Whether the directive is specific to requests, specific to responses, or able
   to be used in either.</li>
                </ul>
             </section>
@@ -1859,7 +1848,7 @@
    apparent to or easily controllable by the user, it is strongly encouraged to
    define its operation with respect to HTTP cache directives so as
    not to surprise authors who expect caching semantics
-   to be honoured. For example, while it might be reasonable to define an
+   to be honored. For example, while it might be reasonable to define an
    application cache "above" HTTP that allows a response containing
    Cache-Control: no-store to be reused for requests that are directly related
    to the request that fetched it (such as those created during the same page
@@ -1878,9 +1867,9 @@
    (<xref target="HTTP" section="17"/>).
 </t>
          <t>
-   Caches expose an additional attack surface, since the contents of
+   Caches expose an additional attack surface because the contents of
    the cache represent an attractive target for malicious exploitation.
-   Because cache contents persist after an HTTP request is complete, an attack
+   Since cache contents persist after an HTTP request is complete, an attack
    on the cache can reveal information long after a user believes that the
    information has been removed from the network. Therefore, cache contents
    need to be protected as sensitive information.
@@ -1888,8 +1877,8 @@
          <t>
    In particular, because private caches are restricted to a single user,
    they can be used to reconstruct a user's activity. As a result, it is
-   important for user agents to allow end users to control them; for example,
-   allowing stored responses to be removed for some or all origin servers.
+   important for user agents to allow end users to control them, for example,
+   by allowing stored responses to be removed for some or all origin servers.
 </t>
          <section anchor="cache.poisoning" title="Cache Poisoning">
             <t>
@@ -1908,14 +1897,14 @@
          </section>
          <section anchor="security.timing" title="Timing Attacks">
             <t>
-   Because one of the primary uses of a cache is to optimise performance,
-   its use can "leak" information about what resources have been previously
+   Because one of the primary uses of a cache is to optimize performance,
+   its use can "leak" information about which resources have been previously
    requested.
 </t>
             <t>
    For example, if a user visits a site and their browser caches some of its
    responses and then navigates to a second site, that site can attempt to
-   load responses it knows exists on the first site. If they load
+   load responses it knows exist on the first site. If they load
    quickly, it can be assumed that the user has visited that site, or even
    a specific page on it.
 </t>
@@ -1928,8 +1917,8 @@
          <section anchor="caching.of.sensitive.information"
                   title="Caching of Sensitive Information">
             <t>
-   Implementation and deployment flaws (as well as misunderstanding of cache
-   operation) might lead to caching of sensitive information (e.g.,
+   Implementation and deployment flaws (often led to by the misunderstanding of cache
+   operation) might lead to the caching of sensitive information (e.g.,
    authentication credentials) that is thought to be private, exposing it to
    unauthorized parties.
 </t>
@@ -1937,7 +1926,7 @@
    Note that the Set-Cookie response header field <xref target="COOKIE"/>
    does not inhibit caching; a cacheable response with a Set-Cookie header
    field can be (and often is) used to satisfy subsequent requests to caches.
-   Servers who wish to control caching of these responses are encouraged to
+   Servers that wish to control caching of these responses are encouraged to
    emit appropriate Cache-Control response header fields.
 </t>
          </section>
@@ -1953,8 +1942,8 @@
    Name Registry" at <eref target="https://www.iana.org/assignments/http-fields" brackets="angle"/>,
    as described in <xref target="HTTP" section="18.4"/>,
    with the field names listed in the table below:
-</t>
-            <!--AUTOGENERATED FROM extract-header-defs.xslt, do not edit manually-->
+	    </t>
+	    <!--AUTOGENERATED FROM extract-header-defs.xslt, do not edit manually-->
             <table align="left" anchor="iana.header.registration.table">
                <thead>
                   <tr>
@@ -2108,7 +2097,7 @@
                   </tr>
                </tbody>
             </table>
-            <!--(END)-->
+            <!--(END)--> 
          </section>
          <section anchor="warn.code.registration" title="Warn Code Registry">
             <t>
@@ -2127,206 +2116,64 @@
       </section>
    </middle>
    <back>
-      <displayreference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
-                        xmlns:x="http://purl.org/net/xml2rfc/ext"
-                        target="HTTP11"
-                        to="HTTP/1.1"/>
+
+<displayreference target="HTTP11" to="HTTP/1.1"/>
+
       <references>
          <name>References</name>
          <references>
             <name>Normative References</name>
-            <reference anchor="HTTP"><!--included from draft-ietf-httpbis-semantics-latest.xml-->
-               <front>
-                  <title>HTTP Semantics</title>
-                  <author fullname="Roy T. Fielding"
-                          initials="R."
-                          surname="Fielding"
-                          role="editor">
-                     <organization>Adobe</organization>
-                     <address>
-                        <postal>
-                           <postalLine>345 Park Ave</postalLine>
-                           <postalLine>San Jose, CA 95110</postalLine>
-                           <postalLine>United States of America</postalLine>
-                        </postal>
-                        <email>fielding@gbiv.com</email>
-                        <uri>https://roy.gbiv.com/</uri>
-                     </address>
-                  </author>
-                  <author fullname="Mark Nottingham"
-                          initials="M."
-                          surname="Nottingham"
-                          role="editor">
-                     <organization>Fastly</organization>
-                     <address>
-                        <postal>
-                           <postalLine>Prahran VIC</postalLine>
-                           <postalLine>Australia</postalLine>
-                        </postal>
-                        <email>mnot@mnot.net</email>
-                        <uri>https://www.mnot.net/</uri>
-                     </address>
-                  </author>
-                  <author fullname="Julian Reschke"
-                          initials="J."
-                          surname="Reschke"
-                          role="editor">
-                     <organization abbrev="greenbytes">greenbytes GmbH</organization>
-                     <address>
-                        <postal>
-                           <postalLine>Hafenweg 16</postalLine>
-                           <postalLine>48155 Münster</postalLine>
-                           <postalLine>Germany</postalLine>
-                        </postal>
-                        <email>julian.reschke@greenbytes.de</email>
-                        <uri>https://greenbytes.de/tech/webdav/</uri>
-                     </address>
-                  </author>
-                  <date year="2022" month="January"/>
-               </front>
-               <seriesInfo name="Internet-Draft" value="draft-ietf-httpbis-semantics-latest"/>
-            </reference>
-            <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119">
-               <front>
-                  <title>Key words for use in RFCs to Indicate Requirement Levels</title>
-                  <author initials="S." surname="Bradner" fullname="Scott Bradner"/>
-                  <date month="March" year="1997"/>
-               </front>
-               <seriesInfo name="BCP" value="14"/>
-               <seriesInfo name="RFC" value="2119"/>
-               <seriesInfo name="DOI" value="10.17487/RFC2119"/>
-            </reference>
-            <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174">
-               <front>
-                  <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
-                  <author initials="B." surname="Leiba" fullname="Barry Leiba"/>
-                  <date year="2017" month="May"/>
-               </front>
-               <seriesInfo name="BCP" value="14"/>
-               <seriesInfo name="RFC" value="8174"/>
-               <seriesInfo name="DOI" value="10.17487/RFC8174"/>
-            </reference>
-            <reference anchor="RFC5234" target="https://www.rfc-editor.org/info/rfc5234">
-               <front>
-                  <title abbrev="ABNF for Syntax Specifications">Augmented BNF for Syntax Specifications: ABNF</title>
-                  <author initials="D."
-                          surname="Crocker"
-                          fullname="Dave Crocker"
-                          role="editor"/>
-                  <author initials="P." surname="Overell" fullname="Paul Overell"/>
-                  <date month="January" year="2008"/>
-               </front>
-               <seriesInfo name="STD" value="68"/>
-               <seriesInfo name="RFC" value="5234"/>
-               <seriesInfo name="DOI" value="10.17487/RFC5234"/>
-            </reference>
-            <reference anchor="RFC7405" target="https://www.rfc-editor.org/info/rfc7405">
-               <front>
-                  <title>Case-Sensitive String Support in ABNF</title>
-                  <author initials="P." surname="Kyzivat" fullname="Dave Kyzivat"/>
-                  <date month="December" year="2014"/>
-               </front>
-               <seriesInfo name="RFC" value="7405"/>
-               <seriesInfo name="DOI" value="10.17487/RFC7405"/>
-            </reference>
+
+<!-- [HTTP][I-D.ietf-httpbis-semantics-19]; companion document RFC 9110 -->
+<reference anchor='HTTP' target='https://www.rfc-editor.org/info/rfc9110'>
+<front>
+<title>HTTP Semantics</title>
+<author initials='R' surname='Fielding' fullname='Roy Fielding' role="editor">
+<organization />
+</author>
+<author initials='M' surname='Nottingham' fullname='Mark Nottingham' role="editor">
+<organization />
+</author>
+<author initials='J' surname='Reschke' fullname='Julian Reschke' role="editor">
+<organization />
+</author>
+<date year='2022' month='January'/>
+</front>
+<seriesInfo name="RFC" value="9110"/>
+<seriesInfo name="DOI" value="10.17487/RFC9110"/>
+</reference>
+
+<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
+<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7405.xml"/>
+<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
+<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5234.xml"/>
+
          </references>
          <references>
             <name>Informative References</name>
-            <reference anchor="HTTP11"><!--included from draft-ietf-httpbis-messaging-latest.xml-->
-               <front>
-                  <title>HTTP/1.1</title>
-                  <author fullname="Roy T. Fielding"
-                          initials="R."
-                          surname="Fielding"
-                          role="editor">
-                     <organization>Adobe</organization>
-                     <address>
-                        <postal>
-                           <postalLine>345 Park Ave</postalLine>
-                           <postalLine>San Jose, CA 95110</postalLine>
-                           <postalLine>United States of America</postalLine>
-                        </postal>
-                        <email>fielding@gbiv.com</email>
-                        <uri>https://roy.gbiv.com/</uri>
-                     </address>
-                  </author>
-                  <author fullname="Mark Nottingham"
-                          initials="M."
-                          surname="Nottingham"
-                          role="editor">
-                     <organization>Fastly</organization>
-                     <address>
-                        <postal>
-                           <postalLine>Prahran VIC</postalLine>
-                           <postalLine>Australia</postalLine>
-                        </postal>
-                        <email>mnot@mnot.net</email>
-                        <uri>https://www.mnot.net/</uri>
-                     </address>
-                  </author>
-                  <author fullname="Julian Reschke"
-                          initials="J."
-                          surname="Reschke"
-                          role="editor">
-                     <organization abbrev="greenbytes">greenbytes GmbH</organization>
-                     <address>
-                        <postal>
-                           <postalLine>Hafenweg 16</postalLine>
-                           <postalLine>48155 Münster</postalLine>
-                           <postalLine>Germany</postalLine>
-                        </postal>
-                        <email>julian.reschke@greenbytes.de</email>
-                        <uri>https://greenbytes.de/tech/webdav/</uri>
-                     </address>
-                  </author>
-                  <date year="2022" month="January"/>
-               </front>
-               <seriesInfo name="Internet-Draft" value="draft-ietf-httpbis-messaging-latest"/>
-            </reference>
-            <reference anchor="RFC2616" target="https://www.rfc-editor.org/info/rfc2616">
-               <front>
-                  <title>Hypertext Transfer Protocol -- HTTP/1.1</title>
-                  <author fullname="R. Fielding" initials="R." surname="Fielding"/>
-                  <author fullname="J. Gettys" initials="J." surname="Gettys"/>
-                  <author fullname="J. Mogul" initials="J." surname="Mogul"/>
-                  <author fullname="H. Frystyk" initials="H." surname="Frystyk"/>
-                  <author fullname="L. Masinter" initials="L." surname="Masinter"/>
-                  <author fullname="P. Leach" initials="P." surname="Leach"/>
-                  <author fullname="T. Berners-Lee" initials="T." surname="Berners-Lee"/>
-                  <date month="June" year="1999"/>
-               </front>
-               <seriesInfo name="RFC" value="2616"/>
-               <seriesInfo name="DOI" value="10.17487/RFC2616"/>
-            </reference>
-            <reference anchor="RFC7234" target="https://www.rfc-editor.org/info/rfc7234">
-               <front>
-                  <title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
-                  <author initials="R."
-                          surname="Fielding"
-                          fullname="Roy T. Fielding"
-                          role="editor"/>
-                  <author initials="M."
-                          surname="Nottingham"
-                          fullname="Mark Nottingham"
-                          role="editor"/>
-                  <author initials="J."
-                          surname="Reschke"
-                          fullname="Julian F. Reschke"
-                          role="editor"/>
-                  <date month="June" year="2014"/>
-               </front>
-               <seriesInfo name="RFC" value="7234"/>
-               <seriesInfo name="DOI" value="10.17487/RFC7234"/>
-            </reference>
-            <reference anchor="RFC5861" target="https://www.rfc-editor.org/info/rfc5861">
-               <front>
-                  <title abbrev="HTTP stale controls">HTTP Cache-Control Extensions for Stale Content</title>
-                  <author initials="M." surname="Nottingham" fullname="Mark Nottingham"/>
-                  <date month="May" year="2010"/>
-               </front>
-               <seriesInfo name="RFC" value="5861"/>
-               <seriesInfo name="DOI" value="10.17487/RFC5861"/>
-            </reference>
+
+<!-- [HTTP/1.1] [draft-ietf-httpbis-messaging]; companion document RFC 9112 -->
+<reference anchor="HTTP11" target='https://www.rfc-editor.org/info/rfc9112'>
+<front>
+<title>HTTP/1.1</title>
+<author fullname="Roy Fielding" role="editor">
+<organization>Adobe</organization>
+</author>
+<author fullname="Mark Nottingham" role="editor">
+<organization>Fastly</organization>
+</author>
+<author fullname="Julian Reschke" role="editor">
+<organization>greenbytes GmbH</organization>
+</author>
+<date month="January" year="2022"/>
+</front>
+<seriesInfo name="RFC" value="9112"/>
+<seriesInfo name="DOI" value="10.17487/RFC9112"/>
+</reference>
+
+<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2616.xml"/>
+<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7234.xml"/>
+<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5861.xml"/>
             <reference anchor="COOKIE" target="https://www.rfc-editor.org/info/rfc6265">
                <front>
                   <title>HTTP State Management Mechanism</title>
@@ -2336,18 +2183,8 @@
                <seriesInfo name="RFC" value="6265"/>
                <seriesInfo name="DOI" value="10.17487/RFC6265"/>
             </reference>
-            <reference anchor="RFC8126" target="https://www.rfc-editor.org/info/rfc8126">
-               <front>
-                  <title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
-                  <author initials="M." surname="Cotton" fullname="M. Cotton"/>
-                  <author initials="B." surname="Leiba" fullname="B. Leiba"/>
-                  <author initials="T." surname="Narten" fullname="T. Narten"/>
-                  <date year="2017" month="June"/>
-               </front>
-               <seriesInfo name="BCP" value="26"/>
-               <seriesInfo name="RFC" value="8126"/>
-               <seriesInfo name="DOI" value="10.17487/RFC8126"/>
-            </reference>
+<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml"/>
+
          </references>
       </references>
       <section anchor="collected.abnf" title="Collected ABNF">
@@ -2375,22 +2212,22 @@
       </section>
       <section anchor="changes.from.rfc.7234" title="Changes from RFC 7234">
          <t>
-   Handling of duplicate and conflicting cache directives has been clarified.
-   (<xref target="calculating.freshness.lifetime"/>)
+   Handling of duplicate and conflicting cache directives has been clarified
+   (<xref target="calculating.freshness.lifetime"/>).
 </t>
          <t>
    Cache invalidation of the URIs in the Location and Content-Location
-   header fields is no longer required, but still allowed.
-   (<xref target="invalidation"/>)
+   header fields is no longer required but is still allowed
+   (<xref target="invalidation"/>).
 </t>
          <t>
    Cache invalidation of the URIs in the Location and Content-Location header fields is disallowed
-   when the origin is different; previously, it was the host.
-   (<xref target="invalidation"/>)
+   when the origin is different; previously, it was the host
+   (<xref target="invalidation"/>).
 </t>
          <t>
-   Handling invalid and multiple Age header field values has been clarified.
-   (<xref target="field.age"/>)
+   Handling invalid and multiple Age header field values has been clarified
+   (<xref target="field.age"/>).
 </t>
          <t>
    Some cache directives defined by this specification now have stronger
@@ -2398,44 +2235,32 @@
    this has been found to create interoperability problems. Consumers of
    extension cache directives are no longer required to accept both token and
    quoted-string forms, but they still need to parse them properly for
-   unknown extensions.
-   (<xref target="field.cache-control"/>)
+   unknown extensions
+   (<xref target="field.cache-control"/>).
 </t>
          <t>
-   The "public" and "private" cache directives were clarified, so that they
-   do not make responses reusable under any condition.
-   (<xref target="cache-response-directive"/>)
+   The public and private cache directives were clarified, so that they
+   do not make responses reusable under any condition
+   (<xref target="cache-response-directive"/>).
 </t>
          <t>
-   The "must-understand" cache directive was introduced; caches are no
+   The must-understand cache directive was introduced; caches are no
    longer required to understand the semantics of new response status codes
-   unless it is present.
-   (<xref target="cache-response-directive.must-understand"/>)
+   unless it is present
+   (<xref target="cache-response-directive.must-understand"/>).
 </t>
          <t>
    The Warning response header was obsoleted. Much of the information
    supported by Warning could be gleaned by examining the response, and the
-   remaining warn-codes -- although potentially useful -- were entirely
-   advisory. In practice, Warning was not added by caches or intermediaries.
-   (<xref target="field.warning"/>)
+   remaining information -- although potentially useful -- was entirely
+   advisory. In practice, Warning was not added by caches or intermediaries
+   (<xref target="field.warning"/>).
 </t>
       </section>
-      <section anchor="change.log" title="Change Log">
-         <t>This section is to be removed before publishing as an RFC.</t>
-         <t>
-  See <eref target="https://www.ietf.org/archive/id/draft-ietf-httpbis-cache-19.html#appendix-C"
-                  brackets="angle"/>
-  for changes up to version 19 of this document.
-</t>
-         <section anchor="changes.since.19" title="Since draft-ietf-httpbis-cache-19">
-            <ul>
-               <li>None.</li>
-            </ul>
-         </section>
-      </section>
+    
       <section anchor="acks" numbered="false" title="Acknowledgements">
          <t>
-  See Appendix "Acknowledgements" of <xref target="HTTP"/>, which applies to this document as well.
+  See the "Acknowledgements" section in <xref target="HTTP"/>, which applies to this document.
 </t>
       </section>
    </back>
