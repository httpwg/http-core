--- ../build/draft-ietf-httpbis-cache-latest.redxml	2022-01-03 14:50:44.966104800 +0100
+++ rfc9111-to-be.xml	2022-01-03 11:55:47.897555700 +0100
@@ -1,37 +1,40 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<!--
-    This XML document is the output of clean-for-DTD.xslt; a tool that strips
-    extensions to RFC 7749 from documents for processing with xml2rfc.
--->
-<!--TARGET-GENERATOR: 202007-->
-<!--TARGET-VOCABULARY: 3-->
-<?xml-stylesheet type='text/xsl' href='lib/myxml2rfc.xslt'?>
-<?rfc toc="yes" ?>
-<?rfc tocdepth="4" ?>
-<?rfc symrefs="yes" ?>
-<?rfc sortrefs="yes" ?>
-<?rfc compact="yes"?>
-<?rfc subcompact="no" ?>
-<?rfc linkmailto="no" ?>
-<?rfc editing="no" ?>
-<?rfc comments="yes"?>
-<?rfc inline="yes"?>
-<?rfc rfcedstyle="yes"?>
-<?github-issue-label cache?>
+
+<!-- draft submitted in xml v3 -->
+
+<!DOCTYPE rfc [
+ <!ENTITY nbsp    "&#160;">
+ <!ENTITY zwsp   "&#8203;">
+ <!ENTITY nbhy   "&#8209;">
+ <!ENTITY wj     "&#8288;">
+]> 
+
 <rfc version="3"
+     tocInclude="true"
      tocDepth="4"
      sortRefs="true"
+     symRefs="true"
+     submissionType="IETF"
      category="std"
+     consensus="true" 
      ipr="pre5378Trust200902"
-     docName="draft-ietf-httpbis-cache-latest"
-     obsoletes="7234">
-<!--see https://trac.tools.ietf.org/tools/xml2rfc/trac/ticket/420-->
+     docName="draft-ietf-httpbis-cache-19"
+     number="9111"
+     obsoletes="7234"
+     updates=""
+     xmlns:xi="http://www.w3.org/2001/XInclude"
+     xml:lang="en">
+
+
+<!--Note: see https://trac.tools.ietf.org/tools/xml2rfc/trac/ticket/420-->
+<!-- 
 <?v3xml2rfc silence="Warning: Setting consensus="true" for IETF STD document"?>
 <?v3xml2rfc silence="Warning: Expected a valid submissionType (stream) setting"?>
-<!--see https://trac.tools.ietf.org/tools/xml2rfc/trac/ticket/439-->
-<?v3xml2rfc silence="The 'docName' attribute of the <rfc/> element"?>
+-->
    <front>
-      <title>HTTP Caching</title>
+     <title>HTTP Caching</title>
+     <seriesInfo name="RFC" value="9111"/>
+     <seriesInfo name="STD" value="97"/>
       <author fullname="Roy T. Fielding"
               initials="R."
               surname="Fielding"
@@ -39,9 +42,11 @@
          <organization>Adobe</organization>
          <address>
             <postal>
-               <postalLine>345 Park Ave</postalLine>
-               <postalLine>San Jose, CA 95110</postalLine>
-               <postalLine>United States of America</postalLine>
+               <street>345 Park Ave</street>
+               <city>San Jose</city>
+	       <region>CA</region>
+	       <code>95110</code>
+               <country>United States of America</country>
             </postal>
             <email>fielding@gbiv.com</email>
             <uri>https://roy.gbiv.com/</uri>
@@ -54,8 +59,8 @@
          <organization>Fastly</organization>
          <address>
             <postal>
-               <postalLine>Prahran VIC</postalLine>
-               <postalLine>Australia</postalLine>
+               <city>Prahran VIC</city>
+               <country>Australia</country>
             </postal>
             <email>mnot@mnot.net</email>
             <uri>https://www.mnot.net/</uri>
@@ -68,15 +73,16 @@
          <organization abbrev="greenbytes">greenbytes GmbH</organization>
          <address>
             <postal>
-               <postalLine>Hafenweg 16</postalLine>
-               <postalLine>48155 Münster</postalLine>
-               <postalLine>Germany</postalLine>
+              <street>Hafenweg 16</street>
+	      <city>Münster</city>
+               <code>48155</code> 
+               <country>Germany</country>
             </postal>
             <email>julian.reschke@greenbytes.de</email>
             <uri>https://greenbytes.de/tech/webdav/</uri>
          </address>
       </author>
-      <date/>
+      <date year="2021" month="December"/>
       <area>Applications and Real-Time</area>
       <workgroup>HTTP Working Group</workgroup>
       <keyword>Hypertext Transfer Protocol</keyword>
@@ -93,23 +99,6 @@
    This document obsoletes RFC 7234.
 </t>
       </abstract>
-      <note title="Editorial Note">
-         <t>This note is to be removed before publishing as an RFC.</t>
-         <t>
-    Discussion of this draft takes place on the HTTP working group
-    mailing list (ietf-http-wg@w3.org), which is archived at
-    <eref target="https://lists.w3.org/Archives/Public/ietf-http-wg/"
-                  brackets="angle"/>.
-  </t>
-         <t>
-    Working Group information can be found at <eref target="https://httpwg.org/" brackets="angle"/>;
-    source code and issues list for this draft can be found at
-    <eref target="https://github.com/httpwg/http-core" brackets="angle"/>.
-  </t>
-         <t>
-    The changes in this draft are summarized in <xref target="changes.since.19"/>.
-  </t>
-      </note>
    </front>
    <middle>
       <section anchor="caching" title="Introduction">
@@ -122,13 +111,14 @@
    defines aspects of HTTP related to caching and reusing response
    messages.
 </t>
-         <iref item="cache"/>
+<iref item="cache"/>
+
          <t>
    An HTTP <em>cache</em> is a local store of response messages and the
    subsystem that controls storage, retrieval, and deletion of messages in it.
    A cache stores cacheable responses to reduce the response time and
    network bandwidth consumption on future equivalent requests. Any client or
-   server <bcp14>MAY</bcp14> use a cache, though not when acting as a tunnel (<xref target="HTTP" section="3.7"/>).
+   server <bcp14>MAY</bcp14> use a cache but not when acting as a tunnel (<xref target="RFC9110" section="3.7"/>).
 </t>
          <iref item="shared cache"/>
          <iref item="private cache"/>
@@ -154,18 +144,22 @@
          <t>
    This document obsoletes <xref target="RFC7234" format="none">RFC 7234</xref>,
    with the changes being summarized in <xref target="changes.from.rfc.7234"/>.
+   
 </t>
          <section anchor="requirements.notation" title="Requirements Notation">
+
+<t>
+    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
+    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
+    NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
+    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
+    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are
+    to be interpreted as described in BCP&nbsp;14 <xref target="RFC2119"/>
+    <xref target="RFC8174"/> when, and only when, they appear in all capitals,
+    as shown here. 
+</t>	   
             <t>
-   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
-   NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
-   "MAY", and "OPTIONAL" in this document are to be interpreted as
-   described in BCP 14 <xref target="RFC2119"/>
-               <xref target="RFC8174"/> when, and only when, they
-   appear in all capitals, as shown here.
-</t>
-            <t>
-               <xref target="HTTP" section="2"/> defines conformance criteria and contains considerations regarding error handling.
+               <xref target="RFC9110" section="2"/> defines conformance criteria and contains considerations regarding error handling.
 </t>
          </section>
          <section anchor="notation" title="Syntax Notation">
@@ -176,9 +170,9 @@
    in strings defined in <xref target="RFC7405"/>.
 </t>
             <t>
-   It also uses a list extension, defined in <xref target="HTTP" section="5.6.1"/>,
-   that allows for compact definition of comma-separated lists using a '#'
-   operator (similar to how the '*' operator indicates repetition). <xref target="collected.abnf"/> shows the collected grammar with all list
+   It also uses a list extension, defined in <xref target="RFC9110" section="5.6.1"/>,
+   that allows for compact definition of comma-separated lists using a "#"
+   operator (similar to how the "*" operator indicates repetition). <xref target="collected.abnf"/> shows the collected grammar with all list
    operators expanded to standard ABNF notation.
 </t>
             <section anchor="abnf.imported" title="Imported Rules">
@@ -189,8 +183,8 @@
    DIGIT (decimal 0-9).
 </t>
                <t anchor="imported.rules">
-                  <xref target="HTTP"/> defines the following rules:
-</t>
+                  <xref target="RFC9110"/> defines the following rules:
+	       </t>
                <sourcecode type="abnf7230"><![CDATA[  HTTP-date     = <HTTP-date, see [HTTP], Section 5.6.7>
   OWS           = <OWS, see [HTTP], Section 5.6.3>
   field-name    = <field-name, see [HTTP], Section 5.1>
@@ -223,8 +217,7 @@
        binary form; an implementation could produce it as a string if
        any overflow occurs, even if the calculations are performed with an
        arithmetic type incapable of directly representing that number.
-       What matters here is that an overflow be detected and not treated as a
-       negative value in later calculations.
+       What matters here is that an overflow be detected and not treated as a negative value in later calculations.
    </t>
                </aside>
             </section>
@@ -235,7 +228,7 @@
          <t>
    Proper cache operation preserves the semantics of HTTP transfers
    while reducing the transmission of information already held in the
-   cache. See <xref target="HTTP" section="3"/>
+   cache. See <xref target="RFC9110" section="3"/>
    for the general terminology and core concepts of HTTP.
 </t>
          <t>
@@ -272,7 +265,7 @@
    Most commonly, caches store the successful result of a retrieval
    request: i.e., a 200 (OK) response to a GET request, which
    contains a representation of the target resource
-   (<xref target="HTTP" section="9.3.1"/>). However, it is also possible to store
+   (<xref target="RFC9110" section="9.3.1"/>). However, it is also possible to store
    redirects, negative results (e.g., 404 (Not Found)),
    incomplete results (e.g., 206 (Partial Content)), and
    responses to methods other than GET if the method's definition allows such
@@ -294,7 +287,7 @@
             </li>
             <li>
                <t>the response status code is final (see
-         <xref target="HTTP" section="15"/>);</t>
+         <xref target="RFC9110" section="15"/>);</t>
             </li>
             <li>
                <t>if the response status code is 206 or 304, or the "must-understand" cache directive (see <xref target="cache-response-directive.must-understand"/>) is present: the cache understands the response status code;</t>
@@ -311,13 +304,13 @@
             <li>
                <t>if the cache is shared: the Authorization header field
          is not present in the request
-         (see <xref target="HTTP" section="11.6.2"/>) or a
+         (see <xref target="RFC9110" section="11.6.2"/>) or a
          response directive is present that explicitly allows shared caching
          (see <xref target="caching.authenticated.responses"/>);
          and</t>
             </li>
             <li>
-               <t>the response contains at least one of:</t>
+               <t>the response contains at least one of the following:</t>
                <ul>
                   <li>a public response directive
             (see <xref target="cache-response-directive.public"/>);</li>
@@ -327,9 +320,9 @@
             (see <xref target="field.expires"/>);</li>
                   <li>a max-age response directive
             (see <xref target="cache-response-directive.max-age"/>);</li>
-                  <li>if the cache is shared: an s-maxage response directive
+                  <li>if the cache is shared: a s-maxage response directive
             (see <xref target="cache-response-directive.s-maxage"/>);</li>
-                  <li>a Cache Control Extension that allows it to be cached
+                  <li>a Cache-Control extension that allows it to be cached
             (see <xref target="cache.control.extensions"/>); or</li>
                   <li>a status code that is defined as heuristically cacheable
             (see <xref target="heuristic.freshness"/>).</li>
@@ -337,7 +330,7 @@
             </li>
          </ul>
          <t>
-   Note that a cache-control extension can override any of the requirements
+   Note that a Cache-Control extension can override any of the requirements
    listed; see <xref target="cache.control.extensions"/>.
 </t>
          <t>
@@ -353,19 +346,19 @@
 </t>
          <section anchor="storing.fields" title="Storing Header and Trailer Fields">
             <t>
-   Caches <bcp14>MUST</bcp14> include all received response header fields — including
-   unrecognised ones — when storing a response; this assures that new HTTP
+   Caches <bcp14>MUST</bcp14> include all received response header fields -- including
+   unrecognized ones -- when storing a response; this assures that new HTTP
    header fields can be successfully deployed. However, the following exceptions
    are made:
 </t>
             <ul>
                <li>The Connection header field and fields whose names are listed in it are
-   required by <xref target="HTTP" section="7.6.1"/> to be removed before
+   required by <xref target="RFC9110" section="7.6.1"/> to be removed before
    forwarding the message. This <bcp14>MAY</bcp14> be implemented by doing so
    before storage.</li>
                <li>Likewise, some fields' semantics require them to be removed
    before forwarding the message, and this <bcp14>MAY</bcp14> be implemented by doing so
-   before storage; see <xref target="HTTP" section="7.6.1"/> for some
+   before storage; see <xref target="RFC9110" section="7.6.1"/> for some
    examples.</li>
                <li>The no-cache (<xref target="cache-response-directive.no-cache"/>) and
    private (<xref target="cache-response-directive.private"/>) cache
@@ -374,9 +367,9 @@
                <li>Header fields that are specific to the proxy that a cache uses when forwarding a request
    <bcp14>MUST NOT</bcp14> be stored, unless the cache incorporates the identity of the
    proxy into the cache key. Effectively, this is limited to Proxy-Authenticate
-   (<xref target="HTTP" section="11.7.1"/>), Proxy-Authentication-Info
-   (<xref target="HTTP" section="11.7.3"/>), and Proxy-Authorization
-   (<xref target="HTTP" section="11.7.2"/>).</li>
+   (<xref target="RFC9110" section="11.7.1"/>), Proxy-Authentication-Info
+   (<xref target="RFC9110" section="11.7.3"/>), and Proxy-Authorization
+   (<xref target="RFC9110" section="11.7.2"/>).</li>
             </ul>
             <t>
    Caches <bcp14>MAY</bcp14> either store trailer fields separate from header fields or
@@ -386,8 +379,8 @@
          <section anchor="update" title="Updating Stored Header Fields">
             <t>
    Caches are required to update a stored response's header fields from another
-   (typically newer) response in several situations; for example, see <xref target="combining.responses"/>, <xref target="freshening.responses"/> and
-   <xref target="head.effects"/>.
+   (typically newer) response in several situations; for example, see Sections <xref target="combining.responses" format="counter"/>, <xref target="freshening.responses" format="counter"/>, and
+   <xref target="head.effects" format="counter"/>.
 </t>
             <t>
    When doing so, the cache <bcp14>MUST</bcp14> add each header field in the provided response
@@ -422,7 +415,7 @@
 </t>
             <t>
    Furthermore, some fields are automatically processed and removed by the
-   HTTP implementation; for example, the Content-Range header field.
+   HTTP implementation, such as the Content-Range header field.
    Implementations <bcp14>MAY</bcp14> automatically omit such header fields from updates,
    even when the processing does not actually occur.
 </t>
@@ -432,10 +425,24 @@
 </t>
          </section>
          <section anchor="incomplete.responses" title="Storing Incomplete Responses">
-            <t>
+           <t>
+<!--[rfced] Please confirm if the section mention below is correct;
+Section 3.4 of [HTTP] focuses on "Messages" and does not mention
+incomplete stored responses.
+
+Original:
+   If the request method is GET, the response status 
+   code is 200 (OK), and the entire response header 
+   section has been received, a cache MAY store a 
+   response body that is not complete (Section 3.4
+   of [HTTP]) if the stored response is recorded 
+   as being incomplete. 
+-->
+
+	     
    If the request method is GET, the response status code is 200
    (OK), and the entire response header section has been received, a
-   cache <bcp14>MAY</bcp14> store a response body that is not complete (<xref target="HTTP" section="3.4"/>) if the stored response
+   cache <bcp14>MAY</bcp14> store a response body that is not complete (<xref target="RFC9110" section="3.4"/>) if the stored response
    is recorded as being incomplete. Likewise, a 206 (Partial
    Content) response <bcp14>MAY</bcp14> be stored as if it were an incomplete
    200 (OK) response. However, a cache <bcp14>MUST NOT</bcp14> store
@@ -445,7 +452,7 @@
 </t>
             <t>
    A cache <bcp14>MAY</bcp14> complete a stored incomplete response by making a subsequent
-   range request (<xref target="HTTP" section="14.2"/>) and combining the successful response with the
+   range request (<xref target="RFC9110" section="14.2"/>) and combining the successful response with the
    stored response, as defined in <xref target="combining.responses"/>. A cache
    <bcp14>MUST NOT</bcp14> use an incomplete response to answer requests unless the
    response has been made complete, or the request is partial and specifies a
@@ -458,11 +465,11 @@
             <t>
    A response might transfer only a partial representation if the
    connection closed prematurely or if the request used one or more Range
-   specifiers (<xref target="HTTP" section="14.2"/>).  After several such transfers, a cache might have
+   specifiers (<xref target="RFC9110" section="14.2"/>).  After several such transfers, a cache might have
    received several ranges of the same representation.  A cache <bcp14>MAY</bcp14> combine
    these ranges into a single stored response, and reuse that response to
    satisfy later requests, if they all share the same strong validator and
-   the cache complies with the client requirements in <xref target="HTTP" section="15.3.7.3"/>.
+   the cache complies with the client requirements in <xref target="RFC9110" section="15.3.7.3"/>.
 </t>
             <t>
    When combining the new response with one or more stored responses, a cache
@@ -474,7 +481,7 @@
                   title="Storing Responses to Authenticated Requests">
             <t>
    A shared cache <bcp14>MUST NOT</bcp14> use a cached response to a request with an
-   Authorization header field (<xref target="HTTP" section="11.6.2"/>) to
+   Authorization header field (<xref target="RFC9110" section="11.6.2"/>) to
    satisfy any subsequent request unless the response contains a
    <xref target="field.cache-control" format="none">Cache-Control</xref> field with a response directive
    (<xref target="cache-response-directive"/>) that allows it to be stored by
@@ -494,10 +501,32 @@
          <t>
    When presented with a request, a cache <bcp14>MUST NOT</bcp14> reuse a stored response
    unless:
-</t>
+	 </t>
+
+<!--[rfced] While we understand the original document was published
+with the text we are questioning below, we are aiming to make the
+text as correct as possible.  Since a list of three items is not
+typically used in an either/or sentence, please let us know if
+the following update is agreeable or if you prefer otherwise.
+
+Original:
+ o  the stored response is either:
+
+      *  fresh (see Section 4.2), or
+      *  allowed to be served stale (see Section 4.2.4), or
+      *  successfully validated (see Section 4.3).
+
+Perhaps:
+ o  the stored response is one of the following:
+
+      *  fresh (see Section 4.2), or
+      *  allowed to be served stale (see Section 4.2.4), or
+      *  successfully validated (see Section 4.3).
+-->
+
          <ul>
             <li>
-               <t>The presented target URI (<xref target="HTTP" section="7.1"/>) and
+               <t>the presented target URI (<xref target="RFC9110" section="7.1"/>) and
    that of the stored response match, and</t>
             </li>
             <li>
@@ -523,7 +552,7 @@
             </li>
          </ul>
          <t>
-   Note that a cache-control extension can override any of the requirements
+   Note that a Cache-Control extension can override any of the requirements
    listed; see <xref target="cache.control.extensions"/>.
 </t>
          <t>
@@ -533,7 +562,7 @@
 </t>
          <t>
    A cache <bcp14>MUST</bcp14> write through requests with methods that are unsafe
-   (<xref target="HTTP" section="9.2.1"/>) to the origin server; i.e., a cache is not allowed to
+   (<xref target="RFC9110" section="9.2.1"/>) to the origin server; i.e., a cache is not allowed to
    generate a reply to such a request before having forwarded the request and
    having received a corresponding response.
 </t>
@@ -542,11 +571,35 @@
    see <xref target="invalidation"/>.
 </t>
          <iref item="collapsed requests"/>
+<!-- [rfced]  Section 4. We are having difficulty parsing the following paragraph. Does making the sentences more active by highlighting the cache's actions improve readability?
+
+Original:
+   A response that is stored or storable can be used to satisfy multiple
+   requests, provided that it is allowed to reuse that response for the
+   requests in question.  This enables caches to _collapse requests_ -
+   or combine multiple incoming requests into a single forward request
+   upon a cache miss - thereby reducing load on the origin server and
+   network.  However, note that if the response returned is not able to
+   be used for some or all of the collapsed requests, additional latency
+   might be introduced, because they will need to be forwarded to be
+   satisfied.
+
+Perhaps:
+   A cache can use a response that is stored or storable to satisfy 
+   multiple requests, provided that it is allowed to reuse that response 
+   for the requests in question. This enables a cache to _collapse 
+   requests_ - or combine multiple incoming requests into a single forward 
+   request upon a cache miss - thereby reducing load on the origin server 
+   and network. Note, however, that if the cache cannot use the returned 
+   response for some or all of the collapsed requests, it will need to 
+   forward the requests in order to satisfy them, potentially introducing 
+   additional latency.
+--> 
          <t>
    A response that is stored or storable can be used to satisfy multiple
    requests, provided that it is allowed to reuse that response for the requests
-   in question. This enables caches to <em>collapse requests</em> — or combine multiple incoming requests into a single forward
-   request upon a cache miss — thereby reducing load on the origin server and network.
+   in question. This enables caches to <em>collapse requests</em> -- or combine multiple incoming requests into a single forward
+   request upon a cache miss -- thereby reducing load on the origin server and network.
    However, note that if the response returned is not able to be used for some or all
    of the collapsed requests, additional latency might be introduced, because they will
    need to be forwarded to be satisfied.
@@ -558,7 +611,7 @@
    "Cache-Control: no-cache" to disambiguate which response to use.
 </t>
          <t>
-   A cache without a clock (<xref target="HTTP" section="5.6.7"/>) <bcp14>MUST</bcp14> revalidate
+   A cache without a clock (<xref target="RFC9110" section="5.6.7"/>) <bcp14>MUST</bcp14> revalidate
    stored responses upon every use.
 </t>
          <section anchor="caching.negotiated.responses"
@@ -566,7 +619,7 @@
             <t>
    When a cache receives a request that can be satisfied by a stored response
    and that stored response contains a Vary header field
-   (<xref target="HTTP" section="12.5.5"/>),
+   (<xref target="RFC9110" section="12.5.5"/>),
    the cache <bcp14>MUST NOT</bcp14> use that stored response without revalidation unless
    all the presented request header fields nominated by that Vary field value
    match those fields in the original request (i.e., the
@@ -575,7 +628,7 @@
             <t>
    The header fields from two requests are defined to match if
    and only if those in the first request can be transformed to those in the
-   second request by applying any of:
+   second request by applying any of the following:
 </t>
             <ul>
                <li>
@@ -584,7 +637,7 @@
   </li>
                <li>
      combining multiple header field lines with the same field name
-     (see <xref target="HTTP" section="5.2"/>)
+     (see <xref target="RFC9110" section="5.2"/>)
   </li>
                <li>
      normalizing both header field values in a way that is known to have
@@ -684,6 +737,13 @@
             <t>
   The calculation to determine if a response is fresh is:
 </t>
+<!-- [rfced]  Because "code" is not a valid value for the type attribute within an artwork element (https://xml2rfc.tools.ietf.org/xml2rfc-doc.html#section-2.6.7), would you like to update <artwork type="code"> to <sourcecode type="pseudocode">?  For instance:
+
+Current:
+            <artwork type="code"><![CDATA[
+   response_is_fresh = (freshness_lifetime > current_age)
+]]></artwork>
+-->
             <artwork type="code"><![CDATA[
    response_is_fresh = (freshness_lifetime > current_age)
 ]]></artwork>
@@ -721,7 +781,7 @@
                      title="Calculating Freshness Lifetime">
                <t>
    A cache can calculate the freshness lifetime (denoted as
-   freshness_lifetime) of a response by using the first match of:
+   freshness_lifetime) of a response by using the first match as follows:
 </t>
                <ul>
                   <li>If the cache is shared and the s-maxage response directive
@@ -731,7 +791,7 @@
                   <li>If the <xref target="field.expires" format="none">Expires</xref> response header field
    (<xref target="field.expires"/>) is present, use its value minus the
     value of the Date response header field
-    (using the time the message was received if it is not present, as per <xref target="HTTP" section="6.6.1"/>), or</li>
+    (using the time the message was received if it is not present, as per <xref target="RFC9110" section="6.6.1"/>), or</li>
                   <li>Otherwise, no explicit expiration time is present in the response. A
    heuristic freshness lifetime might be applicable; see <xref target="heuristic.freshness"/>.</li>
                </ul>
@@ -757,16 +817,16 @@
    cache <bcp14>MAY</bcp14> assign a heuristic expiration time when an explicit time is not
    specified, employing algorithms that use other field values (such as
    the Last-Modified time) to estimate a plausible expiration
-   time. This specification does not provide specific algorithms, but does
+   time. This specification does not provide specific algorithms, but it does
    impose worst-case constraints on their results.
 </t>
                <t>
    A cache <bcp14>MUST NOT</bcp14> use heuristics to determine freshness when an explicit
    expiration time is present in the stored response. Because of the
-   requirements in <xref target="response.cacheability"/>, this means that
+   requirements in <xref target="response.cacheability"/>,
    heuristics can only be used on responses without explicit
    freshness whose status codes are defined as <em>heuristically cacheable</em> (e.g., see
-   <xref target="HTTP" section="15.1"/>), and those responses without
+   <xref target="RFC9110" section="15.1"/>) and on responses without
    explicit freshness that have been marked as explicitly cacheable (e.g.,
    with a "public" response directive).
 </t>
@@ -776,16 +836,34 @@
 </t>
                <t>
    If the response has a Last-Modified header field
-   (<xref target="HTTP" section="8.8.2"/>), caches are encouraged to use a heuristic
+   (<xref target="RFC9110" section="8.8.2"/>), caches are encouraged to use a heuristic
    expiration value that is no more than some fraction of the interval since
    that time. A typical setting of this fraction might be 10%.
-</t>
+	       </t>
+
+<!--[rfced] RFC 2616 has been obsoleted by RFCs 7230, 7231, 7232,
+7233, 7234, and 7235.  Please let us know which of these newer
+RFCs should be listed in place of RFC 2616 (or if you would like
+to keep the reference to RFC 2616, the following sentence may be
+inserted: "Note that RFC 2616 has been obsoleted by RFC XXXX").
+
+Original:
+   Note:  Section 13.9 of [RFC2616] prohibited caches from
+          calculating heuristic freshness for URIs with query 
+          components (i.e., those containing '?'). 
+
+Perhaps:
+   Note:  Section 13.9 of [RFC2616] prohibits caches from
+          calculating heuristic freshness for URIs with query 
+          components, i.e., for those containing '?' (note that 
+          RFC 2616 has been obsoleted by RFC XXXX).
+-->	       
                <aside>
                   <t>
                      <strong>Note:</strong>
-                     <xref target="RFC2616" section="13.9"/> prohibited caches
+                     <xref target="RFC2616" section="13.9"/> prohibits caches
       from calculating heuristic freshness for URIs with query components
-      (i.e., those containing '?'). In practice, this has not been widely
+      (i.e., those containing "?"). In practice, this has not been widely
       implemented. Therefore, origin servers are encouraged to send explicit
       directives (e.g., Cache-Control: no-cache) if they wish to prevent
       caching.
@@ -805,7 +883,7 @@
                <t>
    Age calculation uses the following data:
 </t>
-               <dl newline="false">
+               <dl newline="true">
                   <dt>
                      <em>age_value</em>
                   </dt>
@@ -820,15 +898,15 @@
                   <dd>
      The term "date_value" denotes the value of
      the Date header field, in a form appropriate for arithmetic
-     operations. See <xref target="HTTP" section="6.6.1"/> for the definition of the Date header
-     field, and for requirements regarding responses without it.
+     operations. See <xref target="RFC9110" section="6.6.1"/> for the definition of the Date header
+     field and for requirements regarding responses without it.
   </dd>
                   <dt>
                      <em>now</em>
                   </dt>
                   <dd>
      The term "now" means the current value of this implementation's clock
-     (<xref target="HTTP" section="5.6.7"/>).
+     (<xref target="RFC9110" section="5.6.7"/>).
   </dd>
                   <dt>
                      <em>request_time</em>
@@ -889,6 +967,26 @@
    allowed to have heuristic expiry calculated, but is not fresh according to
    the calculations in <xref target="expiration.model"/>.
 </t>
+<!-- [rfced] While we understand the original document was published
+with the text we are questioning below, we are aiming to make the
+text as correct as possible. Should "cache-response-directive" be 
+hyphenated here? We note that "response directive" is not hyphenated
+elsewhere in the document.
+
+Current:
+   A cache MUST NOT generate a stale response if it is prohibited by an
+   explicit in-protocol directive (e.g., by a "no-cache" cache
+   directive, a "must-revalidate" cache-response-directive, or an
+   applicable "s-maxage" or "proxy-revalidate" cache-response-directive;
+   see Section 5.2.2).
+
+Perhaps:
+   A cache MUST NOT generate a stale response if it is prohibited by an
+   explicit in-protocol directive (e.g., by a "no-cache" cache
+   directive, a "must-revalidate" cache response directive, or an
+   applicable "s-maxage" or "proxy-revalidate" cache response directive;
+   see Section 5.2.2).
+-->
                <t>
    A cache <bcp14>MUST NOT</bcp14> generate a stale response if it is prohibited by an
    explicit in-protocol directive (e.g., by a "no-cache" cache
@@ -898,18 +996,32 @@
                <t>
    A cache <bcp14>MUST NOT</bcp14> generate a stale response unless it is disconnected
    or doing so is explicitly permitted by the client or origin server
-   (e.g., by the max-stale request directive in <xref target="cache-request-directive"/>, by extension directives such as those
-   defined in <xref target="RFC5861"/>, or by configuration in accordance
+   (e.g., by the max-stale request directive in <xref target="cache-request-directive"/>, extension directives such as those
+   defined in <xref target="RFC5861"/>, or configuration in accordance
    with an out-of-band contract).
 </t>
             </section>
          </section>
          <section anchor="validation.model" title="Validation">
-            <t>
+           <t>
+<!--[rfced] Should the reference below point to Section 13
+("Conditional Requests") instead of Section 13.1
+("Preconditions")?
+
+Original:
+   When a cache has one or more stored responses for a requested URI,
+   but cannot serve any of them (e.g., because they are not fresh, or
+   one cannot be chosen; see Section 4.1), it can use the conditional
+   request mechanism (Section 13.1 of [HTTP]) in the forwarded request
+   to give the next inbound server an opportunity to choose a valid
+   stored response to use, updating the stored metadata in the process,
+   or to replace the stored response(s) with a new response. 
+-->
+	     
    When a cache has one or more stored responses for a requested URI, but
    cannot serve any of them (e.g., because they are not fresh, or one cannot
    be chosen; see <xref target="caching.negotiated.responses"/>), it can use
-   the conditional request mechanism (<xref target="HTTP" section="13.1"/>) in the forwarded request to
+   the conditional request mechanism (<xref target="RFC9110" section="13.1"/>) in the forwarded request to
    give the next inbound server an opportunity to choose a valid stored
    response to use, updating the stored metadata in the process, or to replace
    the stored response(s) with a new response. This process is known as
@@ -919,17 +1031,17 @@
             <section anchor="validation.sent" title="Sending a Validation Request">
                <iref item="validator"/>
                <t>
-   When generating a conditional request for validation, a cache starts with
-   either a request it is attempting to satisfy, or — if it is initiating
-   the request independently — it synthesises a request using a stored
+   When generating a conditional request for validation, a cache either starts with
+   a request it is attempting to satisfy or -- if it is initiating
+   the request independently -- synthesizes a request using a stored
    response by copying the method, target URI, and request header fields
    identified by the Vary header field (<xref target="caching.negotiated.responses"/>).
 </t>
                <t>
    It then updates that request with one or more precondition header fields.
-   These contain validator metadata sourced from stored response(s) that have
-   the same URI. Typically, this will include only those stored responses(s) that
-   have the same cache key, although a cache is allowed to validate
+   These contain validator metadata sourced from a stored response(s) that has
+   the same URI. Typically, this will include only the stored response(s) that
+   has the same cache key, although a cache is allowed to validate
    a response that it cannot choose with the request header fields it is sending
    (see <xref target="caching.negotiated.responses"/>).
 </t>
@@ -940,7 +1052,7 @@
 </t>
                <t>
    One such validator is the timestamp given in a Last-Modified
-   header field (<xref target="HTTP" section="8.8.2"/>), which can be used in an
+   header field (<xref target="RFC9110" section="8.8.2"/>), which can be used in an
    If-Modified-Since header field for response validation, or
    in an If-Unmodified-Since or If-Range header
    field for representation selection (i.e., the client is referring
@@ -948,7 +1060,7 @@
 </t>
                <t>
    Another validator is the entity-tag given in an ETag
-   field (<xref target="HTTP" section="8.8.3"/>). One or more entity-tags, indicating one or more
+   field (<xref target="RFC9110" section="8.8.3"/>). One or more entity-tags, indicating one or more
    stored responses, can be used in an If-None-Match header
    field for response validation, or in an If-Match or
    If-Range header field for representation selection (i.e.,
@@ -1011,18 +1123,18 @@
    received precondition header fields and their precedence. In summary, the If-Match and
    If-Unmodified-Since conditional header fields are not
    applicable to a cache, and If-None-Match takes precedence over
-   If-Modified-Since. See <xref target="HTTP" section="13.2.2"/> for
+   If-Modified-Since. See <xref target="RFC9110" section="13.2.2"/> for
    a complete specification of precondition precedence.
 </t>
                <t>
-   A request containing an If-None-Match header field (<xref target="HTTP" section="13.1.2"/>) indicates that the client wants to
+   A request containing an If-None-Match header field (<xref target="RFC9110" section="13.1.2"/>) indicates that the client wants to
    validate one or more of its own stored responses in comparison to the
    stored response chosen by the cache (as per <xref target="constructing.responses.from.caches"/>).
 </t>
                <t>
    If an If-None-Match header field is not present, a request
    containing an If-Modified-Since header field
-   (<xref target="HTTP" section="13.1.3"/>) indicates that the client wants to validate
+   (<xref target="RFC9110" section="13.1.3"/>) indicates that the client wants to validate
    one or more of its own stored responses by modification date.
 </t>
                <t>
@@ -1034,8 +1146,8 @@
 </t>
                <t>
    A cache that implements partial responses to range requests, as defined in
-   <xref target="HTTP" section="14.2"/>, also needs to evaluate a received
-   If-Range header field (<xref target="HTTP" section="13.1.5"/>)
+   <xref target="RFC9110" section="14.2"/>, also needs to evaluate a received
+   If-Range header field (<xref target="RFC9110" section="13.1.5"/>)
    with respect to the cache's chosen response.
 </t>
                <t>
@@ -1069,7 +1181,7 @@
    </li>
                   <li>
      A full response (i.e., one containing content) indicates that none
-     of the stored responses nominated in the conditional request is
+     of the stored responses nominated in the conditional request are
      suitable. Instead, the cache <bcp14>MUST</bcp14> use the full response to
      satisfy the request. The cache <bcp14>MAY</bcp14> store such a full response,
      subject to its constraints (see <xref target="response.cacheability"/>).
@@ -1077,7 +1189,7 @@
                   <li>
      However, if a cache receives a 5xx (Server Error)
      response while attempting to validate a response, it can either
-     forward this response to the requesting client, or act as if the
+     forward this response to the requesting client or act as if the
      server failed to respond. In the latter case, the cache can send a
      previously stored response, subject to its constraints on doing so (see <xref target="serving.stale.responses"/>), or retry the validation request.
    </li>
@@ -1092,19 +1204,39 @@
 </t>
                <t>
    The initial set of stored responses to update are those that could have been chosen for
-   that request — i.e., those that meet the requirements in <xref target="constructing.responses.from.caches"/>, except the last requirement
-   to be fresh, able to be served stale or just validated.
+   that request -- i.e., those that meet the requirements in <xref target="constructing.responses.from.caches"/>, except the last requirement
+   to be fresh, served stale, or just validated.
 </t>
-               <t>
+<t>
+
+<!--[rfced] Please clarify this sentence. Is the intended meaning
+perhaps A) a set of stored responses or (B) a stored response or
+multiple stored responses?
+
+Original:
+   Then, that initial set of stored response(s) is further filtered by
+   the first match of:
+
+Perhaps:
+A) Then, that initial set of stored responses is further filtered by
+   the first match as follows:
+
+or
+
+B) Then, that initial stored response(s) is further filtered by
+   the first match as follows:
+-->
+
+  
    Then, that initial set of stored response(s) is further filtered by the first match of:
 </t>
                <ul>
                   <li>
      If the new response contains one or more <em>strong validators</em> (see
-     <xref target="HTTP" section="8.8.1"/>), then each of those strong validators
-     identify a selected representation for update. All the stored
+     <xref target="RFC9110" section="8.8.1"/>), then each of those strong validators
+     identifies a selected representation for update. All the stored
      responses in the initial set with one of those same strong validators are identified for update. If
-     none of the initial set contain at least one of the same strong validators, then the
+     none of the initial set contains at least one of the same strong validators, then the
      cache <bcp14>MUST NOT</bcp14> use the new response to update any stored responses.
    </li>
                   <li>
@@ -1161,13 +1293,13 @@
          </section>
          <section anchor="invalidation" title="Invalidating Stored Responses">
             <t>
-   Because unsafe request methods (<xref target="HTTP" section="9.2.1"/>) such as PUT, POST, or DELETE
+   Because unsafe request methods (<xref target="RFC9110" section="9.2.1"/>) such as PUT, POST, or DELETE
    have the potential for changing state on the origin server, intervening
    caches are required to invalidate stored responses to keep their contents up to date.
 </t>
             <t>
    A cache <bcp14>MUST</bcp14> invalidate the target URI
-   (<xref target="HTTP" section="7.1"/>) when it receives a non-error status
+   (<xref target="RFC9110" section="7.1"/>) when it receives a non-error status
    code in response to
    an unsafe request method (including methods whose safety is unknown).
 </t>
@@ -1180,12 +1312,12 @@
    fields (if present) are candidates for invalidation; other URIs might be
    discovered through mechanisms not specified in this document.
    However, a cache <bcp14>MUST NOT</bcp14> trigger an invalidation under these conditions
-   if the origin (<xref target="HTTP" section="4.3.1"/>) of the URI to be invalidated differs from that of the target URI
-   (<xref target="HTTP" section="7.1"/>). This helps prevent denial-of-service attacks.
+   if the origin (<xref target="RFC9110" section="4.3.1"/>) of the URI to be invalidated differs from that of the target URI
+   (<xref target="RFC9110" section="7.1"/>). This helps prevent denial-of-service attacks.
 </t>
             <t>
                <em>Invalidate</em> means that the cache will either remove all
-   stored responses whose target URI matches the given URI or will mark them
+   stored responses whose target URI matches the given URI or mark them
    as "invalid" and in need of a mandatory validation before they can be sent
    in response to a subsequent request.
 </t>
@@ -1243,6 +1375,18 @@
             <iref primary="true" item="Fields" subitem="Cache-Control"/>
             <iref primary="true" item="Header Fields" subitem="Cache-Control"/>
             <iref item="Cache-Control header field" primary="true"/>
+<!-- [rfced]  Section 5.2. We're having difficulty parsing the following. Is the implication that directives needn't be used or copied in the response?
+
+Original:
+   Such cache directives are unidirectional in that the presence of a 
+   directive in a request does not imply that the same directive is present 
+   in the response, or to be repeated in it.
+
+Perhaps:
+   Such cache directives are unidirectional in that the presence of a 
+   directive in a request does not imply that the same directive is present 
+   or copied in the response.  
+-->
             <t>
    The "Cache-Control" header field is used to list directives for caches
    along the request/response chain. Such cache directives are unidirectional
@@ -1287,10 +1431,22 @@
                   <t>
    Argument syntax:
 </t>
-                  <ul empty="true">
-                     <li>
-                        <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)</li>
-                  </ul>
+<!-- [rfced] Section 5.2. FYI, we have updated the syntax formatting to <t indent="6"> from <ul empty="true">. Please let us know if any changes are necessary.
+
+Original:
+   <ul empty="true">
+       <li>
+             <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)</li>
+  </ul>
+
+Current:
+   <t indent="6">
+      <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)
+   </t>
+-->
+                   <t indent="6">
+                        <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)
+</t>
                   <t>
    The "max-age" request directive indicates that the client prefers a
    response whose age is less than or equal to the specified number of
@@ -1308,10 +1464,9 @@
                   <t>
    Argument syntax:
 </t>
-                  <ul empty="true">
-                     <li>
-                        <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)</li>
-                  </ul>
+                   <t indent="6">
+                        <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)
+</t>
                   <t>
    The "max-stale" request directive indicates that the client will
    accept a response that has exceeded its freshness lifetime. If a value is
@@ -1331,10 +1486,9 @@
                   <t>
    Argument syntax:
 </t>
-                  <ul empty="true">
-                     <li>
-                        <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)</li>
-                  </ul>
+                   <t indent="6">
+                        <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)
+</t>
                   <t>
    The "min-fresh" request directive indicates that the client prefers a
    response whose freshness lifetime is no less than its current age plus the
@@ -1351,7 +1505,7 @@
                   <iref item="no-cache (cache directive)" primary="true"/>
                   <t>
    The "no-cache" request directive indicates that the client prefers
-   stored response not be used to satisfy the request without successful
+   a stored response not be used to satisfy the request without successful
    validation on the origin server.
 </t>
                </section>
@@ -1360,7 +1514,7 @@
                   <t>
    The "no-store" request directive indicates that a cache <bcp14>MUST NOT</bcp14>
    store any part of either this request or any response to it. This
-   directive applies to both private and shared caches. "MUST NOT
+   directive applies to both private and shared caches. "<bcp14>MUST NOT</bcp14>
    store" in this context means that the cache <bcp14>MUST NOT</bcp14> intentionally
    store the information in non-volatile storage and <bcp14>MUST</bcp14> make a
    best-effort attempt to remove the information from volatile storage as
@@ -1383,7 +1537,7 @@
                   <t>
    The "no-transform" request directive indicates that the client is asking
    for intermediaries to avoid
-   transforming the content, as defined in <xref target="HTTP" section="7.7"/>.
+   transforming the content, as defined in <xref target="RFC9110" section="7.7"/>.
 </t>
                </section>
                <section anchor="cache-request-directive.only-if-cached" title="only-if-cached">
@@ -1391,9 +1545,8 @@
                   <t>
    The "only-if-cached" request directive indicates that the client only
    wishes to obtain a stored response. Caches that honor this request
-   directive <bcp14>SHOULD</bcp14>, upon receiving it, either respond using a stored
-   response consistent with the other constraints of the request, or
-   respond with a 504 (Gateway Timeout) status code.
+   directive <bcp14>SHOULD</bcp14>, upon receiving it, respond with either a stored
+   response consistent with the other constraints of the request or a 504 (Gateway Timeout) status code.
 </t>
                </section>
             </section>
@@ -1408,10 +1561,9 @@
                   <t>
    Argument syntax:
 </t>
-                  <ul empty="true">
-                     <li>
-                        <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)</li>
-                  </ul>
+                   <t indent="6">
+                        <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)
+</t>
                   <t>
    The "max-age" response directive indicates that the response is to be
    considered stale after its age is greater than the specified number of
@@ -1449,7 +1601,7 @@
                   <t>
    The must-revalidate directive also permits a shared cache to
    reuse a response to a request containing an Authorization
-   header field (<xref target="HTTP" section="11.6.2"/>),
+   header field (<xref target="RFC9110" section="11.6.2"/>),
    subject to the above requirement on revalidation
    (<xref target="caching.authenticated.responses"/>).
 </t>
@@ -1462,6 +1614,23 @@
    a cache that understands and conforms to the requirements for that
    response's status code.
 </t>
+<!-- [rfced] Section 5.2.2.3. We are having difficulty parsing the end of the following sentence. Does the status code or the cache conform to the caching requirements?  In the suggestion below, does making "response" and "cache" singular improve the readability of the sentence? We also note that quotes are usually used only when a term is introduced and not in running text. 
+
+Original:
+   Responses containing "must-understand" SHOULD also contain the "no-
+   store" directive; caches that implement "must-understand" SHOULD
+   ignore the "no-store" directive in responses that contain both
+   directives and a status code that the cache understands and conforms
+   to any related caching requirements.
+
+Perhaps:
+   A response that contains the must-understand directive SHOULD also 
+   contain the no-store directive; a cache that implements the 
+   must-understand directive SHOULD ignore the no-store directive in 
+   a response that contains both directives and a status code related
+   to any caching requirements that the cache understands and conforms 
+   to.
+-->
                   <t>
    Responses containing "must-understand" <bcp14>SHOULD</bcp14> also contain the "no-store" directive;
    caches that implement "must-understand" <bcp14>SHOULD</bcp14> ignore the "no-store" directive
@@ -1474,10 +1643,9 @@
                   <t>
    Argument syntax:
 </t>
-                  <ul empty="true">
-                     <li>#<xref target="imported.rules" format="none">field-name</xref>
-                     </li>
-                  </ul>
+                   <t indent="6">
+                     #<xref target="imported.rules" format="none">field-name</xref>
+</t>
                   <t>
    The "no-cache" response directive, in its unqualified form (without an
    argument), indicates that the response <bcp14>MUST NOT</bcp14> be used to satisfy any
@@ -1490,13 +1658,13 @@
    been configured to send stale responses.
 </t>
                   <t>
-   The qualified form of no-cache response directive, with an argument that
+   The qualified form of the no-cache response directive, with an argument that
    lists one or more field names, indicates that a cache <bcp14>MAY</bcp14> use the
    response to satisfy a subsequent request, subject to any other restrictions
    on caching, if the listed header fields are excluded from the subsequent
    response or the subsequent response has been successfully revalidated with
    the origin server (updating or removing those fields).
-   This allows an origin server to prevent the re-use of certain header
+   This allows an origin server to prevent the reuse of certain header
    fields in a response, while still allowing caching of the rest of the
    response.
 </t>
@@ -1513,7 +1681,7 @@
                      <t>
                         <strong>Note:</strong> The
    qualified form of the directive is often handled by caches as if an
-   unqualified no-cache directive was received; i.e., the special handling
+   unqualified no-cache directive was received; that is, the special handling
    for the qualified form is not widely implemented.
 </t>
                   </aside>
@@ -1522,11 +1690,11 @@
                   <iref item="no-store (cache directive)" primary="true"/>
                   <t>
    The "no-store" response directive indicates that a cache <bcp14>MUST NOT</bcp14> store
-   any part of either the immediate request or response and <bcp14>MUST NOT</bcp14> use
+   any part of either the immediate request or the response and <bcp14>MUST NOT</bcp14> use
    the response to satisfy any other request.
 </t>
                   <t>
-   This directive applies to both private and shared caches. "MUST NOT
+   This directive applies to both private and shared caches. "<bcp14>MUST NOT</bcp14>
    store" in this context means that the cache <bcp14>MUST NOT</bcp14> intentionally store
    the information in non-volatile storage and <bcp14>MUST</bcp14> make a best-effort
    attempt to remove the information from volatile storage as promptly as
@@ -1548,7 +1716,7 @@
                   <t>
    The "no-transform" response directive indicates that an intermediary
    (regardless of whether it implements a cache) <bcp14>MUST NOT</bcp14> transform the
-   content, as defined in <xref target="HTTP" section="7.7"/>.
+   content, as defined in <xref target="RFC9110" section="7.7"/>.
 </t>
                </section>
                <section anchor="cache-response-directive.private" title="private">
@@ -1556,16 +1724,15 @@
                   <t>
    Argument syntax:
 </t>
-                  <ul empty="true">
-                     <li>#<xref target="imported.rules" format="none">field-name</xref>
-                     </li>
-                  </ul>
+                   <t indent="6">
+                     #<xref target="imported.rules" format="none">field-name</xref>
+</t>
                   <t>
    The unqualified "private" response directive indicates that
    a shared cache <bcp14>MUST NOT</bcp14> store the response (i.e., the response is
    intended for a single user).
    It also indicates that a private cache <bcp14>MAY</bcp14> store the response, subject
-   the constraints defined in <xref target="response.cacheability"/>, even if
+   to the constraints defined in <xref target="response.cacheability"/>, even if
    the response would not otherwise be heuristically cacheable by a private
    cache.
 </t>
@@ -1592,7 +1759,7 @@
    where the response can be stored; it cannot ensure the privacy of the
    message content. Also, the qualified form of the directive is
    often handled by caches as if an unqualified private directive
-   was received; i.e., the special handling for the qualified form is not
+   was received; that is, the special handling for the qualified form is not
    widely implemented.
 </t>
                   </aside>
@@ -1639,10 +1806,9 @@
                   <t>
    Argument syntax:
 </t>
-                  <ul empty="true">
-                     <li>
-                        <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)</li>
-                  </ul>
+                   <t indent="6">
+                        <xref target="delta-seconds" format="none">delta-seconds</xref> (see <xref target="delta-seconds"/>)
+</t>
                   <t>
    The "s-maxage" response directive indicates that, for a shared cache, the
    maximum age specified by this directive overrides the maximum age
@@ -1651,8 +1817,8 @@
 </t>
                   <t>
    The s-maxage directive incorporates the
-   proxy-revalidate (<xref target="cache-response-directive.proxy-revalidate"/>)
-   response directive's semantics for a shared cache.
+   semantics of the proxy-revalidate response directive (<xref target="cache-response-directive.proxy-revalidate"/>)
+   for a shared cache.
    A shared cache <bcp14>MUST NOT</bcp14> reuse a stale response with s-maxage to satisfy
    another request until it has been successfully validated by the origin, as
    defined by <xref target="validation.model"/>.
@@ -1686,8 +1852,18 @@
    behavior specified by the old directive, and those that understand the
    new directive will recognize it as modifying the requirements associated
    with the old directive. In this way, extensions to the existing
-   cache-control directives can be made without breaking deployed caches.
+   Cache-Control directives can be made without breaking deployed caches.
 </t>
+<!-- [rfced] Section 5.3.2. We're having difficulty parsing the following because "any cache" doesn't seem to align with "shared only by members". 
+
+Original:
+   ... in addition to private caches, any cache that is shared only 
+   by members of the named community is allowed to cache the response. 
+
+Perhaps:
+   ... in addition to private caches, only a cache that is shared 
+   by members of the named community is allowed to cache the response. 
+-->
                <t>
    For example, consider a hypothetical new response directive called
    "community" that acts as a modifier to the private directive: in addition
@@ -1712,8 +1888,8 @@
                   <li>When the directive does not take an argument, what it means when an
   argument is present,</li>
                   <li>When the directive requires an argument, what it means when it is
-  missing,</li>
-                  <li>Whether the directive is specific to requests, responses, or able
+  missing, and</li>
+                  <li>Whether the directive is specific to requests, specific to responses, or able
   to be used in either.</li>
                </ul>
             </section>
@@ -1752,7 +1928,7 @@
    will change or cease to exist at, before, or after that time.
 </t>
             <t>
-   The Expires field value is an HTTP-date timestamp, as defined in <xref target="HTTP" section="5.6.7"/>.
+   The Expires field value is an HTTP-date timestamp, as defined in <xref target="RFC9110" section="5.6.7"/>.
    See also <xref target="expiration.model"/> for parsing requirements specific to caches.
 </t>
             <iref primary="true" item="Grammar" subitem="Expires"/>
@@ -1778,7 +1954,7 @@
    the Cache-Control header field.
 </t>
             <t>
-   An origin server without a clock (<xref target="HTTP" section="5.6.7"/>)
+   An origin server without a clock (<xref target="RFC9110" section="5.6.7"/>)
    <bcp14>MUST NOT</bcp14> generate an Expires header field
    unless its value represents a fixed time in the past (always expired)
    or its value has been associated with the resource by a system with
@@ -1859,7 +2035,7 @@
    apparent to or easily controllable by the user, it is strongly encouraged to
    define its operation with respect to HTTP cache directives so as
    not to surprise authors who expect caching semantics
-   to be honoured. For example, while it might be reasonable to define an
+   to be honored. For example, while it might be reasonable to define an
    application cache "above" HTTP that allows a response containing
    Cache-Control: no-store to be reused for requests that are directly related
    to the request that fetched it (such as those created during the same page
@@ -1873,14 +2049,14 @@
    This section is meant to inform developers, information providers, and
    users of known security concerns specific to HTTP caching.
    More general security considerations are addressed in "HTTP/1.1"
-   (<xref target="HTTP11" section="11"/>)
+   (<xref target="RFC9112" section="11"/>)
    and "HTTP Semantics"
-   (<xref target="HTTP" section="17"/>).
+   (<xref target="RFC9110" section="17"/>).
 </t>
          <t>
-   Caches expose an additional attack surface, since the contents of
+   Caches expose an additional attack surface because the contents of
    the cache represent an attractive target for malicious exploitation.
-   Because cache contents persist after an HTTP request is complete, an attack
+   Since cache contents persist after an HTTP request is complete, an attack
    on the cache can reveal information long after a user believes that the
    information has been removed from the network. Therefore, cache contents
    need to be protected as sensitive information.
@@ -1888,8 +2064,8 @@
          <t>
    In particular, because private caches are restricted to a single user,
    they can be used to reconstruct a user's activity. As a result, it is
-   important for user agents to allow end users to control them; for example,
-   allowing stored responses to be removed for some or all origin servers.
+   important for user agents to allow end users to control them, for example,
+   by allowing stored responses to be removed for some or all origin servers.
 </t>
          <section anchor="cache.poisoning" title="Cache Poisoning">
             <t>
@@ -1902,20 +2078,20 @@
 </t>
             <t>
    One common attack vector for cache poisoning is to exploit differences in
-   message parsing on proxies and in user agents; see <xref target="HTTP11" section="6.3"/> for the relevant requirements regarding
+   message parsing on proxies and in user agents; see <xref target="RFC9112" section="6.3"/> for the relevant requirements regarding
    HTTP/1.1.
 </t>
          </section>
          <section anchor="security.timing" title="Timing Attacks">
             <t>
-   Because one of the primary uses of a cache is to optimise performance,
-   its use can "leak" information about what resources have been previously
+   Because one of the primary uses of a cache is to optimize performance,
+   its use can "leak" information about which resources have been previously
    requested.
 </t>
             <t>
    For example, if a user visits a site and their browser caches some of its
    responses and then navigates to a second site, that site can attempt to
-   load responses it knows exists on the first site. If they load
+   load responses it knows exist on the first site. If they load
    quickly, it can be assumed that the user has visited that site, or even
    a specific page on it.
 </t>
@@ -1928,16 +2104,16 @@
          <section anchor="caching.of.sensitive.information"
                   title="Caching of Sensitive Information">
             <t>
-   Implementation and deployment flaws (as well as misunderstanding of cache
-   operation) might lead to caching of sensitive information (e.g.,
+   Implementation and deployment flaws (as well as the misunderstanding of cache
+   operation) might lead to the caching of sensitive information (e.g.,
    authentication credentials) that is thought to be private, exposing it to
    unauthorized parties.
 </t>
             <t>
-   Note that the Set-Cookie response header field <xref target="COOKIE"/>
+   Note that the Set-Cookie response header field <xref target="RFC6265"/>
    does not inhibit caching; a cacheable response with a Set-Cookie header
    field can be (and often is) used to satisfy subsequent requests to caches.
-   Servers who wish to control caching of these responses are encouraged to
+   Servers that wish to control caching of these responses are encouraged to
    emit appropriate Cache-Control response header fields.
 </t>
          </section>
@@ -1945,20 +2121,27 @@
       <section anchor="iana.considerations" title="IANA Considerations">
          <t>
    The change controller for the following registrations is:
-   "IETF (iesg@ietf.org) - Internet Engineering Task Force".
+   "IETF (iesg@ietf.org) -- Internet Engineering Task Force".
 </t>
          <section anchor="field.name.registration" title="Field Name Registration">
             <t>
-   First, introduce the new "Hypertext Transfer Protocol (HTTP) Field
-   Name Registry" at <eref target="https://www.iana.org/assignments/http-fields" brackets="angle"/>
-   as described in
-   <xref target="HTTP" section="18.4"/>.
-</t>
-            <t>
-   Then, please update the registry with the field names listed in the table
+   IANA has updated the "Hypertext Transfer Protocol (HTTP) Field
+   Name Registry" at <eref target="https://www.iana.org/assignments/http-fields" brackets="angle"/>,
+   as described in <xref target="RFC9110" section="18.4"/>, with the field names listed in the table
    below:
-</t>
-            <!--AUTOGENERATED FROM extract-header-defs.xslt, do not edit manually-->
+	    </t>
+<!--[rfced] Table 1 (Section 8.1). The "Hypertext Transfer Protocol (HTTP) Field Name Registry" <https://www.iana.org/assignments/http-fields/http-fields.xhtml> uses the "permanent" status; however, Table 1 uses "standard" status. We will update the "standard" entries to "permanent" to match the IANA registry unless we hear objections.  Note that this excludes the status for "Warning", which will remain as "obsoleted".
+
+Current:
+   Field Name      | Status    |  Ref.      | Comments 
+   - - - - - - - - - - - - - - - - - - - - - - - - 
+   Age             | standard  |  5.1       |
+   Cache-Control   | standard  |  5.2       |
+   Expires         | standard  |  5.3       |
+   Pragma          | standard  |  5.4       |
+   Warning         | obsoleted |  5.5       |
+-->
+	    <!--AUTOGENERATED FROM extract-header-defs.xslt, do not edit manually-->
             <table align="left" anchor="iana.header.registration.table">
                <thead>
                   <tr>
@@ -1971,7 +2154,7 @@
                <tbody>
                   <tr>
                      <td>Age</td>
-                     <td>permanent</td>
+                     <td>standard</td>
                      <td>
                         <xref target="field.age" format="counter"/>
                      </td>
@@ -1979,7 +2162,7 @@
                   </tr>
                   <tr>
                      <td>Cache-Control</td>
-                     <td>permanent</td>
+                     <td>standard</td>
                      <td>
                         <xref target="field.cache-control" format="counter"/>
                      </td>
@@ -1987,7 +2170,7 @@
                   </tr>
                   <tr>
                      <td>Expires</td>
-                     <td>permanent</td>
+                     <td>standard</td>
                      <td>
                         <xref target="field.expires" format="counter"/>
                      </td>
@@ -1995,7 +2178,7 @@
                   </tr>
                   <tr>
                      <td>Pragma</td>
-                     <td>permanent</td>
+                     <td>standard</td>
                      <td>
                         <xref target="field.pragma" format="counter"/>
                      </td>
@@ -2016,11 +2199,11 @@
          <section anchor="cache.directive.registration"
                   title="Cache Directive Registration">
             <t>
-   Please update the
+   IANA has updated the
    "Hypertext Transfer Protocol (HTTP) Cache Directive Registry"
    at <eref target="https://www.iana.org/assignments/http-cache-directives"
                      brackets="angle"/>
-   with the registration procedure of <xref target="cache.directive.registry"/>
+   with the registration procedure per <xref target="cache.directive.registry"/>
    and the cache directive names summarized in the table below.
 </t>
             <!--AUTOGENERATED FROM extract-cache-directives-defs.xslt, do not edit manually-->
@@ -2112,244 +2295,88 @@
                   </tr>
                </tbody>
             </table>
-            <!--(END)-->
+            <!--(END)--> 
          </section>
          <section anchor="warn.code.registration" title="Warn Code Registry">
             <t>
-   Please add a note to the "Hypertext Transfer Protocol (HTTP) Warn Codes"
+   IANA has the following note to the "Hypertext Transfer Protocol (HTTP) Warn Codes"
    registry at <eref target="https://www.iana.org/assignments/http-warn-codes"
-                     brackets="angle"/> to the effect
-   that Warning is obsoleted.
+                     brackets="angle"/> stating that "Warning" has been obsoleted:
 </t>
+           <blockquote><t>The Warning header field (and the warn codes that it uses) has been 
+obsoleted for HTTP per [RFC9111].
+</t></blockquote>
          </section>
       </section>
    </middle>
    <back>
-      <displayreference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
-                        xmlns:x="http://purl.org/net/xml2rfc/ext"
-                        target="HTTP11"
-                        to="HTTP/1.1"/>
+
+<displayreference target="RFC9110" to="HTTP"/>
+<displayreference target="RFC9112" to="HTTP/1.1"/>
+<displayreference target="RFC6265" to="COOKIE"/>
+
       <references>
          <name>References</name>
          <references>
             <name>Normative References</name>
-            <reference anchor="HTTP"><!--included from draft-ietf-httpbis-semantics-latest.xml-->
-               <front>
-                  <title>HTTP Semantics</title>
-                  <author fullname="Roy T. Fielding"
-                          initials="R."
-                          surname="Fielding"
-                          role="editor">
-                     <organization>Adobe</organization>
-                     <address>
-                        <postal>
-                           <postalLine>345 Park Ave</postalLine>
-                           <postalLine>San Jose, CA 95110</postalLine>
-                           <postalLine>United States of America</postalLine>
-                        </postal>
-                        <email>fielding@gbiv.com</email>
-                        <uri>https://roy.gbiv.com/</uri>
-                     </address>
-                  </author>
-                  <author fullname="Mark Nottingham"
-                          initials="M."
-                          surname="Nottingham"
-                          role="editor">
-                     <organization>Fastly</organization>
-                     <address>
-                        <postal>
-                           <postalLine>Prahran VIC</postalLine>
-                           <postalLine>Australia</postalLine>
-                        </postal>
-                        <email>mnot@mnot.net</email>
-                        <uri>https://www.mnot.net/</uri>
-                     </address>
-                  </author>
-                  <author fullname="Julian Reschke"
-                          initials="J."
-                          surname="Reschke"
-                          role="editor">
-                     <organization abbrev="greenbytes">greenbytes GmbH</organization>
-                     <address>
-                        <postal>
-                           <postalLine>Hafenweg 16</postalLine>
-                           <postalLine>48155 Münster</postalLine>
-                           <postalLine>Germany</postalLine>
-                        </postal>
-                        <email>julian.reschke@greenbytes.de</email>
-                        <uri>https://greenbytes.de/tech/webdav/</uri>
-                     </address>
-                  </author>
-                  <date year="2022" month="January"/>
-               </front>
-               <seriesInfo name="Internet-Draft" value="draft-ietf-httpbis-semantics-latest"/>
-            </reference>
-            <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119">
-               <front>
-                  <title>Key words for use in RFCs to Indicate Requirement Levels</title>
-                  <author initials="S." surname="Bradner" fullname="Scott Bradner"/>
-                  <date month="March" year="1997"/>
-               </front>
-               <seriesInfo name="BCP" value="14"/>
-               <seriesInfo name="RFC" value="2119"/>
-               <seriesInfo name="DOI" value="10.17487/RFC2119"/>
-            </reference>
-            <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174">
-               <front>
-                  <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
-                  <author initials="B." surname="Leiba" fullname="Barry Leiba"/>
-                  <date year="2017" month="May"/>
-               </front>
-               <seriesInfo name="BCP" value="14"/>
-               <seriesInfo name="RFC" value="8174"/>
-               <seriesInfo name="DOI" value="10.17487/RFC8174"/>
-            </reference>
-            <reference anchor="RFC5234" target="https://www.rfc-editor.org/info/rfc5234">
-               <front>
-                  <title abbrev="ABNF for Syntax Specifications">Augmented BNF for Syntax Specifications: ABNF</title>
-                  <author initials="D."
-                          surname="Crocker"
-                          fullname="Dave Crocker"
-                          role="editor"/>
-                  <author initials="P." surname="Overell" fullname="Paul Overell"/>
-                  <date month="January" year="2008"/>
-               </front>
-               <seriesInfo name="STD" value="68"/>
-               <seriesInfo name="RFC" value="5234"/>
-               <seriesInfo name="DOI" value="10.17487/RFC5234"/>
-            </reference>
-            <reference anchor="RFC7405" target="https://www.rfc-editor.org/info/rfc7405">
-               <front>
-                  <title>Case-Sensitive String Support in ABNF</title>
-                  <author initials="P." surname="Kyzivat" fullname="Dave Kyzivat"/>
-                  <date month="December" year="2014"/>
-               </front>
-               <seriesInfo name="RFC" value="7405"/>
-               <seriesInfo name="DOI" value="10.17487/RFC7405"/>
-            </reference>
+
+<!-- [HTTP][I-D.ietf-httpbis-semantics-19] in RFC Editor state as of 11/30/21; companion document RFC 9110 -->
+<reference anchor='RFC9110' target='https://www.rfc-editor.org/info/rfc9110'>
+<front>
+<title>HTTP Semantics</title>
+<author initials='R' surname='Fielding' fullname='Roy Fielding' role="editor">
+<organization />
+</author>
+<author initials='M' surname='Nottingham' fullname='Mark Nottingham' role="editor">
+<organization />
+</author>
+<author initials='J' surname='Reschke' fullname='Julian Reschke' role="editor">
+<organization />
+</author>
+<date year='2021' month='December'/>
+</front>
+<seriesInfo name="RFC" value="9110"/>
+<seriesInfo name="DOI" value="10.17487/RFC9110"/>
+</reference>
+
+<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
+<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7405.xml"/>
+<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
+<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5234.xml"/>
+
          </references>
          <references>
             <name>Informative References</name>
-            <reference anchor="HTTP11"><!--included from draft-ietf-httpbis-messaging-latest.xml-->
-               <front>
-                  <title>HTTP/1.1</title>
-                  <author fullname="Roy T. Fielding"
-                          initials="R."
-                          surname="Fielding"
-                          role="editor">
-                     <organization>Adobe</organization>
-                     <address>
-                        <postal>
-                           <postalLine>345 Park Ave</postalLine>
-                           <postalLine>San Jose, CA 95110</postalLine>
-                           <postalLine>United States of America</postalLine>
-                        </postal>
-                        <email>fielding@gbiv.com</email>
-                        <uri>https://roy.gbiv.com/</uri>
-                     </address>
-                  </author>
-                  <author fullname="Mark Nottingham"
-                          initials="M."
-                          surname="Nottingham"
-                          role="editor">
-                     <organization>Fastly</organization>
-                     <address>
-                        <postal>
-                           <postalLine>Prahran VIC</postalLine>
-                           <postalLine>Australia</postalLine>
-                        </postal>
-                        <email>mnot@mnot.net</email>
-                        <uri>https://www.mnot.net/</uri>
-                     </address>
-                  </author>
-                  <author fullname="Julian Reschke"
-                          initials="J."
-                          surname="Reschke"
-                          role="editor">
-                     <organization abbrev="greenbytes">greenbytes GmbH</organization>
-                     <address>
-                        <postal>
-                           <postalLine>Hafenweg 16</postalLine>
-                           <postalLine>48155 Münster</postalLine>
-                           <postalLine>Germany</postalLine>
-                        </postal>
-                        <email>julian.reschke@greenbytes.de</email>
-                        <uri>https://greenbytes.de/tech/webdav/</uri>
-                     </address>
-                  </author>
-                  <date year="2022" month="January"/>
-               </front>
-               <seriesInfo name="Internet-Draft" value="draft-ietf-httpbis-messaging-latest"/>
-            </reference>
-            <reference anchor="RFC2616" target="https://www.rfc-editor.org/info/rfc2616">
-               <front>
-                  <title>Hypertext Transfer Protocol -- HTTP/1.1</title>
-                  <author fullname="R. Fielding" initials="R." surname="Fielding"/>
-                  <author fullname="J. Gettys" initials="J." surname="Gettys"/>
-                  <author fullname="J. Mogul" initials="J." surname="Mogul"/>
-                  <author fullname="H. Frystyk" initials="H." surname="Frystyk"/>
-                  <author fullname="L. Masinter" initials="L." surname="Masinter"/>
-                  <author fullname="P. Leach" initials="P." surname="Leach"/>
-                  <author fullname="T. Berners-Lee" initials="T." surname="Berners-Lee"/>
-                  <date month="June" year="1999"/>
-               </front>
-               <seriesInfo name="RFC" value="2616"/>
-               <seriesInfo name="DOI" value="10.17487/RFC2616"/>
-            </reference>
-            <reference anchor="RFC7234" target="https://www.rfc-editor.org/info/rfc7234">
-               <front>
-                  <title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
-                  <author initials="R."
-                          surname="Fielding"
-                          fullname="Roy T. Fielding"
-                          role="editor"/>
-                  <author initials="M."
-                          surname="Nottingham"
-                          fullname="Mark Nottingham"
-                          role="editor"/>
-                  <author initials="J."
-                          surname="Reschke"
-                          fullname="Julian F. Reschke"
-                          role="editor"/>
-                  <date month="June" year="2014"/>
-               </front>
-               <seriesInfo name="RFC" value="7234"/>
-               <seriesInfo name="DOI" value="10.17487/RFC7234"/>
-            </reference>
-            <reference anchor="RFC5861" target="https://www.rfc-editor.org/info/rfc5861">
-               <front>
-                  <title abbrev="HTTP stale controls">HTTP Cache-Control Extensions for Stale Content</title>
-                  <author initials="M." surname="Nottingham" fullname="Mark Nottingham"/>
-                  <date month="May" year="2010"/>
-               </front>
-               <seriesInfo name="RFC" value="5861"/>
-               <seriesInfo name="DOI" value="10.17487/RFC5861"/>
-            </reference>
-            <reference anchor="COOKIE" target="https://www.rfc-editor.org/info/rfc6265">
-               <front>
-                  <title>HTTP State Management Mechanism</title>
-                  <author initials="A." surname="Barth" fullname="Adam Barth"/>
-                  <date year="2011" month="April"/>
-               </front>
-               <seriesInfo name="RFC" value="6265"/>
-               <seriesInfo name="DOI" value="10.17487/RFC6265"/>
-            </reference>
-            <reference anchor="RFC8126" target="https://www.rfc-editor.org/info/rfc8126">
-               <front>
-                  <title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
-                  <author initials="M." surname="Cotton" fullname="M. Cotton"/>
-                  <author initials="B." surname="Leiba" fullname="B. Leiba"/>
-                  <author initials="T." surname="Narten" fullname="T. Narten"/>
-                  <date year="2017" month="June"/>
-               </front>
-               <seriesInfo name="BCP" value="26"/>
-               <seriesInfo name="RFC" value="8126"/>
-               <seriesInfo name="DOI" value="10.17487/RFC8126"/>
-            </reference>
+
+<!-- [HTTP/1.1] [draft-ietf-httpbis-messaging] in RFC Editor state as of 11/30/21; companion document RFC 9112 -->
+<reference anchor="RFC9112" target='https://www.rfc-editor.org/info/rfc9112'>
+<front>
+<title>HTTP/1.1</title>
+<author fullname="Roy Fielding" role="editor">
+<organization>Adobe</organization>
+</author>
+<author fullname="Mark Nottingham" role="editor">
+<organization>Fastly</organization>
+</author>
+<author fullname="Julian Reschke" role="editor">
+<organization>greenbytes GmbH</organization>
+</author>
+<date month="December" year="2021"/>
+</front>
+<seriesInfo name="RFC" value="9112"/>
+<seriesInfo name="DOI" value="10.17487/RFC9112"/>
+</reference>
+
+<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2616.xml"/>
+<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7234.xml"/>
+<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5861.xml"/>
+<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6265.xml"/>
+<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml"/>
+
          </references>
       </references>
       <section anchor="collected.abnf" title="Collected ABNF">
-         <t>In the collected ABNF below, list rules are expanded as per <xref target="HTTP" section="5.6.1"/>.</t>
+         <t>In the collected ABNF below, list rules are expanded as per <xref target="RFC9110" section="5.6.1"/>.</t>
          <sourcecode type="abnf" name="draft-ietf-httpbis-cache-latest.parsed-abnf"><![CDATA[Age = delta-seconds
 
 Cache-Control = [ cache-directive *( OWS "," OWS cache-directive ) ]
@@ -2373,22 +2400,22 @@
       </section>
       <section anchor="changes.from.rfc.7234" title="Changes from RFC 7234">
          <t>
-   Handling of duplicate and conflicting cache directives has been clarified.
-   (<xref target="calculating.freshness.lifetime"/>)
+   Handling of duplicate and conflicting cache directives has been clarified
+   (<xref target="calculating.freshness.lifetime"/>).
 </t>
          <t>
    Cache invalidation of the URIs in the Location and Content-Location
-   header fields is no longer required, but still allowed.
-   (<xref target="invalidation"/>)
+   header fields is no longer required but is still allowed
+   (<xref target="invalidation"/>).
 </t>
          <t>
    Cache invalidation of the URIs in the Location and Content-Location header fields is disallowed
-   when the origin is different; previously, it was the host.
-   (<xref target="invalidation"/>)
+   when the origin is different; previously, it was the host
+   (<xref target="invalidation"/>).
 </t>
          <t>
-   Handling invalid and multiple Age header field values has been clarified.
-   (<xref target="field.age"/>)
+   Handling invalid and multiple Age header field values has been clarified
+   (<xref target="field.age"/>).
 </t>
          <t>
    Some cache directives defined by this specification now have stronger
@@ -2396,277 +2423,32 @@
    this has been found to create interoperability problems. Consumers of
    extension cache directives are no longer required to accept both token and
    quoted-string forms, but they still need to parse them properly for
-   unknown extensions.
-   (<xref target="field.cache-control"/>)
+   unknown extensions
+   (<xref target="field.cache-control"/>).
 </t>
          <t>
    The "public" and "private" cache directives were clarified, so that they
-   do not make responses reusable under any condition.
-   (<xref target="cache-response-directive"/>)
+   do not make responses reusable under any condition
+   (<xref target="cache-response-directive"/>).
 </t>
          <t>
    The "must-understand" cache directive was introduced; caches are no
    longer required to understand the semantics of new response status codes
-   unless it is present.
-   (<xref target="cache-response-directive.must-understand"/>)
+   unless it is present
+   (<xref target="cache-response-directive.must-understand"/>).
 </t>
          <t>
    The Warning response header was obsoleted. Much of the information
    supported by Warning could be gleaned by examining the response, and the
-   remaining warn-codes — although potentially useful — were entirely
-   advisory. In practice, Warning was not added by caches or intermediaries.
-   (<xref target="field.warning"/>)
+   remaining warn codes -- although potentially useful -- were entirely
+   advisory. In practice, Warning was not added by caches or intermediaries
+   (<xref target="field.warning"/>).
 </t>
       </section>
-      <section anchor="change.log" title="Change Log">
-         <t>This section is to be removed before publishing as an RFC.</t>
-         <section anchor="changes.since.publication.as.rfc"
-                  title="Between RFC7234 and draft 00">
-            <t>
-  The changes were purely editorial:
-</t>
-            <ul>
-               <li>Change boilerplate and abstract to indicate the "draft" status, and update references to ancestor specifications.</li>
-               <li>Remove version "1.1" from document title, indicating that this specification applies to all HTTP versions.</li>
-               <li>Adjust historical notes.</li>
-               <li>Update links to sibling specifications.</li>
-               <li>Replace sections listing changes from RFC 2616 by new empty sections referring to RFC 723x.</li>
-               <li>Remove acknowledgements specific to RFC 723x.</li>
-               <li>Move "Acknowledgements" to the very end and make them unnumbered.</li>
-            </ul>
-         </section>
-         <section anchor="changes.since.00" title="Since draft-ietf-httpbis-cache-00">
-            <t>
-  The changes are purely editorial:
-</t>
-            <ul>
-               <li>Moved all extensibility tips, registration procedures, and registry
-      tables from the IANA considerations to normative sections, reducing the
-      IANA considerations to just instructions that will be removed prior to
-      publication as an RFC.</li>
-            </ul>
-         </section>
-         <section anchor="changes.since.01" title="Since draft-ietf-httpbis-cache-01">
-            <ul>
-               <li>Cite RFC 8126 instead of RFC 5226 (<eref target="https://github.com/httpwg/http-core/issues/75" brackets="angle"/>)</li>
-               <li>In <xref target="field.pragma"/>, misleading statement about the relation between Pragma and Cache-Control (<eref target="https://github.com/httpwg/http-core/issues/92" brackets="angle"/>, <eref target="https://www.rfc-editor.org/errata/eid4674" brackets="angle"/>)</li>
-            </ul>
-         </section>
-         <section anchor="changes.since.02" title="Since draft-ietf-httpbis-cache-02">
-            <ul>
-               <li>In <xref target="response.cacheability"/>, explain that only final responses are cacheable (<eref target="https://github.com/httpwg/http-core/issues/29" brackets="angle"/>)</li>
-               <li>In <xref target="cache-response-directive"/>, clarify what responses various directives apply to (<eref target="https://github.com/httpwg/http-core/issues/52" brackets="angle"/>)</li>
-               <li>In <xref target="validation.sent"/>, clarify the source of validators in conditional requests (<eref target="https://github.com/httpwg/http-core/issues/110"
-                        brackets="angle"/>)</li>
-               <li>Revise <xref target="history.lists"/> to apply to more than just History Lists (<eref target="https://github.com/httpwg/http-core/issues/126"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="field.warning"/>, deprecated "Warning" header field (<eref target="https://github.com/httpwg/http-core/issues/139"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="caching.authenticated.responses"/>, remove a spurious note (<eref target="https://github.com/httpwg/http-core/issues/141"
-                        brackets="angle"/>)</li>
-            </ul>
-         </section>
-         <section anchor="changes.since.03" title="Since draft-ietf-httpbis-cache-03">
-            <ul>
-               <li>In <xref target="caching.overview"/>, define what a disconnected cache is (<eref target="https://github.com/httpwg/http-core/issues/5" brackets="angle"/>)</li>
-               <li>In <xref target="constructing.responses.from.caches"/>, clarify language around how to select a response when more than one matches (<eref target="https://github.com/httpwg/http-core/issues/23" brackets="angle"/>)</li>
-               <li>in <xref target="serving.stale.responses"/>, mention stale-while-revalidate and stale-if-error (<eref target="https://github.com/httpwg/http-core/issues/122"
-                        brackets="angle"/>)</li>
-               <li>Remove requirements around cache request directives (<eref target="https://github.com/httpwg/http-core/issues/129"
-                        brackets="angle"/>)</li>
-               <li>Deprecate Pragma (<eref target="https://github.com/httpwg/http-core/issues/140"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="caching.authenticated.responses"/> and <xref target="cache-response-directive"/>, note effect of some directives on authenticated requests (<eref target="https://github.com/httpwg/http-core/issues/161"
-                        brackets="angle"/>)</li>
-            </ul>
-         </section>
-         <section anchor="changes.since.04" title="Since draft-ietf-httpbis-cache-04">
-            <ul>
-               <li>In <xref target="field.cache-control"/>, remove the registrations for stale-if-error and stale-while-revalidate which happened in RFC 7234 (<eref target="https://github.com/httpwg/http-core/issues/207"
-                        brackets="angle"/>)</li>
-            </ul>
-         </section>
-         <section anchor="changes.since.05" title="Since draft-ietf-httpbis-cache-05">
-            <ul>
-               <li>In <xref target="incomplete.responses"/>, clarify how weakly framed content is considered for purposes of completeness (<eref target="https://github.com/httpwg/http-core/issues/25" brackets="angle"/>)</li>
-               <li>Throughout, describe Vary and cache key operations more clearly (<eref target="https://github.com/httpwg/http-core/issues/28" brackets="angle"/>)</li>
-               <li>In <xref target="response.cacheability"/>, remove concept of "cacheable methods" in favor of prose (<eref target="https://github.com/httpwg/http-core/issues/54" brackets="angle"/>, <eref target="https://www.rfc-editor.org/errata/eid5300" brackets="angle"/>)</li>
-               <li>Refactored <xref target="security.considerations"/>, and added a section on timing attacks (<eref target="https://github.com/httpwg/http-core/issues/233"
-                        brackets="angle"/>)</li>
-               <li>Changed "cacheable by default" to "heuristically cacheable" throughout (<eref target="https://github.com/httpwg/http-core/issues/242"
-                        brackets="angle"/>)</li>
-            </ul>
-         </section>
-         <section anchor="changes.since.06" title="Since draft-ietf-httpbis-cache-06">
-            <ul>
-               <li>In <xref target="response.cacheability"/> and <xref target="cache-response-directive.must-understand"/>, change response cacheability to only require understanding the response status code if the must-understand cache directive is present (<eref target="https://github.com/httpwg/http-core/issues/120"
-                        brackets="angle"/>)</li>
-               <li>Change requirements for handling different forms of cache directives in <xref target="field.cache-control"/> (<eref target="https://github.com/httpwg/http-core/issues/128"
-                        brackets="angle"/>)</li>
-               <li>Fix typo in <xref target="cache-response-directive.s-maxage"/> (<eref target="https://github.com/httpwg/http-core/issues/264"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="cache-response-directive.public"/> and <xref target="cache-response-directive.private"/>, clarify "private" and "public" so that they do not override all other cache directives (<eref target="https://github.com/httpwg/http-core/issues/268"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="response.cacheability"/>, distinguish between private with and without qualifying headers (<eref target="https://github.com/httpwg/http-core/issues/270"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="caching.negotiated.responses"/>, clarify that any "*" as a member of Vary will disable caching (<eref target="https://github.com/httpwg/http-core/issues/286"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="requirements.notation"/>, reference RFC 8174 as well (<eref target="https://github.com/httpwg/http-core/issues/303"
-                        brackets="angle"/>)</li>
-            </ul>
-         </section>
-         <section anchor="changes.since.07" title="Since draft-ietf-httpbis-cache-07">
-            <ul>
-               <li>Throughout, replace "effective request URI", "request-target" and similar with "target URI" (<eref target="https://github.com/httpwg/http-core/issues/259"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="cache-response-directive.public"/> and <xref target="cache-response-directive.private"/>, make it clear that these directives do not ignore other requirements for caching (<eref target="https://github.com/httpwg/http-core/issues/320"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="incomplete.responses"/>, move definition of "complete" into semantics (<eref target="https://github.com/httpwg/http-core/issues/334"
-                        brackets="angle"/>)</li>
-            </ul>
-         </section>
-         <section anchor="changes.since.08" title="Since draft-ietf-httpbis-cache-08">
-            <ul>
-               <li>
-                  <xref target="collected.abnf"/> now uses the sender variant of the "#" list expansion (<eref target="https://github.com/httpwg/http-core/issues/192"
-                        brackets="angle"/>)</li>
-            </ul>
-         </section>
-         <section anchor="changes.since.09" title="Since draft-ietf-httpbis-cache-09">
-            <ul>
-               <li>In <xref target="field.age"/>, discuss handling of invalid and multiple Age header field values (<eref target="https://github.com/httpwg/http-core/issues/193"
-                        brackets="angle"/>)</li>
-               <li>Switch to xml2rfc v3 mode for draft generation (<eref target="https://github.com/httpwg/http-core/issues/394"
-                        brackets="angle"/>)</li>
-            </ul>
-         </section>
-         <section anchor="changes.since.10" title="Since draft-ietf-httpbis-cache-10">
-            <ul>
-               <li>In <xref target="field.cache-control"/> (<xref target="field.cache-control" format="none">Cache-Control</xref>), adjust ABNF to allow empty lists (<eref target="https://github.com/httpwg/http-core/issues/210"
-                        brackets="angle"/>)</li>
-            </ul>
-         </section>
-         <section anchor="changes.since.11" title="Since draft-ietf-httpbis-cache-11">
-            <ul>
-               <li>None.</li>
-            </ul>
-         </section>
-         <section anchor="changes.since.12" title="Since draft-ietf-httpbis-cache-12">
-            <ul>
-               <li>In <xref target="serving.stale.responses"/>, remove 'no-store', as it won't be in cache in the first place (<eref target="https://github.com/httpwg/http-core/issues/447"
-                        brackets="angle"/>, <eref target="https://www.rfc-editor.org/errata/eid6279" brackets="angle"/>)</li>
-               <li>In <xref target="storing.fields"/>, make it clear that only response headers need be stored (<eref target="https://github.com/httpwg/http-core/issues/457"
-                        brackets="angle"/>)</li>
-               <li>Rewrote "Updating Stored Header Fields" <xref target="update"/> (<eref target="https://github.com/httpwg/http-core/issues/458"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="calculating.freshness.lifetime"/> clarify how to handle invalid and conflicting directives (<eref target="https://github.com/httpwg/http-core/issues/460"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="validation.response"/>, mention retry of failed validation requests (<eref target="https://github.com/httpwg/http-core/issues/462"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="validation.response"/>, clarify requirement on storing a full response to a conditional request (<eref target="https://github.com/httpwg/http-core/issues/463"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="field.age"/>, clarify error handling (<eref target="https://github.com/httpwg/http-core/issues/471"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="expiration.model"/>, remove spurious "UTC" (<eref target="https://github.com/httpwg/http-core/issues/472"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="expiration.model"/>, correct the date-related rule names to consider case-insensitive (<eref target="https://github.com/httpwg/http-core/issues/473"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="history.lists"/>, strengthen recommendation for application caches to pay attention to cache directives (<eref target="https://github.com/httpwg/http-core/issues/474"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="constructing.responses.from.caches"/>, mention collapsed requests (<eref target="https://github.com/httpwg/http-core/issues/475"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="invalidation"/>, relax requirements on Content-Location and Location invalidation (<eref target="https://github.com/httpwg/http-core/issues/478"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="freshening.responses"/>, refine the exceptions to update on a 304 (<eref target="https://github.com/httpwg/http-core/issues/488"
-                        brackets="angle"/>)</li>
-               <li>Moved table of Cache-Control directives into <xref target="cache.directive.registration"/> (<eref target="https://github.com/httpwg/http-core/issues/506"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="notation"/>, remove unused core ABNF rules (<eref target="https://github.com/httpwg/http-core/issues/529"
-                        brackets="angle"/>)</li>
-               <li>Changed to using "payload data" when defining requirements about the data being conveyed within a message, instead of the terms "payload body" or "response body" or "representation body", since they often get confused with the HTTP/1.1 message body (which includes transfer coding) (<eref target="https://github.com/httpwg/http-core/issues/553"
-                        brackets="angle"/>)</li>
-            </ul>
-         </section>
-         <section anchor="changes.since.13" title="Since draft-ietf-httpbis-cache-13">
-            <ul>
-               <li>In <xref target="cache-response-directive.must-revalidate"/>, clarify requirements around generating an error response (<eref target="https://github.com/httpwg/http-core/issues/608"
-                        brackets="angle"/>)</li>
-               <li>Changed to using "content" instead of "payload" or "payload data" to avoid confusion with the payload of version-specific messaging frames (<eref target="https://github.com/httpwg/http-core/issues/654"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="freshening.responses"/>, clarify how multiple validators are handled (<eref target="https://github.com/httpwg/http-core/issues/659"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="age.calculations"/>, <xref target="field.cache-control"/>, and <xref target="cache-response-directive.no-cache"/>, remove notes about very old HTTP/1.0 behaviours (<eref target="https://github.com/httpwg/http-core/issues/660"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="cache-response-directive.must-understand"/>, modify operation to be more backwards-compatible with existing implementations (<eref target="https://github.com/httpwg/http-core/issues/661"
-                        brackets="angle"/>)</li>
-            </ul>
-         </section>
-         <section anchor="changes.since.14" title="Since draft-ietf-httpbis-cache-14">
-            <ul>
-               <li>Fix subsection ordering in <xref target="cache-response-directive"/> (<eref target="https://github.com/httpwg/http-core/issues/674"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="caching.overview"/>, define what a cache key is (<eref target="https://github.com/httpwg/http-core/issues/728"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="storing.fields"/>, clarify what cache proxy headers apply to (<eref target="https://github.com/httpwg/http-core/issues/729"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="cache.poisoning"/>, cache poisoning can affect private caches too (<eref target="https://github.com/httpwg/http-core/issues/730"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="field.age"/>, adjust handling of invalid values to match most deployed caches (<eref target="https://github.com/httpwg/http-core/issues/778"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="field.expires"/>, mention parsing requirement relaxation (<eref target="https://github.com/httpwg/http-core/issues/779"
-                        brackets="angle"/>)</li>
-            </ul>
-         </section>
-         <section anchor="changes.since.15" title="Since draft-ietf-httpbis-cache-15">
-            <ul>
-               <li>In <xref target="validation.sent"/>, tune description of relation between cache keys and validators (<eref target="https://github.com/httpwg/http-core/issues/832"
-                        brackets="angle"/>)</li>
-            </ul>
-         </section>
-         <section anchor="changes.since.16" title="Since draft-ietf-httpbis-cache-16">
-            <t>
-  This draft addresses mostly editorial issues raised during or past IETF
-  Last Call; see <eref target="https://github.com/httpwg/http-core/issues?q=label%3Acaching+created%3A%3E2021-05-26"
-                     brackets="angle"/>
-  for a summary.
-</t>
-            <t>
-  Furthermore:
-</t>
-            <ul>
-               <li>Addressed Genart last call review comments (<eref target="https://github.com/httpwg/http-core/issues/847"
-                        brackets="angle"/>)</li>
-               <li>In <xref target="freshening.responses"/>, clarify that only selectable responses are updated (<eref target="https://github.com/httpwg/http-core/issues/839"
-                        brackets="angle"/>)</li>
-            </ul>
-         </section>
-         <section anchor="changes.since.17" title="Since draft-ietf-httpbis-cache-17">
-            <ul>
-               <li>Made reference to <xref target="HTTP11"/> informative only (<eref target="https://github.com/httpwg/http-core/issues/911"
-                        brackets="angle"/>)</li>
-               <li>Move cache-related aspects of validator use from <xref target="HTTP"/> into <xref target="validation.sent"/> (<eref target="https://github.com/httpwg/http-core/issues/933"
-                        brackets="angle"/>)</li>
-               <li>Use term "clock" defined in <xref target="HTTP" section="6.6.1"/> throughout (<eref target="https://github.com/httpwg/http-core/issues/953"
-                        brackets="angle"/>)</li>
-               <li>Throughout, disambiguate "selected representation" and "selected response" (now "chosen response") (<eref target="https://github.com/httpwg/http-core/issues/958"
-                        brackets="angle"/>)</li>
-            </ul>
-         </section>
-         <section anchor="changes.since.18" title="Since draft-ietf-httpbis-cache-18">
-            <ul>
-               <li>In <xref target="field.name.registration"/>, change status 'standard' to 'permanent' (<eref target="https://github.com/httpwg/http-core/issues/978"
-                        brackets="angle"/>)</li>
-            </ul>
-         </section>
-         <section anchor="changes.since.19" title="Since draft-ietf-httpbis-cache-19">
-            <ul>
-               <li>None.</li>
-            </ul>
-         </section>
-      </section>
+    
       <section anchor="acks" numbered="false" title="Acknowledgements">
          <t>
-  See Appendix "Acknowledgements" of <xref target="HTTP"/>.
+  See the "Acknowledgements" section in <xref target="RFC9110"/>, which applies to this document.
 </t>
       </section>
    </back>
