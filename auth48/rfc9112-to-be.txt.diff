--- draft-ietf-httpbis-messaging-latest.txt	2022-01-15 18:28:28.507087600 +0100
+++ rfc9112-to-be.txt	2022-01-15 11:02:17.669390800 +0100
@@ -2,17 +2,16 @@
 
 
 
-HTTP Working Group                                      R. Fielding, Ed.
-Internet-Draft                                                     Adobe
-Obsoletes: 7230 (if approved)                         M. Nottingham, Ed.
-Intended status: Standards Track                                  Fastly
-Expires: 19 July 2022                                    J. Reschke, Ed.
-                                                              greenbytes
-                                                         15 January 2022
+Internet Engineering Task Force (IETF)                  R. Fielding, Ed.
+Request for Comments: 9112                                         Adobe
+STD: 97                                               M. Nottingham, Ed.
+Obsoletes: 7230                                                   Fastly
+Category: Standards Track                                J. Reschke, Ed.
+ISSN: 2070-1721                                               greenbytes
+                                                            January 2022
 
 
                                 HTTP/1.1
-                  draft-ietf-httpbis-messaging-latest
 
 Abstract
 
@@ -24,36 +23,19 @@
 
    This document obsoletes portions of RFC 7230.
 
-Editorial Note
-
-   This note is to be removed before publishing as an RFC.
-
-   Discussion of this draft takes place on the HTTP working group
-   mailing list (ietf-http-wg@w3.org), which is archived at
-   <https://lists.w3.org/Archives/Public/ietf-http-wg/>.
-
-   Working Group information can be found at <https://httpwg.org/>;
-   source code and issues list for this draft can be found at
-   <https://github.com/httpwg/http-core>.
-
-   The changes in this draft are summarized in Appendix D.1.
-
 Status of This Memo
 
-   This Internet-Draft is submitted in full conformance with the
-   provisions of BCP 78 and BCP 79.
-
-   Internet-Drafts are working documents of the Internet Engineering
-   Task Force (IETF).  Note that other groups may also distribute
-   working documents as Internet-Drafts.  The list of current Internet-
-   Drafts is at https://datatracker.ietf.org/drafts/current/.
-
-   Internet-Drafts are draft documents valid for a maximum of six months
-   and may be updated, replaced, or obsoleted by other documents at any
-   time.  It is inappropriate to use Internet-Drafts as reference
-   material or to cite them other than as "work in progress."
+   This is an Internet Standards Track document.
 
-   This Internet-Draft will expire on 19 July 2022.
+   This document is a product of the Internet Engineering Task Force
+   (IETF).  It represents the consensus of the IETF community.  It has
+   received public review and has been approved for publication by the
+   Internet Engineering Steering Group (IESG).  Further information on
+   Internet Standards is available in Section 2 of RFC 7841.
+
+   Information about the current status of this document, any errata,
+   and how to provide feedback on it may be obtained at
+   https://www.rfc-editor.org/info/rfc9112.
 
 Copyright Notice
 
@@ -61,13 +43,14 @@
    document authors.  All rights reserved.
 
    This document is subject to BCP 78 and the IETF Trust's Legal
-   Provisions Relating to IETF Documents (https://trustee.ietf.org/
-   license-info) in effect on the date of publication of this document.
-   Please review these documents carefully, as they describe your rights
-   and restrictions with respect to this document.  Code Components
-   extracted from this document must include Revised BSD License text as
-   described in Section 4.e of the Trust Legal Provisions and are
-   provided without warranty as described in the Revised BSD License.
+   Provisions Relating to IETF Documents
+   (https://trustee.ietf.org/license-info) in effect on the date of
+   publication of this document.  Please review these documents
+   carefully, as they describe your rights and restrictions with respect
+   to this document.  Code Components extracted from this document must
+   include Revised BSD License text as described in Section 4.e of the
+   Trust Legal Provisions and are provided without warranty as described
+   in the Revised BSD License.
 
    This document may contain material from IETF Documents or IETF
    Contributions published or made publicly available before November
@@ -149,7 +132,7 @@
      B.3.  Conversion of Date Formats
      B.4.  Conversion of Content-Encoding
      B.5.  Conversion of Content-Transfer-Encoding
-     B.6.  MHTML and Line Length Limitations
+     B.6.  MHTML and Line-Length Limitations
    Appendix C.  Changes from Previous RFCs
      C.1.  Changes from HTTP/0.9
      C.2.  Changes from HTTP/1.0
@@ -157,8 +140,6 @@
        C.2.2.  Keep-Alive Connections
        C.2.3.  Introduction of Transfer-Encoding
      C.3.  Changes from RFC 7230
-   Appendix D.  Change Log
-     D.1.  Since draft-ietf-httpbis-messaging-19
    Acknowledgements
    Index
    Authors' Addresses
@@ -170,7 +151,7 @@
    self-descriptive messages for flexible interaction with network-based
    hypertext information systems.  HTTP/1.1 is defined by:
 
-   *  This document
+   *  RFC 9112
 
    *  "HTTP Semantics" [HTTP]
 
@@ -190,8 +171,8 @@
 
    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
    "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
-   "OPTIONAL" in this document are to be interpreted as described in BCP
-   14 [RFC2119] [RFC8174] when, and only when, they appear in all
+   "OPTIONAL" in this document are to be interpreted as described in
+   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
    capitals, as shown here.
 
    Conformance criteria and considerations regarding error handling are
@@ -274,9 +255,9 @@
    response is interpreted as an unknown or invalid request method), and
    clients are implemented to only expect a response.
 
-   HTTP makes use of some protocol elements similar to the Multipurpose
-   Internet Mail Extensions (MIME) [RFC2045].  See Appendix B for the
-   differences between HTTP and MIME messages.
+   HTTP makes use of some protocol elements similar to Multipurpose
+   Internet Mail Extensions (MIME) [RFC2045].  See Appendix B of this
+   document for the differences between HTTP and MIME messages.
 
 2.2.  Message Parsing
 
@@ -389,9 +370,9 @@
 
 3.  Request Line
 
-   A request-line begins with a method token, followed by a single space
-   (SP), the request-target, another single space (SP), and ends with
-   the protocol version.
+   A request-line begins with a method token, followed by a single SP,
+   the request-target, and another single SP, and ends with the protocol
+   version.
 
      request-line   = method SP request-target SP HTTP-version
 
@@ -425,8 +406,8 @@
      method         = token
 
    The request methods defined by this specification can be found in
-   Section 9 of [HTTP], along with information regarding the HTTP method
-   registry and considerations for defining new methods.
+   Section 9 of [HTTP], along with information regarding the "HTTP
+   Method Registry" and considerations for defining new methods.
 
 3.2.  Request Target
 
@@ -664,9 +645,8 @@
 4.  Status Line
 
    The first line of a response message is the status-line, consisting
-   of the protocol version, a space (SP), the status code, another
-   space, and ending with an OPTIONAL textual phrase describing the
-   status code.
+   of the protocol version, an SP, the status code, and another SP and
+   ending with an OPTIONAL textual phrase describing the status code.
 
      status-line = HTTP-version SP status-code SP [ reason-phrase ]
 
@@ -799,10 +779,11 @@
    Content-Length or Transfer-Encoding header field.  Request message
    framing is independent of method semantics.
 
-   The presence of a message body in a response depends on both the
-   request method to which it is responding and the response status code
-   (Section 4), and corresponds to when content is allowed; see
-   Section 6.4 of [HTTP].
+   The presence of a message body in a response, as detailed in
+   Section 6.3, depends on both the request method to which it is
+   responding and the response status code.  This corresponds to when
+   response content is allowed by HTTP semantics (Section 6.4.1 of
+   [HTTP]).
 
 6.1.  Transfer-Encoding
 
@@ -978,7 +959,7 @@
        error, unless the field value can be successfully parsed as a
        comma-separated list (Section 5.6.1 of [HTTP]), all values in the
        list are valid, and all values in the list are the same (in which
-       case the message is processed with that single value used as the
+       case, the message is processed with that single value used as the
        Content-Length field value).  If the unrecoverable error is in a
        request message, the server MUST respond with a 400 (Bad Request)
        status code and then close the connection.  If it is in a
@@ -1055,10 +1036,11 @@
    that is being transferred.
 
    All transfer-coding names are case-insensitive and ought to be
-   registered within the HTTP Transfer Coding registry, as defined in
-   Section 7.3.  They are used in the Transfer-Encoding (Section 6.1)
-   and TE (Section 10.1.4 of [HTTP]) header fields (the latter also
-   defining the "transfer-coding" grammar).
+   registered within the "Hypertext Transfer Protocol (HTTP) Transfer
+   Coding Registry", as defined in Section 7.3.  They are used in the
+   Transfer-Encoding (Section 6.1) and TE (Section 10.1.4 of [HTTP])
+   header fields (the latter also defining the "transfer-coding"
+   grammar).
 
 7.1.  Chunked Transfer Coding
 
@@ -1201,8 +1183,8 @@
 
 7.3.  Transfer Coding Registry
 
-   The "HTTP Transfer Coding Registry" defines the namespace for
-   transfer coding names.  It is maintained at
+   The "Hypertext Transfer Protocol (HTTP) Transfer Coding Registry"
+   defines the namespace for transfer coding names.  It is maintained at
    <https://www.iana.org/assignments/http-parameters>.
 
    Registrations MUST include the following fields:
@@ -1216,11 +1198,11 @@
    Names of transfer codings MUST NOT overlap with names of content
    codings (Section 8.4.1 of [HTTP]) unless the encoding transformation
    is identical, as is the case for the compression codings defined in
-   Section 7.2.
+   Section 7.2 of this document.
 
    The TE header field (Section 10.1.4 of [HTTP]) uses a pseudo-
-   parameter named "q" as rank value when multiple transfer codings are
-   acceptable.  Future registrations of transfer codings SHOULD NOT
+   parameter named "q" as the rank value when multiple transfer codings
+   are acceptable.  Future registrations of transfer codings SHOULD NOT
    define parameters called "q" (case-insensitively) in order to avoid
    ambiguities.
 
@@ -1313,10 +1295,10 @@
    to use a proxy via some other connection, port, or protocol.
 
    HTTP implementations are expected to engage in connection management,
-   which includes maintaining the state of current connections;
-   establishing a new connection or reusing an existing connection;
-   processing messages received on a connection; detecting connection
-   failures; and closing each connection.  Most clients maintain
+   which includes maintaining the state of current connections,
+   establishing a new connection or reusing an existing connection,
+   processing messages received on a connection, detecting connection
+   failures, and closing each connection.  Most clients maintain
    multiple connections in parallel, including more than one connection
    per server endpoint.  Most servers are designed to maintain thousands
    of concurrent connections, while controlling request queues to enable
@@ -1392,7 +1374,7 @@
    have a self-defined message length (i.e., one not defined by closure
    of the connection), as described in Section 6.  A server MUST read
    the entire request message body or close the connection after sending
-   its response, since otherwise the remaining data on a persistent
+   its response; otherwise, the remaining data on a persistent
    connection would be misinterpreted as the next request.  Likewise, a
    client MUST read the entire response message body if it intends to
    reuse the same connection for a subsequent request.
@@ -1533,9 +1515,9 @@
    as a header field might conflict with the "close" connection option.
 
    A client that sends a "close" connection option MUST NOT send further
-   requests on that connection (after the one containing the "close")
-   and MUST close the connection after reading the final response
-   message corresponding to this request.
+   requests on that connection (after the one containing the close) and
+   MUST close the connection after reading the final response message
+   corresponding to this request.
 
    A server that receives a "close" connection option MUST initiate
    closure of the connection (see below) after it sends the final
@@ -1613,7 +1595,7 @@
    data already received, but it could indicate that subsequent data
    might have been truncated.  As TLS is not directly aware of HTTP
    message framing, it is necessary to examine the HTTP data itself to
-   determine whether messages were complete.  Handling of incomplete
+   determine whether messages are complete.  Handling of incomplete
    messages is defined in Section 8.
 
    When encountering an incomplete close, a client SHOULD treat as
@@ -1648,7 +1630,7 @@
    The "message/http" media type can be used to enclose a single HTTP
    request or response message, provided that it obeys the MIME
    restrictions for all "message" types regarding line length and
-   encodings.  Because of the line length limitations, field values
+   encodings.  Because of the line-length limitations, field values
    within "message/http" are allowed to use line folding (obs-fold), as
    described in Section 5.2, to convey the field value over multiple
    lines.  A recipient of "message/http" data MUST replace any obsolete
@@ -1692,8 +1674,8 @@
 
                             Macintosh file type code(s):  N/A
 
-   Person and email address to contact for further information:  See Aut
-      hors' Addresses section.
+   Person and email address to contact for further information:
+      See Authors' Addresses section.
 
    Intended usage:  COMMON
 
@@ -1746,8 +1728,8 @@
 
                             Macintosh file type code(s):  N/A
 
-   Person and email address to contact for further information:  See Aut
-      hors' Addresses section.
+   Person and email address to contact for further information:
+      See Authors' Addresses section.
 
    Intended usage:  COMMON
 
@@ -1766,7 +1748,7 @@
 
 11.1.  Response Splitting
 
-   Response splitting (a.k.a.  CRLF injection) is a common technique,
+   Response splitting (a.k.a. CRLF injection) is a common technique,
    used in various attacks on Web usage, that exploits the line-based
    nature of HTTP message framing and the ordered association of
    requests to responses on persistent connections [Klein].  This
@@ -1901,32 +1883,33 @@
    registration procedure of Section 7.3 and the content coding names
    summarized in the table below.
 
-   +============+=========================================+===========+
-   | Name       | Description                             | Reference |
-   +============+=========================================+===========+
-   | chunked    | Transfer in a series of chunks          | Section   |
-   |            |                                         | 7.1       |
-   +------------+-----------------------------------------+-----------+
-   | compress   | UNIX "compress" data format [Welch]     | Section   |
-   |            |                                         | 7.2       |
-   +------------+-----------------------------------------+-----------+
-   | deflate    | "deflate" compressed data [RFC1951]     | Section   |
-   |            | inside the "zlib" data format [RFC1950] | 7.2       |
-   +------------+-----------------------------------------+-----------+
-   | gzip       | GZIP file format [RFC1952]              | Section   |
-   |            |                                         | 7.2       |
-   +------------+-----------------------------------------+-----------+
-   | trailers   | (reserved)                              | Section   |
-   |            |                                         | 12.3      |
-   +------------+-----------------------------------------+-----------+
-   | x-compress | Deprecated (alias for compress)         | Section   |
-   |            |                                         | 7.2       |
-   +------------+-----------------------------------------+-----------+
-   | x-gzip     | Deprecated (alias for gzip)             | Section   |
-   |            |                                         | 7.2       |
-   +------------+-----------------------------------------+-----------+
+   +============+===============================+===========+
+   | Name       | Description                   | Reference |
+   +============+===============================+===========+
+   | chunked    | Transfer in a series of       | Section   |
+   |            | chunks                        | 7.1       |
+   +------------+-------------------------------+-----------+
+   | compress   | UNIX "compress" data format   | Section   |
+   |            | [Welch]                       | 7.2       |
+   +------------+-------------------------------+-----------+
+   | deflate    | "deflate" compressed data     | Section   |
+   |            | ([RFC1951]) inside the "zlib" | 7.2       |
+   |            | data format ([RFC1950])       |           |
+   +------------+-------------------------------+-----------+
+   | gzip       | GZIP file format [RFC1952]    | Section   |
+   |            |                               | 7.2       |
+   +------------+-------------------------------+-----------+
+   | trailers   | (reserved)                    | Section   |
+   |            |                               | 12.3      |
+   +------------+-------------------------------+-----------+
+   | x-compress | Deprecated (alias for         | Section   |
+   |            | compress)                     | 7.2       |
+   +------------+-------------------------------+-----------+
+   | x-gzip     | Deprecated (alias for gzip)   | Section   |
+   |            |                               | 7.2       |
+   +------------+-------------------------------+-----------+
 
-                                 Table 2
+                            Table 2
 
       |  *Note:* the coding name "trailers" is reserved because its use
       |  would conflict with the keyword "trailers" in the TE header
@@ -1952,16 +1935,12 @@
 13.1.  Normative References
 
    [CACHING]  Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
-              Ed., "HTTP Caching", Work in Progress, Internet-Draft,
-              draft-ietf-httpbis-cache-latest, January 2022,
-              <https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-
-              cache-latest>.
+              Ed., "HTTP Caching", RFC 9111, DOI 10.17487/RFC9111,
+              January 2022, <https://www.rfc-editor.org/info/rfc9111>.
 
    [HTTP]     Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
-              Ed., "HTTP Semantics", Work in Progress, Internet-Draft,
-              draft-ietf-httpbis-semantics-latest, January 2022,
-              <https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-
-              semantics-latest>.
+              Ed., "HTTP Semantics", RFC 9110, DOI 10.17487/RFC9110,
+              January 2022, <https://www.rfc-editor.org/info/rfc9110>.
 
    [RFC1950]  Deutsch, P. and J-L. Gailly, "ZLIB Compressed Data Format
               Specification version 3.3", RFC 1950,
@@ -2142,16 +2121,15 @@
 Appendix B.  Differences between HTTP and MIME
 
    HTTP/1.1 uses many of the constructs defined for the Internet Message
-   Format [RFC5322] and the Multipurpose Internet Mail Extensions (MIME)
+   Format [RFC5322] and Multipurpose Internet Mail Extensions (MIME)
    [RFC2045] to allow a message body to be transmitted in an open
-   variety of representations and with extensible fields.  However, RFC
-   2045 is focused only on email; applications of HTTP have many
-   characteristics that differ from email; hence, HTTP has features that
-   differ from MIME.  These differences were carefully chosen to
-   optimize performance over binary connections, to allow greater
-   freedom in the use of new media types, to make date comparisons
-   easier, and to acknowledge the practice of some early HTTP servers
-   and clients.
+   variety of representations and with extensible fields.  However, some
+   of these constructs have been reinterpreted to better fit the needs
+   of interactive communication, leading to some differences in how MIME
+   constructs are used within HTTP.  These differences were carefully
+   chosen to optimize performance over binary connections, allow greater
+   freedom in the use of new media types, ease date comparisons, and
+   accommodate common implementations.
 
    This appendix describes specific areas where HTTP differs from MIME.
    Proxies and gateways to and from strict MIME environments need to be
@@ -2173,16 +2151,16 @@
    MIME requires that an Internet mail body part be converted to
    canonical form prior to being transferred, as described in Section 4
    of [RFC2049], and that content with a type of "text" represents line
-   breaks as CRLF, forbidding the use of CR or LF outside of line break
+   breaks as CRLF, forbidding the use of CR or LF outside of line-break
    sequences [RFC2046].  In contrast, HTTP does not care whether CRLF,
    bare CR, or bare LF are used to indicate a line break within content.
 
    A proxy or gateway from HTTP to a strict MIME environment ought to
-   translate all line breaks within text media types to the RFC 2049
-   canonical form of CRLF.  Note, however, this might be complicated by
-   the presence of a Content-Encoding and by the fact that HTTP allows
-   the use of some charsets that do not use octets 13 and 10 to
-   represent CR and LF, respectively.
+   translate all line breaks within text media types to the canonical
+   form of CRLF per [RFC2049].  However, note that this might be
+   complicated by the presence of a Content-Encoding and by the fact
+   that HTTP allows the use of some charsets that do not use octets 13
+   and 10 to represent CR and LF, respectively.
 
    Conversion will break any cryptographic checksums applied to the
    original content unless the original content is already in canonical
@@ -2194,13 +2172,13 @@
    HTTP/1.1 uses a restricted set of date formats (Section 5.6.7 of
    [HTTP]) to simplify the process of date comparison.  Proxies and
    gateways from other protocols ought to ensure that any Date header
-   field present in a message conforms to one of the HTTP/1.1 formats
-   and rewrite the date if necessary.
+   field present in a message conforms to one of the HTTP/1.1 formats;
+   otherwise, rewrite the date if necessary.
 
 B.4.  Conversion of Content-Encoding
 
-   MIME does not include any concept equivalent to HTTP/1.1's Content-
-   Encoding header field.  Since this acts as a modifier on the media
+   MIME does not include any concept equivalent to the Content-Encoding
+   header field of HTTP/1.1.  Since this acts as a modifier on the media
    type, proxies and gateways from HTTP to MIME-compliant protocols
    ought to either change the value of the Content-Type header field or
    decode the representation before forwarding the message.  (Some
@@ -2224,17 +2202,18 @@
    appropriate Content-Transfer-Encoding if doing so will improve the
    likelihood of safe transport over the destination protocol.
 
-B.6.  MHTML and Line Length Limitations
+B.6.  MHTML and Line-Length Limitations
 
-   HTTP implementations that share code with MHTML [RFC2557]
-   implementations need to be aware of MIME line length limitations.
-   Since HTTP does not have this limitation, HTTP does not fold long
-   lines.  MHTML messages being transported by HTTP follow all
-   conventions of MHTML, including line length limitations and folding,
-   canonicalization, etc., since HTTP transfers message-bodies without
-   modification and, aside from the "multipart/byteranges" type
-   (Section 14.6 of [HTTP]), does not interpret the content or any MIME
-   header lines that might be contained therein.
+   HTTP implementations that share code with MIME Encapsulation of
+   Aggregate Documents, such as HTML (MHTML) [RFC2557] implementations
+   need to be aware of MIME line-length limitations.  Since HTTP does
+   not have this limitation, HTTP does not fold long lines.  MHTML
+   messages being transported by HTTP follow all conventions of MHTML,
+   including line-length limitations and folding, canonicalization,
+   etc., since HTTP transfers message-bodies without modification and,
+   aside from the "multipart/byteranges" type (Section 14.6 of [HTTP]),
+   does not interpret the content or any MIME header lines that might be
+   contained therein.
 
 Appendix C.  Changes from Previous RFCs
 
@@ -2254,8 +2233,8 @@
 
    The requirements that clients and servers support the Host header
    field (Section 7.2 of [HTTP]), report an error if it is missing from
-   an HTTP/1.1 request, and accept absolute URIs (Section 3.2) are among
-   the most important changes defined by HTTP/1.1.
+   an HTTP/1.1 request, and accept absolute URIs (Section 3.2 of this
+   document) are among the most important changes defined by HTTP/1.1.
 
    Older HTTP/1.0 clients assumed a one-to-one relationship of IP
    addresses and servers; there was no established mechanism for
@@ -2326,8 +2305,8 @@
 
    In the ABNF for chunked extensions, (bad) whitespace around ";" and
    "=" has been reintroduced.  Whitespace was removed in [RFC7230], but
-   that change was found to break existing implementations (see
-   [Err4667]).  (Section 7.1.1)
+   that change was found to break existing implementations.  (See
+   [Err4667] and Section 7.1.1 of this document.)
 
    Trailer field semantics now transcend the specifics of chunked
    encoding.  The decoding algorithm for chunked (Section 7.1.3) has
@@ -2343,18 +2322,6 @@
    avoid conflicts with the use of ranks in the TE header field.
    (Section 7.3)
 
-Appendix D.  Change Log
-
-   This section is to be removed before publishing as an RFC.
-
-   See <https://www.ietf.org/archive/id/draft-ietf-httpbis-messaging-
-   19.html#appendix-D> for changes up to version 19 of this document.
-
-D.1.  Since draft-ietf-httpbis-messaging-19
-
-   *  In Section 12.1, change status 'standard' to 'permanent'
-      (<https://github.com/httpwg/http-core/issues/978>)
-
 Acknowledgements
 
    See Appendix "Acknowledgements" of [HTTP], which applies to this
