--- draft-ietf-httpbis-messaging-latest.txt	2022-03-11 09:35:28.378683700 +0100
+++ rfc9112-to-be.txt	2022-03-11 18:28:04.420263000 +0100
@@ -2,17 +2,16 @@
 
 
 
-HTTP Working Group                                      R. Fielding, Ed.
-Internet-Draft                                                     Adobe
-Obsoletes: 7230 (if approved)                         M. Nottingham, Ed.
-Intended status: Standards Track                                  Fastly
-Expires: 12 September 2022                               J. Reschke, Ed.
-                                                              greenbytes
-                                                           11 March 2022
+Internet Engineering Task Force (IETF)                  R. Fielding, Ed.
+Request for Comments: 9112                                         Adobe
+STD: 97                                               M. Nottingham, Ed.
+Obsoletes: 7230                                                   Fastly
+Category: Standards Track                                J. Reschke, Ed.
+ISSN: 2070-1721                                               greenbytes
+                                                           February 2022
 
 
                                 HTTP/1.1
-                  draft-ietf-httpbis-messaging-latest
 
 Abstract
 
@@ -24,36 +23,19 @@
 
    This document obsoletes portions of RFC 7230.
 
-Editorial Note
-
-   This note is to be removed before publishing as an RFC.
-
-   Discussion of this draft takes place on the HTTP working group
-   mailing list (ietf-http-wg@w3.org), which is archived at
-   <https://lists.w3.org/Archives/Public/ietf-http-wg/>.
-
-   Working Group information can be found at <https://httpwg.org/>;
-   source code and issues list for this draft can be found at
-   <https://github.com/httpwg/http-core>.
-
-   The changes in this draft are summarized in Appendix D.1.
-
 Status of This Memo
 
-   This Internet-Draft is submitted in full conformance with the
-   provisions of BCP 78 and BCP 79.
-
-   Internet-Drafts are working documents of the Internet Engineering
-   Task Force (IETF).  Note that other groups may also distribute
-   working documents as Internet-Drafts.  The list of current Internet-
-   Drafts is at https://datatracker.ietf.org/drafts/current/.
-
-   Internet-Drafts are draft documents valid for a maximum of six months
-   and may be updated, replaced, or obsoleted by other documents at any
-   time.  It is inappropriate to use Internet-Drafts as reference
-   material or to cite them other than as "work in progress."
+   This is an Internet Standards Track document.
 
-   This Internet-Draft will expire on 12 September 2022.
+   This document is a product of the Internet Engineering Task Force
+   (IETF).  It represents the consensus of the IETF community.  It has
+   received public review and has been approved for publication by the
+   Internet Engineering Steering Group (IESG).  Further information on
+   Internet Standards is available in Section 2 of RFC 7841.
+
+   Information about the current status of this document, any errata,
+   and how to provide feedback on it may be obtained at
+   https://www.rfc-editor.org/info/rfc9112.
 
 Copyright Notice
 
@@ -61,13 +43,14 @@
    document authors.  All rights reserved.
 
    This document is subject to BCP 78 and the IETF Trust's Legal
-   Provisions Relating to IETF Documents (https://trustee.ietf.org/
-   license-info) in effect on the date of publication of this document.
-   Please review these documents carefully, as they describe your rights
-   and restrictions with respect to this document.  Code Components
-   extracted from this document must include Revised BSD License text as
-   described in Section 4.e of the Trust Legal Provisions and are
-   provided without warranty as described in the Revised BSD License.
+   Provisions Relating to IETF Documents
+   (https://trustee.ietf.org/license-info) in effect on the date of
+   publication of this document.  Please review these documents
+   carefully, as they describe your rights and restrictions with respect
+   to this document.  Code Components extracted from this document must
+   include Revised BSD License text as described in Section 4.e of the
+   Trust Legal Provisions and are provided without warranty as described
+   in the Revised BSD License.
 
    This document may contain material from IETF Documents or IETF
    Contributions published or made publicly available before November
@@ -157,8 +140,6 @@
        C.2.2.  Keep-Alive Connections
        C.2.3.  Introduction of Transfer-Encoding
      C.3.  Changes from RFC 7230
-   Appendix D.  Change Log
-     D.1.  Since draft-ietf-httpbis-messaging-19
    Acknowledgements
    Index
    Authors' Addresses
@@ -190,8 +171,8 @@
 
    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
    "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
-   "OPTIONAL" in this document are to be interpreted as described in BCP
-   14 [RFC2119] [RFC8174] when, and only when, they appear in all
+   "OPTIONAL" in this document are to be interpreted as described in
+   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
    capitals, as shown here.
 
    Conformance criteria and considerations regarding error handling are
@@ -874,8 +855,8 @@
    that implementations advertising only HTTP/1.0 support will not
    understand how to process transfer-encoded content, and that an
    HTTP/1.0 message received with a Transfer-Encoding is likely to have
-   been forwarded without proper handling of the chunked transfer coding
-   in transit.
+   been forwarded without proper handling of the chunked encoding in
+   transit.
 
    A client MUST NOT send a request containing Transfer-Encoding unless
    it knows the server will handle HTTP/1.1 requests (or later minor
@@ -886,11 +867,11 @@
    later minor revisions).
 
    Early implementations of Transfer-Encoding would occasionally send
-   both a chunked transfer coding for message framing and an estimated
-   Content-Length header field for use by progress bars.  This is why
-   Transfer-Encoding is defined as overriding Content-Length, as opposed
-   to them being mutually incompatible.  Unfortunately, forwarding such
-   a message can lead to vulnerabilities regarding request smuggling
+   both a chunked encoding for message framing and an estimated Content-
+   Length header field for use by progress bars.  This is why Transfer-
+   Encoding is defined as overriding Content-Length, as opposed to them
+   being mutually incompatible.  Unfortunately, forwarding such a
+   message can lead to vulnerabilities regarding request smuggling
    (Section 11.2) or response splitting (Section 11.1) attacks if any
    downstream recipient fails to parse the message according to this
    specification, particularly when a downstream recipient only
@@ -1031,7 +1012,7 @@
 
    A user agent that sends a request that contains a message body MUST
    send either a valid Content-Length header field or use the chunked
-   transfer coding.  A client MUST NOT use the chunked transfer coding
+   transfer coding.  A client MUST NOT use the chunked transfer encoding
    unless it knows the server will handle HTTP/1.1 (or later) requests;
    such knowledge can be in the form of specific user configuration or
    by remembering the version of a prior received response.
@@ -1099,12 +1080,12 @@
    errors due to integer conversion overflows or precision loss due to
    integer representation.
 
-   The chunked coding does not define any parameters.  Their presence
+   The chunked encoding does not define any parameters.  Their presence
    SHOULD be treated as an error.
 
 7.1.1.  Chunk Extensions
 
-   The chunked coding allows each chunk to include zero or more chunk
+   The chunked encoding allows each chunk to include zero or more chunk
    extensions, immediately following the chunk-size, for the sake of
    supplying per-chunk metadata (such as a signature or hash), mid-
    message control information, or randomization of message body size.
@@ -1115,8 +1096,8 @@
      chunk-ext-name = token
      chunk-ext-val  = token / quoted-string
 
-   The chunked coding is specific to each connection and is likely to be
-   removed or recoded by each recipient (including intermediaries)
+   The chunked encoding is specific to each connection and is likely to
+   be removed or recoded by each recipient (including intermediaries)
    before any higher-level application would have a chance to inspect
    the extensions.  Hence, the use of chunk extensions is generally
    limited to specialized HTTP services such as "long polling" (where
@@ -1142,7 +1123,7 @@
 
      trailer-section   = *( field-line CRLF )
 
-   A recipient that removes the chunked coding from a message MAY
+   A recipient that removes the chunked encoding from a message MAY
    selectively retain or discard the received trailer fields.  A
    recipient that retains a received trailer field MUST either store/
    forward the trailer field separately from the received header fields
@@ -1234,7 +1215,7 @@
 7.4.  Negotiating Transfer Codings
 
    The TE field (Section 10.1.4 of [HTTP]) is used in HTTP/1.1 to
-   indicate what transfer codings, besides chunked, the client is
+   indicate what transfer-codings, besides chunked, the client is
    willing to accept in the response and whether the client is willing
    to preserve trailer fields in a chunked transfer coding.
 
@@ -1695,8 +1676,8 @@
 
                             Macintosh file type code(s):  N/A
 
-   Person and email address to contact for further information:  See Aut
-      hors' Addresses section.
+   Person and email address to contact for further information:
+      See Authors' Addresses section.
 
    Intended usage:  COMMON
 
@@ -1749,8 +1730,8 @@
 
                             Macintosh file type code(s):  N/A
 
-   Person and email address to contact for further information:  See Aut
-      hors' Addresses section.
+   Person and email address to contact for further information:
+      See Authors' Addresses section.
 
    Intended usage:  COMMON
 
@@ -1769,7 +1750,7 @@
 
 11.1.  Response Splitting
 
-   Response splitting (a.k.a.  CRLF injection) is a common technique,
+   Response splitting (a.k.a. CRLF injection) is a common technique,
    used in various attacks on Web usage, that exploits the line-based
    nature of HTTP message framing and the ordered association of
    requests to responses on persistent connections [Klein].  This
@@ -1956,16 +1937,12 @@
 13.1.  Normative References
 
    [CACHING]  Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
-              Ed., "HTTP Caching", Work in Progress, Internet-Draft,
-              draft-ietf-httpbis-cache-latest, March 2022,
-              <https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-
-              cache-latest>.
+              Ed., "HTTP Caching", RFC 9111, DOI 10.17487/RFC9111,
+              January 2022, <https://www.rfc-editor.org/info/rfc9111>.
 
    [HTTP]     Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
-              Ed., "HTTP Semantics", Work in Progress, Internet-Draft,
-              draft-ietf-httpbis-semantics-latest, March 2022,
-              <https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-
-              semantics-latest>.
+              Ed., "HTTP Semantics", RFC 9110, DOI 10.17487/RFC9110,
+              January 2022, <https://www.rfc-editor.org/info/rfc9110>.
 
    [RFC1950]  Deutsch, P. and J-L. Gailly, "ZLIB Compressed Data Format
               Specification version 3.3", RFC 1950,
@@ -2330,8 +2307,8 @@
    (Section 7.1.1)
 
    Trailer field semantics now transcend the specifics of chunked
-   transfer coding.  The decoding algorithm for chunked (Section 7.1.3)
-   has been updated to encourage storage/forwarding of trailer fields
+   encoding.  The decoding algorithm for chunked (Section 7.1.3) has
+   been updated to encourage storage/forwarding of trailer fields
    separately from the header section, to only allow merging into the
    header section if the recipient knows the corresponding field
    definition permits and defines how to merge, and otherwise to discard
@@ -2343,25 +2320,6 @@
    avoid conflicts with the use of ranks in the TE header field.
    (Section 7.3)
 
-Appendix D.  Change Log
-
-   This section is to be removed before publishing as an RFC.
-
-   See <https://www.ietf.org/archive/id/draft-ietf-httpbis-messaging-
-   19.html#appendix-D> for changes up to version 19 of this document.
-
-D.1.  Since draft-ietf-httpbis-messaging-19
-
-   This (unpublished) draft contains changes that were made after draft
-   19 was approved by the IESG.  Most changes are editorial only.
-   Furthermore:
-
-   *  In Section 12.1, change status 'standard' to 'permanent'
-      (<https://github.com/httpwg/http-core/issues/978>)
-
-   *  In Section 4, align the prose about empty reason phrases with the
-      current ABNF (<https://github.com/httpwg/http-core/issues/1005>)
-
 Acknowledgements
 
    See Appendix "Acknowledgements" of [HTTP], which applies to this
