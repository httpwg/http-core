--- draft-ietf-httpbis-messaging-latest.txt	2022-01-20 09:59:05.763619100 +0100
+++ rfc9112-to-be.txt	2022-01-19 07:27:24.785431700 +0100
@@ -2,17 +2,16 @@
 
 
 
-HTTP Working Group                                      R. Fielding, Ed.
-Internet-Draft                                                     Adobe
-Obsoletes: 7230 (if approved)                         M. Nottingham, Ed.
-Intended status: Standards Track                                  Fastly
-Expires: 24 July 2022                                    J. Reschke, Ed.
-                                                              greenbytes
-                                                         20 January 2022
+Internet Engineering Task Force (IETF)                  R. Fielding, Ed.
+Request for Comments: 9112                                         Adobe
+STD: 97                                               M. Nottingham, Ed.
+Obsoletes: 7230                                                   Fastly
+Category: Standards Track                                J. Reschke, Ed.
+ISSN: 2070-1721                                               greenbytes
+                                                            January 2022
 
 
                                 HTTP/1.1
-                  draft-ietf-httpbis-messaging-latest
 
 Abstract
 
@@ -24,36 +23,19 @@
 
    This document obsoletes portions of RFC 7230.
 
-Editorial Note
-
-   This note is to be removed before publishing as an RFC.
-
-   Discussion of this draft takes place on the HTTP working group
-   mailing list (ietf-http-wg@w3.org), which is archived at
-   <https://lists.w3.org/Archives/Public/ietf-http-wg/>.
-
-   Working Group information can be found at <https://httpwg.org/>;
-   source code and issues list for this draft can be found at
-   <https://github.com/httpwg/http-core>.
-
-   The changes in this draft are summarized in Appendix D.1.
-
 Status of This Memo
 
-   This Internet-Draft is submitted in full conformance with the
-   provisions of BCP 78 and BCP 79.
-
-   Internet-Drafts are working documents of the Internet Engineering
-   Task Force (IETF).  Note that other groups may also distribute
-   working documents as Internet-Drafts.  The list of current Internet-
-   Drafts is at https://datatracker.ietf.org/drafts/current/.
-
-   Internet-Drafts are draft documents valid for a maximum of six months
-   and may be updated, replaced, or obsoleted by other documents at any
-   time.  It is inappropriate to use Internet-Drafts as reference
-   material or to cite them other than as "work in progress."
+   This is an Internet Standards Track document.
 
-   This Internet-Draft will expire on 24 July 2022.
+   This document is a product of the Internet Engineering Task Force
+   (IETF).  It represents the consensus of the IETF community.  It has
+   received public review and has been approved for publication by the
+   Internet Engineering Steering Group (IESG).  Further information on
+   Internet Standards is available in Section 2 of RFC 7841.
+
+   Information about the current status of this document, any errata,
+   and how to provide feedback on it may be obtained at
+   https://www.rfc-editor.org/info/rfc9112.
 
 Copyright Notice
 
@@ -61,13 +43,14 @@
    document authors.  All rights reserved.
 
    This document is subject to BCP 78 and the IETF Trust's Legal
-   Provisions Relating to IETF Documents (https://trustee.ietf.org/
-   license-info) in effect on the date of publication of this document.
-   Please review these documents carefully, as they describe your rights
-   and restrictions with respect to this document.  Code Components
-   extracted from this document must include Revised BSD License text as
-   described in Section 4.e of the Trust Legal Provisions and are
-   provided without warranty as described in the Revised BSD License.
+   Provisions Relating to IETF Documents
+   (https://trustee.ietf.org/license-info) in effect on the date of
+   publication of this document.  Please review these documents
+   carefully, as they describe your rights and restrictions with respect
+   to this document.  Code Components extracted from this document must
+   include Revised BSD License text as described in Section 4.e of the
+   Trust Legal Provisions and are provided without warranty as described
+   in the Revised BSD License.
 
    This document may contain material from IETF Documents or IETF
    Contributions published or made publicly available before November
@@ -149,7 +132,7 @@
      B.3.  Conversion of Date Formats
      B.4.  Conversion of Content-Encoding
      B.5.  Conversion of Content-Transfer-Encoding
-     B.6.  MHTML and Line Length Limitations
+     B.6.  MHTML and Line-Length Limitations
    Appendix C.  Changes from Previous RFCs
      C.1.  Changes from HTTP/0.9
      C.2.  Changes from HTTP/1.0
@@ -157,8 +140,6 @@
        C.2.2.  Keep-Alive Connections
        C.2.3.  Introduction of Transfer-Encoding
      C.3.  Changes from RFC 7230
-   Appendix D.  Change Log
-     D.1.  Since draft-ietf-httpbis-messaging-19
    Acknowledgements
    Index
    Authors' Addresses
@@ -170,7 +151,7 @@
    self-descriptive messages for flexible interaction with network-based
    hypertext information systems.  HTTP/1.1 is defined by:
 
-   *  This document
+   *  RFC 9112
 
    *  "HTTP Semantics" [HTTP]
 
@@ -190,8 +171,8 @@
 
    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
    "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
-   "OPTIONAL" in this document are to be interpreted as described in BCP
-   14 [RFC2119] [RFC8174] when, and only when, they appear in all
+   "OPTIONAL" in this document are to be interpreted as described in
+   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
    capitals, as shown here.
 
    Conformance criteria and considerations regarding error handling are
@@ -274,9 +255,9 @@
    response is interpreted as an unknown or invalid request method), and
    clients are implemented to only expect a response.
 
-   HTTP makes use of some protocol elements similar to the Multipurpose
-   Internet Mail Extensions (MIME) [RFC2045].  See Appendix B for the
-   differences between HTTP and MIME messages.
+   HTTP makes use of some protocol elements similar to Multipurpose
+   Internet Mail Extensions (MIME) [RFC2045].  See Appendix B of this
+   document for the differences between HTTP and MIME messages.
 
 2.2.  Message Parsing
 
@@ -425,8 +406,8 @@
      method         = token
 
    The request methods defined by this specification can be found in
-   Section 9 of [HTTP], along with information regarding the HTTP method
-   registry and considerations for defining new methods.
+   Section 9 of [HTTP], along with information regarding the "HTTP
+   Method Registry" and considerations for defining new methods.
 
 3.2.  Request Target
 
@@ -1055,10 +1036,11 @@
    that is being transferred.
 
    All transfer-coding names are case-insensitive and ought to be
-   registered within the HTTP Transfer Coding registry, as defined in
-   Section 7.3.  They are used in the Transfer-Encoding (Section 6.1)
-   and TE (Section 10.1.4 of [HTTP]) header fields (the latter also
-   defining the "transfer-coding" grammar).
+   registered within the "Hypertext Transfer Protocol (HTTP) Transfer
+   Coding Registry", as defined in Section 7.3.  They are used in the
+   Transfer-Encoding (Section 6.1) and TE (Section 10.1.4 of [HTTP])
+   header fields (the latter also defining the "transfer-coding"
+   grammar).
 
 7.1.  Chunked Transfer Coding
 
@@ -1201,8 +1183,8 @@
 
 7.3.  Transfer Coding Registry
 
-   The "HTTP Transfer Coding Registry" defines the namespace for
-   transfer coding names.  It is maintained at
+   The "Hypertext Transfer Protocol (HTTP) Transfer Coding Registry"
+   defines the namespace for transfer coding names.  It is maintained at
    <https://www.iana.org/assignments/http-parameters>.
 
    Registrations MUST include the following fields:
@@ -1216,7 +1198,7 @@
    Names of transfer codings MUST NOT overlap with names of content
    codings (Section 8.4.1 of [HTTP]) unless the encoding transformation
    is identical, as is the case for the compression codings defined in
-   Section 7.2.
+   Section 7.2 of this document.
 
    The TE header field (Section 10.1.4 of [HTTP]) uses a pseudo-
    parameter named "q" as the rank value when multiple transfer codings
@@ -1533,9 +1515,9 @@
    as a header field might conflict with the "close" connection option.
 
    A client that sends a "close" connection option MUST NOT send further
-   requests on that connection (after the one containing the "close")
-   and MUST close the connection after reading the final response
-   message corresponding to this request.
+   requests on that connection (after the one containing the close) and
+   MUST close the connection after reading the final response message
+   corresponding to this request.
 
    A server that receives a "close" connection option MUST initiate
    closure of the connection (see below) after it sends the final
@@ -1617,12 +1599,12 @@
    messages is defined in Section 8.
 
    When encountering an incomplete close, a client SHOULD treat as
-   completed all requests for which it has received as much data as
-   specified in the Content-Length header or, when a Transfer-Encoding
-   of chunked is used, for which the terminal zero-length chunk has been
-   received.  A response that has neither chunked transfer coding nor
-   Content-Length is complete only if a valid closure alert has been
-   received.  Treating an incomplete message as complete could expose
+   completed a request for which it has received either 1) as much data
+   as specified in the Content-Length header field or 2) the terminal
+   zero-length chunk when a Transfer-Encoding of chunked is used.  A
+   response that has neither chunked transfer coding nor Content-Length
+   is complete only if a valid closure alert has been received.
+   Treating an incomplete message as complete could expose
    implementations to attack.
 
    A client detecting an incomplete close SHOULD recover gracefully.
@@ -1633,8 +1615,8 @@
    thus generating an incomplete close on the server side.
 
    Servers SHOULD be prepared to receive an incomplete close from the
-   client, since the client can often determine when the end of server
-   data is.
+   client because the client can often determine the end of server data
+   stream.
 
    Servers MUST attempt to initiate an exchange of closure alerts with
    the client before closing the connection.  Servers MAY close the
@@ -1648,7 +1630,7 @@
    The "message/http" media type can be used to enclose a single HTTP
    request or response message, provided that it obeys the MIME
    restrictions for all "message" types regarding line length and
-   encodings.  Because of the line length limitations, field values
+   encodings.  Because of the line-length limitations, field values
    within "message/http" are allowed to use line folding (obs-fold), as
    described in Section 5.2, to convey the field value over multiple
    lines.  A recipient of "message/http" data MUST replace any obsolete
@@ -1692,8 +1674,8 @@
 
                             Macintosh file type code(s):  N/A
 
-   Person and email address to contact for further information:  See Aut
-      hors' Addresses section.
+   Person and email address to contact for further information:
+      See Authors' Addresses section.
 
    Intended usage:  COMMON
 
@@ -1746,8 +1728,8 @@
 
                             Macintosh file type code(s):  N/A
 
-   Person and email address to contact for further information:  See Aut
-      hors' Addresses section.
+   Person and email address to contact for further information:
+      See Authors' Addresses section.
 
    Intended usage:  COMMON
 
@@ -1766,7 +1748,7 @@
 
 11.1.  Response Splitting
 
-   Response splitting (a.k.a.  CRLF injection) is a common technique,
+   Response splitting (a.k.a. CRLF injection) is a common technique,
    used in various attacks on Web usage, that exploits the line-based
    nature of HTTP message framing and the ordered association of
    requests to responses on persistent connections [Klein].  This
@@ -1953,16 +1935,12 @@
 13.1.  Normative References
 
    [CACHING]  Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
-              Ed., "HTTP Caching", Work in Progress, Internet-Draft,
-              draft-ietf-httpbis-cache-latest, January 2022,
-              <https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-
-              cache-latest>.
+              Ed., "HTTP Caching", RFC 9111, DOI 10.17487/RFC9111,
+              January 2022, <https://www.rfc-editor.org/info/rfc9111>.
 
    [HTTP]     Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
-              Ed., "HTTP Semantics", Work in Progress, Internet-Draft,
-              draft-ietf-httpbis-semantics-latest, January 2022,
-              <https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-
-              semantics-latest>.
+              Ed., "HTTP Semantics", RFC 9110, DOI 10.17487/RFC9110,
+              January 2022, <https://www.rfc-editor.org/info/rfc9110>.
 
    [RFC1950]  Deutsch, P. and J-L. Gailly, "ZLIB Compressed Data Format
               Specification version 3.3", RFC 1950,
@@ -2173,16 +2151,16 @@
    MIME requires that an Internet mail body part be converted to
    canonical form prior to being transferred, as described in Section 4
    of [RFC2049], and that content with a type of "text" represents line
-   breaks as CRLF, forbidding the use of CR or LF outside of line break
+   breaks as CRLF, forbidding the use of CR or LF outside of line-break
    sequences [RFC2046].  In contrast, HTTP does not care whether CRLF,
    bare CR, or bare LF are used to indicate a line break within content.
 
    A proxy or gateway from HTTP to a strict MIME environment ought to
-   translate all line breaks within text media types to the RFC 2049
-   canonical form of CRLF.  Note, however, this might be complicated by
-   the presence of a Content-Encoding and by the fact that HTTP allows
-   the use of some charsets that do not use octets 13 and 10 to
-   represent CR and LF, respectively.
+   translate all line breaks within text media types to the canonical
+   form of CRLF per [RFC2049].  However, note that this might be
+   complicated by the presence of a Content-Encoding and by the fact
+   that HTTP allows the use of some charsets that do not use octets 13
+   and 10 to represent CR and LF, respectively.
 
    Conversion will break any cryptographic checksums applied to the
    original content unless the original content is already in canonical
@@ -2194,13 +2172,13 @@
    HTTP/1.1 uses a restricted set of date formats (Section 5.6.7 of
    [HTTP]) to simplify the process of date comparison.  Proxies and
    gateways from other protocols ought to ensure that any Date header
-   field present in a message conforms to one of the HTTP/1.1 formats
-   and rewrite the date if necessary.
+   field present in a message conforms to one of the HTTP/1.1 formats;
+   otherwise, rewrite the date if necessary.
 
 B.4.  Conversion of Content-Encoding
 
-   MIME does not include any concept equivalent to HTTP/1.1's Content-
-   Encoding header field.  Since this acts as a modifier on the media
+   MIME does not include any concept equivalent to the Content-Encoding
+   header field of HTTP/1.1.  Since this acts as a modifier on the media
    type, proxies and gateways from HTTP to MIME-compliant protocols
    ought to either change the value of the Content-Type header field or
    decode the representation before forwarding the message.  (Some
@@ -2224,17 +2202,18 @@
    appropriate Content-Transfer-Encoding if doing so will improve the
    likelihood of safe transport over the destination protocol.
 
-B.6.  MHTML and Line Length Limitations
+B.6.  MHTML and Line-Length Limitations
 
-   HTTP implementations that share code with MHTML [RFC2557]
-   implementations need to be aware of MIME line length limitations.
-   Since HTTP does not have this limitation, HTTP does not fold long
-   lines.  MHTML messages being transported by HTTP follow all
-   conventions of MHTML, including line length limitations and folding,
-   canonicalization, etc., since HTTP transfers message-bodies without
-   modification and, aside from the "multipart/byteranges" type
-   (Section 14.6 of [HTTP]), does not interpret the content or any MIME
-   header lines that might be contained therein.
+   HTTP implementations that share code with MIME Encapsulation of
+   Aggregate Documents, such as HTML (MHTML) [RFC2557] implementations
+   need to be aware of MIME line-length limitations.  Since HTTP does
+   not have this limitation, HTTP does not fold long lines.  MHTML
+   messages being transported by HTTP follow all conventions of MHTML,
+   including line-length limitations and folding, canonicalization,
+   etc., since HTTP transfers message-bodies without modification and,
+   aside from the "multipart/byteranges" type (Section 14.6 of [HTTP]),
+   does not interpret the content or any MIME header lines that might be
+   contained therein.
 
 Appendix C.  Changes from Previous RFCs
 
@@ -2254,8 +2233,8 @@
 
    The requirements that clients and servers support the Host header
    field (Section 7.2 of [HTTP]), report an error if it is missing from
-   an HTTP/1.1 request, and accept absolute URIs (Section 3.2) are among
-   the most important changes defined by HTTP/1.1.
+   an HTTP/1.1 request, and accept absolute URIs (Section 3.2 of this
+   document) are among the most important changes defined by HTTP/1.1.
 
    Older HTTP/1.0 clients assumed a one-to-one relationship of IP
    addresses and servers; there was no established mechanism for
@@ -2326,8 +2305,8 @@
 
    In the ABNF for chunked extensions, (bad) whitespace around ";" and
    "=" has been reintroduced.  Whitespace was removed in [RFC7230], but
-   that change was found to break existing implementations (see
-   [Err4667]).  (Section 7.1.1)
+   that change was found to break existing implementations.  (See
+   [Err4667] and Section 7.1.1 of this document.)
 
    Trailer field semantics now transcend the specifics of chunked
    encoding.  The decoding algorithm for chunked (Section 7.1.3) has
@@ -2343,18 +2322,6 @@
    avoid conflicts with the use of ranks in the TE header field.
    (Section 7.3)
 
-Appendix D.  Change Log
-
-   This section is to be removed before publishing as an RFC.
-
-   See <https://www.ietf.org/archive/id/draft-ietf-httpbis-messaging-
-   19.html#appendix-D> for changes up to version 19 of this document.
-
-D.1.  Since draft-ietf-httpbis-messaging-19
-
-   *  In Section 12.1, change status 'standard' to 'permanent'
-      (<https://github.com/httpwg/http-core/issues/978>)
-
 Acknowledgements
 
    See Appendix "Acknowledgements" of [HTTP], which applies to this
